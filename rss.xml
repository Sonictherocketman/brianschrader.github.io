<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0"><channel><title>BiteofanApple</title><link>http://brianschrader.com</link><description>Thoughts, and ramblings about technology, programming, history,
 and whatever else I\'m interested in.</description><language>en-US</language><image><url>http://www.gravatar.com/avatar/11b074a636e00292c98e3e60f7e16595</url><title>Brian Schrader</title><link>http://brianschrader.com</link></image><lastBuildDate>Tue, 29 Sep 2020 21:37:59 +0000</lastBuildDate><generator>sonicrocketman-feed-generator/v2.0</generator><atom:link href="https://brianschrader.com/rss.xml" type="application/rss+xml" rel="self"/><category>programming</category><category>history</category><category>science</category><category>personal</category><category>technology</category><item><guid isPermaLink="true">http://brianschrader.com/archive/the-indie-dev-life-podcast</guid><pubDate>Mon, 28 Sep 2020 19:57:00 -0800</pubDate><category>podcast</category><category>software development</category><category>indie dev</category><category>announcement</category><title>The Indie Dev Life Podcast</title><link>http://brianschrader.com/archive/the-indie-dev-life-podcast/</link><description><![CDATA[<p><img
    class="image-right hide-on-mobile"
    src="https://indiedevlife.fm/static/cover.png"
    width="250"
    height="250"
    style="width:250px;height:250px;"
/></p>
<p><img
    class="image-center show-on-mobile"
    src="https://indiedevlife.fm/static/cover.png"
    width="300"
    height="300"
    style="width:300px;height:300px;"
/></p>
<p>Today I'm excited to announce my new podcast. <a href="https://indiedevlife.fm">Indie Dev Life</a> is a show about the ins and outs of indie software development, and episode 1 is out today in all the right places.</p>
<p>I've wanted to make a podcast for years, but I've never found a topic or theme that I felt I could adequately discuss. Luckily, that changed when I finished writing my upcoming book: <a href="https://goingindie.tech">Going Indie</a>. There was so much that didn't make it into the final draft, and a podcast is the perfect place to expand and explore the more complex, technical and nuanced topics I didn't get to in the book.</p>
<p>The first episode is an attempt to dispel any myths about Indie Development and help convince you to go independent yourself.</p>
<p>I'd love any feedback on the show, the audio quality, or the format and I'd appreciate any topic suggestions. I hope you'll all give <a href="https://indiedevlife.fm">Indie Dev Life</a> a listen. If you like the show, please subscribe and give it a review on <a href="https://podcasts.apple.com/us/podcast/indie-dev-life/id1533547186">Apple Podcasts</a>.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/git-hooks-for-fun-and-profit</guid><pubDate>Sun, 27 Sep 2020 19:44:00 -0800</pubDate><category>git</category><category>hooks</category><category>automation</category><category>bash</category><category>hacks</category><category>web dev</category><title>Git Hooks for Fun and Profit</title><link>http://brianschrader.com/archive/git-hooks-for-fun-and-profit/</link><description><![CDATA[<p>I love Git hooks. For those who aren't aware, Git hooks allow you to specify actions that will be automatically taken whenever certain Git commands start or complete. Git hooks are great for simple, easily forgettable, automate-able tasks. In most projects, <a href="/archive/remembering-things-is-hard/">I use Git hooks</a> to <a href="https://gist.github.com/Sonictherocketman/b196995f768eda4411e0771e9c509237">automatically run preflight checks</a> before I'm allowed to commit any changes to a codebase. Usually this means that the codebase is properly formatted, dangling imports are removed, and basic style checks and tests pass. If these checks don't pass, the commit fails.</p>
<p>That said, Git hooks can do so much more. As I've mentioned many times, this site, along with <a href="//goingindie.tech/">GoingIndie.tech</a> and <a href="http://indiedevlife.fm">IndieDevLife.fm</a> are static sites. They're just files served by apache. Because of that, both sites aren't able to take advantage of a lot of really cool blog ecosystem features like ping change notifications. These notifications are typically sent from blogging systems to search engines or news aggregators to let those services know that the site's content has been updated (i.e. a new post was just published, etc). These notifications help services more quickly discover and disseminate that new content to users. <a href="https://pine.blog/kb/add_external_blog#ping">Pine.blog supports this feature</a> and Wordpress blogs automatically send these notifications to Google, but my simple static site couldn't.</p>
<p>Then I realized that Git hooks can solve this problem!</p>
<p>Both sites are just Git repos that use a <code>post-receive</code> hook to check out the latest version to a directory served by apache. I commit a new set of changes, push those changes to the remote repo on my server, and that hook runs and copies this new version into wherever apache is expecting. All I need to do is add a little snippet of code to that same hook to send Pine.blog a notification, because by definition: whenever a Git commit is received, the site has changed.</p>
<pre><code># Send an XML-RPC extendedPing notification to Pine.blog
echo "&lt;methodCall&gt;
    &lt;methodName&gt;weblogUpdates.extendedPing&lt;/methodName&gt;
    &lt;params&gt;
        &lt;param&gt;&lt;value&gt;&lt;string&gt;brianschrader.com&lt;/string&gt;&lt;/value&gt;&lt;/param&gt;
        &lt;param&gt;&lt;value&gt;&lt;string&gt;https://brianschrader.com/&lt;/string&gt;&lt;/value&gt;&lt;/param&gt;
    &lt;/params&gt;
&lt;/methodCall&gt;
" | curl -H "Content-Type: application/xml" -X POST -d @- \
    https://pine.blog/api/xml-rpc/ping
</code></pre>
<p>Adding this simple curl script to my <code>post-receive</code> hook did the trick! Now my blog posts will more quickly appear on Pine.blog! Git hooks for the win.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/the-little-engine-that-could</guid><pubDate>Sat, 26 Sep 2020 23:52:00 -0800</pubDate><category>blogging</category><category>programming</category><category>longevity</category><title>The Little Engine that Could</title><link>http://brianschrader.com/archive/the-little-engine-that-could/</link><description><![CDATA[<p>I originally wrote the blog engine for this site <a href="/archive/the-new-new-cms/">in 2014</a>. I've added a few little features and fixed a couple of bugs over the years, but most of the code hasn't been touched or improved since it was originally written. Over the past few weeks though, I've improved the engine dramatically. I've fixed a number of  long-standing bugs, improved some of the functionality, and added multi-site and podcasting support. That said most of the code is still identical to how it was in 2014. It's crazy to me just how much value I've gotten out of that code. Not only did it teach me how to make blogging software and helped me get a handle on Python, it has powered every blog post I've written since.</p>
<p>After nearly 7 years, the site recently needed an overhaul. I wanted to set up a new site for my book at <a href="https://goingindie.tech">goingindie.tech</a> and I originally considered just using Jekyll, or even hand-coding a single HTML page, but I eventually settled on adapting my existing blog engine to support multiple sites using a YAML configuration file. A lot of the site-wide variables were just hard-coded at the top of one of the Python files, so moving them to a YAML config was easy. After a few other fixes were in place, everything just sort of came together. I had two sites working on one blog engine.</p>
<p>I love seeing how code evolves over time, and how old code changes us in turn. After nearly 7 years, I'm still using the same, old blogging engine writing posts on this site. I try not to embark on refactors very often, mostly because I don't think they're valuable most of the time. But that means that, aside from a few modernizations and improvements, the work I did in 2014 is still paying off.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/on-uber-lyft-and-labor-law</guid><pubDate>Thu, 20 Aug 2020 18:34:00 -0800</pubDate><category>uber</category><category>lyft</category><category>ab5</category><category>labor law</category><title>On Uber, Lyft, and Labor Law</title><link>http://brianschrader.com/archive/on-uber-lyft-and-labor-law/</link><description><![CDATA[<p>A storm has been brewing in California. No, not the Coronavirus pandemic or the <a href="https://www.sandiegouniontribune.com/news/california/story/2020-08-19/northern-california-wildfires-threatening-thousands-of-homes">massive fires</a>, though both are incredibly important and widespread. California is trying to reign in a few powerful tech industry players. What we're witnessing now may become either a cautionary tale or a key example of just how these battles can be waged in the future against even bigger and more powerful giants.</p>
<p>Uber and Lyft have both circulated the idea that they will soon halt operations in California after a state judge forced them to comply with A.B. 5, the California law that requires businesses like Uber and Lyft to classify certain workers as employees instead of contractors. The law, which went into effect in January and has been debated for over a year in the state, would force Uber and Lyft to classify most of their drivers as employees. This change would ensure that those drivers maintained a minimum wage, health benefits, and other benefits under state law, none of which are available to contractors.</p>
<p>After the law went into effect, Uber and Lyft sued and have been both pursuing a legal case and supporting a ballot measure that explicitly excludes ride-share companies from A.B. 5. According to the <a href="https://www.sandiegouniontribune.com/business/technology/story/2020-08-20/why-are-uber-and-lyft-threatening-to-shutdown-in-california">San Diego Union Tribune</a>, in early August a state judge, "ordered the companies to classify their drivers as employees rather than independent contractors," when they'd prefer to wait until the fate of their ballot measure is decided in November. They also argue that they don't have enough time to comply, even though they've been given months before the law went into effect and eight more months afterwards to comply.</p>
<p>This legal battle is unlike the one waged over the California Consumer Privacy Act (CCPA) which also went into effect recently, and was primarily targeted at data-brokers like Facebook, Google, and others. CCPA, which merely requires a few key, common-sense measures, did not directly hinder the operations of Facebook, Google, or others. It simply made their practices more transparent to users and was slightly annoying for them to implement. A.B. 5 is different. The law represents a fundamental threat to Uber and Lyft's current business model. Both rideshare companies, to varying degrees, rely on huge investor subsidies and loopholes in labor laws to make their business viable. Uber alone, loses over $1.5 billion each quarter. Let that sink in. Both companies are growing, but to do so they require investors to subsidize rates and they rely on underpaid drivers to balance their revenue model. What neither company wants to say, but that is abundantly clear from their reactions, is that they cannot exist as multi-billion dollar companies if they had to comply with California's labor laws, and they can't attract massive amounts of venture capital if they can't grow at current rates. To be fair, I'm sure that Exxon-Mobile, Walmart, Google, and Apple would be far more profitable if they could ignore labor laws too. Paying people a living wage is expensive, as is giving them health care, so companies don't want to do it, but that's why we have these laws.</p>
<p>During the initial debate of A.B. 5, Uber and Lyft, as well as many other rideshare and delivery apps, made their case to the voters in California and to the legislators that passed the bill, but they lost. Now both companies are threatening to take their ball and go home rather than accept that perhaps their entire business model is flawed and should be fixed. Uber and Lyft could reclassify their workers and still be enormous companies, but not as enormous as they are today, or they could choose to pout telling their users that it's all or nothing. I don't want to see Uber and Lyft leave California or disappear (even though Uber's corporate culture is often disgraceful and cause for separate concern). They offer a useful service. I've used both companies a lot over the years. I've also used Uber Eats, Postmates, Doordash, and other delivery companies to get a burrito and to satisfy a craving for Saag Paneer at 2AM. But that doesn't mean that I think their service is so valuable that they should be immune from laws that other companies are subject to. Taxi companies and delivery drivers have been around for a long time. Those endeavors can be profitable, and they can be mutually beneficial for both the company and the workers. This, however, isn't the framing that Uber and Lyft are building around this debate. In their eyes, either they get a pass on obeying labor law, or they go away. But it's important to remember, that's not the only choice they have. It's not the only path they could take. It is, however, the one they've chosen to take.</p>
<blockquote>
<p>I'll just say this: if your company can only exist if it violates civil rights or labor law, then I don't think you should exist.
- <a href="https://pine.blog/u/sonicrocketman/archive/a23fd365-346e-45b1-8762-f73326e6d0b7">my post on Pine.blog</a></p>
</blockquote>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/two-is-better-than-one</guid><pubDate>Thu, 09 Jul 2020 02:54:00 -0800</pubDate><category>blog</category><category>self</category><category>update</category><title>Two is Better than One</title><link>http://brianschrader.com/archive/two-is-better-than-one/</link><description><![CDATA[<p>It finally happened. After 6 years (!) of blogging on this site, I finally felt the need to add a blogroll and sidebar. Changes like this come slowly. For one, I had to update the custom code that runs the site. But it also comes slowly for another reason: it wasn't broken, so why would I fix it? This site has worked fine with a one-column layout for years. It's only now, when I wanted to shove more into the navbar than would comfortably fit, do I feel that I needed to make this change.</p>
<p>Behind the scenes is the real magic. I now have the ability to feature my posts automatically and publish hidden 🤫 posts that don't appear on the feed, the archive, or the home page. I've wanted that feature for a while and I've basically been hacking something similar together for years to support my about page. Keep watching for more developments.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/novels-and-insurmountable-tasks</guid><pubDate>Mon, 29 Jun 2020 22:12:00 -0800</pubDate><category>writing</category><category>novels</category><category>word count</category><category>goal setting</category><title>Novels and Insurmountable Tasks</title><link>http://brianschrader.com/archive/novels-and-insurmountable-tasks/</link><description><![CDATA[<p>I've wanted to write epic fantasy for years. In college I fleshed out a pretty substantial world, a unique magic-system, and an overarching conflict, but I never got deep into the characters, their journey, or their individual story-arcs. I discovered that I like building worlds and systems, but crafting plots and characters is a lot more difficult. The world, and the magic-system especially, has stuck with me, and although I'd make significant changes to it now, I still think that the idea is solid at its core. I'd love to write it someday.</p>
<p>Writing fiction, especially fantasy, just seems like such a monumental task. So much of the sci-fi and fantasy novels that I've read (especially from authors like Brandon Sanderson) are filled with epic stories across multiple viewpoints over decades of each character's life spanning thousands of pages. Putting something like that together, even with years of time, seems like something I just don't have the strength of will to even dream of accomplishing.</p>
<p>In building and launching my own apps and services like <a href="https://pine.blog">Pine.blog</a>, <a href="https://nine9s.cloud">Nine9s</a>, <a href="https://d20.photos">d20.photos</a> even <a href="https://adventurerscodex.com">Adventurer's Codex</a>, I've learned that while I can build and maintain large projects, they take a long time to come to fruition. One of the great things about software though is that you can launch with a subset of features and improve it as you go. This means that even for huge projects like Pine.blog, I could see results, launch features, get feedback and share my work-in-progress all while improving it and staying motivated to continue. The idea of spending years writing a manuscript thousands of pages long, editing it, tweaking it, and being unable to publish it until every box was checked is just not something I think I could force myself to do. I'd get bored or burn out.</p>
<p>But thousands-of-page-novels are just one form of the genre. There's another, oft overlooked form: novellas.</p>
<p><img
    class="image-center"
    alt="The Wizard of Earthsea Trilogy"
    src="/images/blog/earthsea-stack.jpg"
/></p>
<p>I love the <em>Wizard of Earthsea</em> trilogy. I first discovered the books in high school and eventually re-read them after college. They're a series of short, kid friendly books about a wizard who goes to a wizard school to learn magic and his adventures in the island world of Earthsea.<sup>1</sup> Each of them is less than 200-pages long and clock in at around <a href="https://blog.fostergrant.co.uk/2017/08/03/word-counts-popular-books-world/">50,000 words</a>. Compare that to Brandon Sanderson's <em>Way of Kings</em> which clocks in at <a href="https://www.readinglength.com/book/isbn-0765365278">398,460 words</a> across over 1,280 pages and Earthsea looks tiny. To me though, it also starts to look attainable.</p>
<p>Writing fantasy isn't really comarable to writing non-fiction, but at an average of ~1,000 words per day a novella of similar length to Earthsea would take about 50 working days to write, just about two months working full-time. That's completely possible, even part-time a first-draft could be completed in a few months and ready for feedback, editing, review, and possibly publication.</p>
<p>I don't want to give off the impression that I'm going to become a fantasy writer any time soon, I'm not, but this realization did rekindle my interest in such a prospect quite a bit. Sure, the structure of a series of novellas is different than a single monumental tome, but if one would be impossible and the other attainable, then it's not really a decision worth considering.</p>
<p>So much about a hobby or side-project is about staying motivated through to completion and if a 1,000 page novel is out of the question, maybe it's not the novel part that needs rethinking.</p>
<div class="footnote">
<sup>1</sup> These books predate Harry Potter by over two decades and inspired the magic system in Christopher Paolini's Inheritance Series.
</div>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/the-fall-of-civilizations-podcast</guid><pubDate>Mon, 29 Jun 2020 03:47:00 -0800</pubDate><category>podcasts</category><category>history</category><category>cultures</category><title>The Fall of Civilizations Podcast</title><link>http://brianschrader.com/archive/the-fall-of-civilizations-podcast/</link><description><![CDATA[<p>I love history. I grew up watching the History channel (back when they actually had real history shows) and PBS documentaries. These days those kinds of things don't really hit the spot anymore. I've turned to podcasts instead. There's a ton of great history podcasts out there and I've written before about my love of this <a href="https://thehistoryofrome.typepad.com">History of Rome</a> podcast, its successor <a href="https://thehistoryofbyzantium.com">The History of Byzantium</a> podcast, the <a href="https://www.thebritishhistorypodcast.com">British History Podcast</a> and the fantastic <a href="https://www.revolutionspodcast.com">Revolutions podcast</a>. But there's another show that I've really fallen in love with recently: <a href="https://fallofcivilizationspodcast.com">The Fall of Civilizations Podcast</a>.</p>
<p>Each episode of TFoC is a narrative re-telling of the fall of a particular civilization. The, typically 2-3 hour long, episodes start with an overview of the culture, exposing you to how it felt to live at that time and in that place, and the second half covers how this civilization fell. Each show has voice actors, music, excerpts from songs or stories shared at the time, and is chock full of well-researched, excruciatingly detailed history.</p>
<p>That's not why I love the show though. I love it because I've left every episode feeling some degree of the same feeling: a mixture of wonder, sadness, hope, and intense loss for the cultures of the past who watched their world come to an end. It's cheery stuff. That may not sound very... good, and perhaps it isn't, but it reminds me that history is full of tragedy, and loss, but also full of hope and positive change. It reminds me that our world has not become what it is by accident or without pain and suffering. I just finished the episode about the fall of the Aztec empire, a tale I'd studied in school, but never truly understood at the level I feel I do now. As with every episode, I know how it ends, but it's always the journey that matters.</p>
<p>This podcast, as well as all of the others mentioned in this post come <strong>highly</strong> recommended. Each of these shows is so captivating in its own right that I've, on many occasions, just sat with a cup of tea, coffee, or a cocktail and just listened, as if to a radio play, for hours. It's almost as if these kinds of narrative histories are like the oral tales that ancient tribes would tell around a fire: the stories of cultures, ancient and great, and the tale of how they fell.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/d20photos-a-public-domain-dd-image-repository</guid><pubDate>Wed, 24 Jun 2020 17:00:00 -0800</pubDate><category>d20.photos</category><category>D&amp;D</category><category>Pathfinder</category><category>public domain</category><category>image hosting</category><category>primitive</category><title>d20.photos: A Public Domain D&amp;D Image Repository</title><link>http://brianschrader.com/archive/d20photos-a-public-domain-dd-image-repository/</link><description><![CDATA[<p>I bought the domain <a href="https://d20.photos/">d20.photos</a> on Nov 23rd, 2018 with the goal of building a free-to-use, public-domain image hosting service for D&amp;D, Pathfinder, and other fantasy RPGs. Today, that goal is realized.</p>
<p><a href="https://d20.photos/">
  <img
    src="https://d20.photos/static/images/apple-touch-icon.jpg"
    alt="d20.photos Logo"
    style="max-width:150px; width:80%; box-shadow:3px 3px 5px darkgrey; border-radius:30px; padding:0; margin:15px; float:right;">
</a></p>
<p>Finding images for your D&amp;D campaigns is really difficult, especially if you're looking to sell your campaign. Most artwork isn't licensed in a way that makes it easy for low-budget creators to use and often there's no way to easily find images for settings or places in your game. <a href="https://d20.photos/">d20.photos</a> aims to change that by providing a free, community-driven, human-curated image hosting service for D&amp;D/Pathfinder related images. <a href="https://d20.photos/">d20.photos</a> aims to be a one-stop-shop for all your image needs. Since all images on the site are released into the Public Domain, you can be sure that you're ok to use, re-use, modify, them and even include them in your paid campaign or story.</p>
<p>I've been collecting images for years (over 100) with the goal of eventually adding them to a service like this. I have a lot more to upload, and anyone in the D&amp;D community can do the same.</p>
<h3>Abstract Images</h3>
<p>One common problem for campaign or story writers is that while there are a plethora of photos on the Web that they can use in their games, pictures of the real-world are often too real. I know I will almost always choose a painting or other artwork over a photo even if they're harder to find. <a href="https://d20.photos/">d20.photos</a> tries to solve this problem as well.</p>
<p><img
    class="image-right" src="https://p.d20.photos/file/d20-photos/finalized-media/05422d20-f39e-4e8f-a254-255281204f65-05422d20-f39e-4e8f-a254-255281204f65_sm3423.jpg"
    width="300"
    height="300"
    style="max-width:300px;"
/></p>
<p>Whenever a new photo is approved, a computer-generated version of the image is created by a wonderful open-source library called <a href="https://github.com/fogleman/primitive">Primitive</a> by Michael Fogleman. The library uses primitive shapes (in this case triangles) of various colors and sizes to reproduce the original image. These primitive, or abstract, versions are often really beautiful and have a certain fantasy air about them. <a href="http://adventurerscodex.com">Adventurer's Codex</a> actually uses these primitive images too <a href="https://adventurerscodex.com/dm.html">on the landing pages</a>.</p>
<p>I find that these abstract versions "feel" more appropriate for a fantasy game and while Primitive does struggle with images with a ton of fine detail (like photos with lots of trees), it's certainly better than nothing.</p>
<h3>The Environment (Again)</h3>
<p>Like <a href="https://nine9s.cloud/">Nine9s.cloud</a>, <a href="https://d20.photos/">d20.photos</a> is hosted in London in a datacenter powered by 92% clean and renewable energy. d20.photos runs on the same size of server as Nine9s, so I didn't need to recalculate the environmental impact. Unless I just can't make it work, I think I'm going to be hosting most of my software in the Linode U.K. datacenter from now on, or at least until one of their U.S. partners commits to using renewable energy in the same way. It's not a big thing, but it's a thing I can do.</p>
<p>I hope <a href="https://d20.photos/">d20.photos</a> is useful to you, and if it is, I'd love to hear about it. The site is donation based, so if you like what you see, please consider supporting it. If enough people do, it'll be a lot easier to justify improving it in the future.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/careful-with-complex-querysets</guid><pubDate>Thu, 18 Jun 2020 18:57:00 -0800</pubDate><category>django</category><category>databases</category><category>Querysets</category><category>cautionary-tale</category><title>Careful with Complex Querysets</title><link>http://brianschrader.com/archive/careful-with-complex-querysets/</link><description><![CDATA[<p>Today I learned something about filtering Django Querysets and fixed a long standing bug. But first some context.</p>
<p>As a feed reader, Pine.blog needs to parse feeds. To do this, every 5 minutes, Pine.blog checks to see which feeds it needs to parse. A feed can fall into one of three categories:</p>
<ul>
<li><strong>Constantly changing feeds with active subscribers</strong>: Feeds that change regularly (i.e. microblogs, Reddit feeds, etc) and have recently active users subscribed to them.</li>
<li><strong>Less frequently changing feeds with active subscribers</strong>: Feeds that may update rarely, but still have recently active users subscribed to them.</li>
<li><strong>Everything else</strong>: Feeds with no one subscribed to them, but are still included in the Feed Directory, or feeds with subscribers who haven't logged in to Pine.blog recently.</li>
</ul>
<p>To do all of this, Pine.blog keeps track of how often a feed is typically updated, but if it can't tell, it sets the <code>approximate_update_frequency</code> to <code>NULL</code>. Then each of the three categories are checked at different frequencies, ensuring that everything gets parsed at least once every 24 hours, but things that change more often, or with active users subscribed to them, are given priority and parsed more regularly: every 15 or every 30 minutes respectively.</p>
<p>It's the second category that's long been acting weird. And that's where my bug comes in.</p>
<h3>The Actual Code</h3>
<p>The bug I discovered has to do with how I group the feeds into those categories. Specifically, I learned that this:</p>
<pre><code>Q(approximate_update_frequency__in=[
    None,
    UpdateFrequency.CONSTANTLY,
    UpdateFrequency.FEW_PER_DAY,
])
</code></pre>
<p>Is not the same as this:</p>
<pre><code>Q(approximate_update_frequency__in=[
    UpdateFrequency.CONSTANTLY,
    UpdateFrequency.FEW_PER_DAY,
]) | Q(approximate_update_frequency__isnull=True)
</code></pre>
<p>The critical change is the switch from including <code>None</code> in the list of allowed items to explicitly filtering by <code>isnull</code>. It seems minor, and it totally feels like you should be able to use None in an <code>IN</code> collection, but you can't.</p>
<p>Funnily enough, the query sort-of works with the <code>None</code> in there, it just ignores the <code>None</code> and uses the other two. The true issue arises when you try to inverse the condition using the <code>NOT</code> operator. This is exactly what Pine.blog's dispatch tasks were doing. It would first fetch the list of every feed matching that criteria, and then do a second fetch of everything that didn't match, and that second one is where results were getting lost.</p>
<p>All this means that some feeds in the second group were being lumped into the third group, delaying their posts from appearing for hours. I've known about this issue for a while, because the posts from this blog (which squarely fall into the second group) weren't showing up in Pine.blog until the following day.</p>
<p>Glad to finally squash that bug.</p>
<div class="footnote">
* This update also migrates Pine.blog to Python 3.7. It's been on 3.6 for years, and I only upgraded it because homebrew screwed up my 3.6 install and it was easier to upgrade Pine.blog than downgrade my Mac's Python version. Fun times.
</div>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/announcing-nine9scloud-</guid><pubDate>Wed, 10 Jun 2020 16:43:00 -0800</pubDate><category>nine9s</category><category>launch</category><category>announcement</category><category>uptime monitoring</category><category>saas</category><title>Announcing Nine9s.cloud 🎉</title><link>http://brianschrader.com/archive/announcing-nine9scloud-/</link><description><![CDATA[<p><center><i>We interrupt this blog for a special announcement</i></center></p>
<p>I'm super excited to announce the release of <a href="https://nine9s.cloud/?ref=ba">Nine9s</a>, a service providing simple, no-fuss uptime monitoring for developers on a budget. Whether you're a hobbyist with a blog, an indie-dev working on some side projects, or a small dev shop, Nine9s is here to make sure your site is up and responsive for your users and to alert you of any slowdowns or outages.</p>
<p>I've used Uptime Monitoring services for years, but I've always been left slightly dissatisfied. There's lots of great services out there and they do a lot of stuff, but they either feel like overkill, cost way too much, or don't quite do what I need. That's why I built Nine9s.</p>
<p>If you're in the market for inexpensive, but powerful, Uptime Monitoring, then please check out Nine9s. You can even get started for free and see what it has to offer, and check out the <a href="https://nine9s.cloud/kb/feature-roadmap">roadmap</a> for what's coming.</p>
<p><a href="https://nine9s.cloud/?ref=ba">Nine9s.cloud: No-fuss Uptime Monitoring for Developers &#8594;</a></p>
<h3>Nine9s and the Environment</h3>
<p>Nine9s is the first service I've ever run that's powered by servers outside the U.S., and there's a reason for that. I care about the environment and about mitigating the effects of Climate Change (I'm a vegetarian for some of the same reasons). I've always preferred to use <a href="https://www.linode.com">Linode</a> for my hosting and while they have lots of datacenters in the U.S., none have committed to using energy from clean and renewable sources; though, their datacenters in Europe do.</p>
<p>I've written up a whole explanation about how and why <a href="https://nine9s.cloud/kb/infrastructure">Nine9s is hosted in London as well as calculating the environmental impact of running the service</a>, and I hope you check it out. Running a small service like Nine9s off of green energy isn't really going to make a big difference in the world, but it's not going to actively make things worse either, and that's what matters.</p>
<h3>From Idea to Launch in Two Weeks</h3>
<p>I've had the idea for Nine9s for years, but I'd never gotten around to actually building out the service. Besides the fact that I never do anything until I have a domain name, I'd just never had the time. That has changed recently.</p>
<p>On May 27th, exactly two weeks ago, I bought the domain <a href="https://nine9s.cloud/?ref=ba">nine9s.cloud</a> and got to work. Everything you see was built and designed in that time. This is the fastest I've ever launched a commercial product, and I don't think I could really do it again. Nine9s is a fairly simple service, and I ripped most of the infrastructure from <a href="https://pine.blog/">Pine.blog</a> which made getting started really trivial. That said, I'm really amazed just how quickly I was able to put everything together. I took very few shortcuts, wrote good code, and spent a good chunk of time designing and implementing the service; I don't think it's what I did that matters, it's what I didn't do. Nine9s has no dynamic front-end, it runs on one server, it uses tools I know by heart, and it does one job and does it well.</p>]]></description></item></channel></rss>
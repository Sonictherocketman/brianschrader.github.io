<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0"><channel><title>BiteofanApple</title><link>http://brianschrader.com</link><description>Thoughts, and ramblings about technology, programming, history,
 and whatever else I'm interested in.</description><language>en-US</language><image><url>https://www.gravatar.com/avatar/11b074a636e00292c98e3e60f7e16595</url><title>Brian Schrader</title><link>http://brianschrader.com</link></image><lastBuildDate>Sat, 02 Jan 2021 20:52:48 +0000</lastBuildDate><generator>sonicrocketman-feed-generator/v2.0</generator><atom:link href="https://brianschrader.com/rss.xml" type="application/rss+xml" rel="self"/><category>programming</category><category>history</category><category>science</category><category>personal</category><category>technology</category><item><guid isPermaLink="true">http://brianschrader.com/archive/breadcrumbs-and-pinboard</guid><pubDate>Thu, 31 Dec 2020 01:44:00 -0800</pubDate><category>personal</category><category>software</category><title>Breadcrumbs and Pinboard</title><link>http://brianschrader.com/archive/breadcrumbs-and-pinboard/</link><description><![CDATA[<p>I use <a href="https://pinboard.in">Pinboard</a>, and I have for some time. For years, I've dumped the occasional interesting article there and then largely forgotten about it. Recently though, I've decided to really dive in and start using the service to solve a problem I routinely have.</p>
<p>I read a lot of articles, as I'm sure many of you do, and I often refer to them in conversation or in a blog post. When I do reference an article I like to cite it, even in conversation, but I often can't find the article anymore nor can I remember enough about it to effectively search for it. I think it's important to cite your sources, even casually, because it helps you recognize your own filter bubble, and it helps to ground you in the realm of facts. It also helps the other people you're conversing with better understand and counter your argument if they can tell where you're getting your information from. Plus, if you can find the original source, you can always verify that you're remembering the information correctly.</p>
<p>In an effort to forever solve this problem, I've started archiving essentially every article I read in Pinboard, and I do this whether or not I think the article was any good. This effectively turns Pinboard into a breadcrumb trail that I can use to retrace my path on the Web and hopefully dig up and verify any information that I half-remember.</p>
<p>A while back, I started <a href="https://pine.blog/u/sonicrocketman/archive/e335c9e3-4e5f-4249-ad15-644c33bd658b">taking notes</a> when I read books so I can more easily remember and refer back to information I may need, but I don't want to keep a notebook for everything I read online. Enter Pinboard.</p>
<p>There are a few things that my system is lacking so far. Most importantly, I'm still having trouble finding some articles when I know that I've bookmarked them. It seems that either Pinboard's search isn't working how I'd expect or I'm not giving it enough metadata to search through when bookmarking articles.</p>
<p>Hopefully, as I get more accustomed to this new way of using Pinboard I'll drastically increase the frequency when I can recall some useful fact and also produce a worthy citation.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/history-myth-and-talking-cows</guid><pubDate>Sun, 27 Dec 2020 08:34:00 -0800</pubDate><category>history</category><category>book</category><title>History, Myth, and Talking Cows</title><link>http://brianschrader.com/archive/history-myth-and-talking-cows/</link><description><![CDATA[<p>I started reading <a href="https://www.indiebound.org/book/9780140448092">The Early History Of Rome</a> by Livy a little over two years ago, but today I finally finished it. It's a good book and a fun and illustrative read, but there's a reason it took me so long to get through.</p>
<p>Livy, or Titus Livius, as he was actually known, was a Roman writer <a href="https://en.wikipedia.org/wiki/Livy">born in 64 or 59 BC</a>, so his writing style is... strange by modern standards. I would often have to re-read multiple pages after realizing that I had no idea who was doing what. This is compounded by the fact that there are literally hundreds of names and, in a very Roman tradition, they are all incredibly similar. I'm also a fairly slow reader, so between the constant re-reading, my overall slow reading speed, and huge reading backlog, I could only finish 20 pages before getting distracted with another <del>easier</del> book.</p>
<p>That said, Livy's work is certainly worth reading if only for some of the truly amazing stories he tells. Sometimes the stories are so completely outlandish that I have to stop and remind myself that this isn't a fantasy story, it's history. Now, obviously there is myth and legend interspersed with it, and in these early histories they're effectively inseparable. After all, it's claimed &mdash;by multiple Roman authors&mdash; that the city was founded by two children nursed by a wolf, before the oldest kills the youngest, becomes king, and ascends to heaven in a cloud. It's an interesting read.</p>
<p>I'd like to share just one passage that I earmarked early on in the book. For context, know that the Romans were <em>incredibly</em> superstitious. They were constantly on the lookout for signs from the gods and they rarely did anything without performing some sacred ritual and seeking approval from the gods (see the <a href="http://www.anecdotesfromantiquity.net/the-sacred-chickens-of-rome/">story of the Sacred Chickens</a>). In this passage, the consuls for the year (461 BC) had just been elected, and war would soon come to the Romans though they didn't know it yet.</p>
<blockquote>
<p>The year was marked by ominous signs: fires blazed in the sky, there was a violent earthquake, and a cow talked &mdash; there was a rumor that a cow had talked the previous year, but nobody believed it: this year they did. Nor was this all: it rained lumps of meat. Thousands of birds (we are told) seized and devoured the pieces in mid-air, while what fell to the ground  lay scattered about for several days without going putrid. The Sibylline Books were consulted by two officials, who found them in them the prediction that danger threatened, from 'a concourse of alien men' who might attack 'the high places of the City, with the shedding of blood'. There was also found, amongst other things, a warning to avoid factious politics.</p>
<p>&ndash; Livy, History of Rome, 3.10</p>
</blockquote>
<p>There is so much that I love about this passage, but my absolute favorite thing is that Livy reports that <strong>a cow talked</strong>, but for some reason the first time this happened it was dismissed, and that a cow talking is apparently a warning to avoid factious politics. If that's the case, then I kinda wish a cow would talk today.</p>
<p>I've already purchased the <a href="https://www.indiebound.org/book/9780140443882">second volume</a> of Livy's work and it's on my shelf ready to go. Hopefully I can get through this one a bit quicker.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/arbitrary-achievement-unlocked</guid><pubDate>Thu, 10 Dec 2020 23:14:00 -0800</pubDate><category>podcast</category><category>indiedevlife</category><category>personal</category><category>productivity</category><category>indie</category><title>Arbitrary Achievement Unlocked</title><link>http://brianschrader.com/archive/arbitrary-achievement-unlocked/</link><description><![CDATA[<p>Today marks the 10th episode of my podcast <a href="https://indiedevlife.fm">Indie Dev Life</a>, and while that might not seem like a huge milestone, it's an important one because I decided it was. When I decided to start a podcast I, arbitrarily, set a goal for myself to publish at least ten episodes. After that I would decide if I liked doing it and if I would continue. Today I achieved my arbitrary goal.</p>
<p>I do plan to continue the podcast. I like doing it, and it's fun to both record and edit. So far, I like both the format and the length. As is hopefully apparent, I'm trying to model IDL on <a href="http://developingperspective.com">_davidsmith's Developing Perspective</a> podcast. I enjoyed that show (and it's casual format) a lot and I think a short show works well for the kind of show I'm trying to create. So, if you like the show, don't worry there's going to be more of it.</p>
<h3>Arbitrary Deadlines &amp; Achievements</h3>
<p>I'm a procrastinator by nature, so I have to set, what are often completely arbitrary and unnecessary, deadlines for myself if I want to accomplish basically anything, plus I have a terrible memory. So, I tend to create task lists for myself and assign tight due dates so that I can remember what I need to do and ensure that I actually get it done. And whenever possible, I try to stick to my arbitrary deadlines no matter the work involved. If I decided something will launch tomorrow, then it will. I do the same with arbitrary goals.</p>
<p>I'm not sure why my brain finds it so much easier to work under a deadline, but it does. Even when I know the deadline is meaningless, simply having one is enough to trick my brain into thinking it's real. The procrastinator in me will always put off work until the last minute (unless it's something I enjoy playing with) so I often make my self-imposed deadlines tighter than they probably should be.</p>
<p>I do the same thing with setting achievements for myself. When I released <a href="https://goingindie.tech">Going Indie</a>, I set a series of goals for what I'd consider a successful release. My expectations being what they are, I tend to make my first goal incredibly low so that I'm basically guaranteed to hit it. For Going Indie, my first goal was to sell 10 copies, and thanks to you all, I sold many more than that. After the first goal, the rest follow a pretty simple format:</p>
<ul>
<li>What is the bare minimum I'd consider successful?</li>
<li>What would I be happy with?</li>
<li>What would I want to have happen?</li>
<li>What would I dream of happening?</li>
<li>What is basically impossible?</li>
</ul>
<p>This tiered structure helps me understand myself and my own expectations. It also keeps me motivated. If I say I'd be happy with something, and set my expectations accordingly, then when I achieve it, I feel good. Without this structure, I tend to trap myself into believing that my wildest dream scenario is just as likely as the rest and then I'm disappointed when that dream doesn't come true.</p>
<p>I say this in Going Indie, but managing your own expectations is incredibly important, not only to your own motivation, but to your mental health. If you constantly convince yourself that an idea or project is going to make it big, and then it doesn't, you're going to get discouraged. But if you set reasonable goals, and learn to manage your own expectations (of yourself, your capabilities, and your results) then it's a lot easier to appreciate the successes you do achieve and keep going to bigger and better things.</p>
<p>tl;dr I made 10 episodes of my podcast, and I want to make more.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/a-false-dichotomy</guid><pubDate>Sat, 05 Dec 2020 00:11:00 -0800</pubDate><category>politics</category><category>government</category><category>covid-19</category><title>A False Dichotomy</title><link>http://brianschrader.com/archive/a-false-dichotomy/</link><description><![CDATA[<p>An editorial of mine was <a href="https://sduptownnews.com/guest-editorial-the-way-forward-conquering-the-pandemic/">published today in a local paper</a>. It's the first in a short series about America's future and how we can work together to solve our most pressing problems, and like most things these days this first essay is about the COVID-19 pandemic.</p>
<blockquote>
<p>COVID-19 has disrupted our entire way of life and it seems like that will continue for longer than we would like or hope. The race to a vaccine and mass inoculation is ongoing, but it will take time to see the fruits of that labor. In the meantime, we are not helpless...our current situation is not unsalvageable.</p>
</blockquote>
<p>The article ends with a phrase I've repeated over and over again since March.</p>
<blockquote>
<p>In short, the current choice between a forced reopening during a pandemic or a safe but devastating shutdown is a false dichotomy — one created by a refusal to help fellow Americans during a crisis.</p>
</blockquote>
<p>So far, aside from modest measures (one-time checks, boosting UI insurance, and SBA loans) the federal government has yet to fully respond to the pandemic. Many other nations shut down their economies, but they've also provided aid to individuals and businesses so that they can weather those shutdowns and emerge, raring to go, when they're over. Instead of doing that, our federal government has <a href="https://www.nytimes.com/2020/04/22/us/coronavirus-mcconnell-states-bankruptcy.html">refused to help states and local governments</a> with revenue shortfalls, failed to provide adequate financial aid to individuals and businesses in need, and overall acted as if the pandemic is nothing to worry about even though, at time of writing almost 300,000 Americans have died of the disease. Instead, the President and Senate Republicans have simply insisted that their hands are tied, that the incredible capabilities of the most powerful nation on earth simply can't be used to help its people.</p>
<p>A lot of this disfunction lies at the feet of Republicans in the Senate. To it's credit, the House passed a <a href="https://www.vox.com/2020/5/15/21258854/house-three-trillion-stimulus-bill">new round of pandemic relief months ago</a>, but the Senate never even considered it, and <a href="https://www.vox.com/policy-and-politics/2020/7/1/21310194/voxcare-biden-trump-coronavirus-response">Joe Biden's sizable pandemic plan</a> is probably subject to the same fate.</p>
<p>In an <a href="https://www.nytimes.com/2020/12/03/opinion/covid-relief-mitch-mcconnell.html">Op-Ed for the New York Times this week</a>, David Brooks wrote about the most recent coronavirus aid talks and Senate Majority Leader Mitch McConnell's efforts to curtail them.</p>
<blockquote>
<p>To their great credit, Pelosi and Chuck Schumer embraced the bipartisan framework. Mitch McConnell went on the Senate floor Thursday, pretended to soften, ignored the compromise and did not move an inch.</p>
<p>If [we don’t see a Covid-19 relief measure pass in the next week or two], McConnell should spend Christmas with people thrown out of work and witness the suffering he has caused.</p>
</blockquote>
<p>This is what has infuriated me for months. We have a solution to this pandemic. We know how to curtail its spread: shutdown, pay people to shutdown, and encourage masks and distancing. Then and only then: reopen safely. We could open schools while keeping bars and restaurants closed if those businesses could afford it, and we can make sure they could. Instead we choose not to. This dichotomy: reopen unsafely or suffer safely is a false choice. There are plenty of better options, but we won't take them. Instead we chose this route.</p>
<p>I'll leave you with an excerpt from an article I wrote but never published.</p>
<blockquote>
<p>..we can't control the virus, we can only mitigate its spread. We can, however, directly effect the economy. We could have built up our institutions, we could have helped those that lost their jobs, we could have woven a net to catch those who fall. We chose not to, but we still can.</p>
</blockquote>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/why-i-dont-retweet-anything</guid><pubDate>Fri, 04 Dec 2020 20:43:00 -0800</pubDate><category>twitter</category><category>social media</category><category>misinformation</category><title>Why I Don't Retweet Anything</title><link>http://brianschrader.com/archive/why-i-dont-retweet-anything/</link><description><![CDATA[<p>I still read Twitter (despite my <a href="/_drafts/retweeting/">efforts to quit entirely</a>), but I've stopped retweeting. My last retweet was on July 17th and it was of a tweet I wrote for <a href="https://adventurerscodex.com">a company I co-own</a>. And if things continue as planned, that will be the last retweet I ever do.</p>
<h3>Why No Retweets?</h3>
<p>Retweets are Twitter's original sin. Akin to Facebook's Share, or Tumblr's Re-blog, the Retweet is what allows content on Twitter to spread virally. It allows for users to effortlessly spread false or misleading information with impunity and encourages readers to never go past the title of an article (despite <a href="https://slate.com/technology/2020/10/twitter-retweet-change-election.html">Twitter's admittedly laudable attempts</a> to address this issue). Retweets allow users to easily dunk on each other and act as super-spreaders of identity-reenforcing and tribalistic memes that only serve to make Twitter a worse platform.</p>
<p>Quote retweets are a little better (at least they require the user to express some opinion about the content they're spreading), but they still allow for the easy dunking that's a mainstay of the platform.</p>
<p>To their credit, Twitter has long known that the retweet button causes problems on their platform. The original designer of the feature has even said as much.</p>
<p><a href="https://www.buzzfeednews.com/article/alexkantrowitz/how-the-retweet-ruined-the-internet">Chris Wetherell</a>:</p>
<blockquote>
<p>“We might have just handed a 4-year-old a loaded weapon,” Wetherell recalled thinking as he watched the first Twitter mob use the tool he created. “That’s what I think we actually did.”</p>
</blockquote>
<p>Both Pine.blog and Micro.blog don't have retweets, and Manton does a great job explaining why (I used the same reasoning for Pine.blog).<sup>1</sup></p>
<p><a href="https://www.manton.org/2016/11/22/fake-news-and.html">Manton Reece</a>:</p>
<blockquote>
<p>When you have to put a little work into posting, you take it more seriously. I wonder if fake news would have spread so quickly on Facebook if it was a little more difficult to share an article before you’ve read more than the headline.</p>
</blockquote>
<p>Putting in the extra effort to actually articulate an intelligible thought helps me better understand the content myself and it helps me gauge whether or not the given post is even worth sharing. On more than one occasion, I've stopped myself from sharing something because I realized that it just wasn't all that interesting.</p>
<h3>How I (Still) Use Twitter</h3>
<p>While I still read Twitter, the vast majority of my posts are cross-posted from <a href="https://pine.blog/u/sonicrocketman">my microblog</a>. I still favorite posts (because my favorites are automatically saved to Pinboard so I can find them later), but for the most part, my interactions are read-only.</p>
<p>Because I spend most of my "social media time" either reading articles on <a href="https://pine.blog">Pine.blog</a> or browsing <a href="https://micro.blog">Micro.blog</a>, reading Twitter now feels like wading through a nuance-lacking, toxic cesspit rather than acccessing the real-time information platform I once knew and loved, which in turn drives me further away from the platform. I see people I follow there cooking amazing meals, telling fanciful stories, sharing hilarious memes, but all of that is drowned out by the hate and vitriol in every next post.</p>
<p>With all that said though, I do still share stuff on the Web. I just do it by writing a post.</p>
<div style="max-width: 450px;" class="image-center">
<img
  alt="A sample pseudo-retweet"
  src="/images/blog/pseudo-retweet.png"
  class="image-center"
/>
<center><small><caption>I'd love a browser plugin that removes the Retweet button and hides all retweets. It seems like a few exist, but none that I tried worked. Presumably Twitter tries to circumvent them.</caption></small></center>
</div>

<p>Virality is a fact of life on the Web; neither innately good nor bad. For too long we've seen it as something to be harnessed, to utilize. But a virus is incredibly difficult to control and, like with today's real-world troubles, a pandemic of memes and satire does enormous harm to our individual health and to the health of our society.<sup>2</sup></p>
<p>tl;dr Pandemics are bad. Both online and in meatspace. We should limit their spread and stop retweeting.</p>
<div class="footnote">
<sup>1</sup> Pine.blog will show you when someone retweets or re-posts your blog posts if you allow for Webmentions, though I'm considering letting users configure this behavior. Retweets also poison the mind of the poster, not just the reader.
</div>

<div class="footnote">
<sup>2</sup> In an effort to be transparent, I have asked others to retweet my posts before an an attempt to gain some traction outside my bubble. I'm going to stop doing that too.
</div>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/programming-misconceptions</guid><pubDate>Mon, 23 Nov 2020 03:35:00 -0800</pubDate><category>programming</category><category>software</category><category>funny</category><title>Programming Misconceptions</title><link>http://brianschrader.com/archive/programming-misconceptions/</link><description><![CDATA[<p>Along the lines of my post about <a href="/archive/assumptions-and-variable-names/">assumptions and variable names</a>, here's a list of a few common programming misconceptions that I often run into (with other people's code and with my own).</p>
<blockquote>
<p>What you think the code does is often not the same as what it actually does.</p>
<p>There is a big difference between: intended, expected, and desired. Something can be both intended and expected, but undesired; but it can also be intended and desired, but unexpected.</p>
</blockquote>
<p>And my personal favorite:</p>
<blockquote>
<p>What the method/function name says it does is not the same as what it actually does.</p>
</blockquote>
<p>Naming is hard.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/going-indie-is-out-</guid><pubDate>Wed, 18 Nov 2020 19:43:00 -0800</pubDate><category>announcement</category><category>launch</category><category>book</category><category>going indie</category><title>Going Indie is Out! 📚🚀</title><link>http://brianschrader.com/archive/going-indie-is-out-/</link><description><![CDATA[<p><em>I never get tired of saying this</em></p>
<p><a href="https://goingindie.tech/" title="Going Indie">
    <img src="https://goingindie.tech/static/cover-icon.jpg"
        alt="Going Indie Cover Art"
        style="width:220px; display:inline-block;box-shadow: 1px 1px 3px black;padding:0px;margin-left:16px;"
        class="image-right"
    />
</a></p>
<p>Today I'm thrilled to announce that my book, Going Indie: A Complete Guide to becoming an Independent Software Developer, <a href="https://goingindie.tech">is out and available to purchase</a>! The book has been in pre-order for a few weeks, but today is the official launch!</p>
<p>Writing and publishing a book has been a crazy endeavor, and I've learned a lot during the process, both about myself and my capabilities, and about the process and work involved in book publishing.</p>
<p>Thank you to everyone who proof-read the book and who contributed to making it a reality. Like it says in the acknowledgements, a special thanks must go to my editor and friend, Jenn Sardina, who helped me wrangle the book from the rambling that it was into the sleek product it became. Thanks to my proof-readers, to my designer, and to all of my friends and family for their support during this process.</p>
<p>There's a lot of improvements I'd like to make to the book, and perhaps there's a second edition on the horizon someday. For now, to all of those who've purchased a copy of Going Indie, I say thank you. I hope you enjoy the book and I hope that it helps convince you to go indie yourselves.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/announcing-hewell-public-beta-</guid><pubDate>Tue, 10 Nov 2020 21:21:00 -0800</pubDate><category>announcement</category><category>app</category><category>ios</category><category>beta</category><title>Announcing: Hewell Public Beta 🎉</title><link>http://brianschrader.com/archive/announcing-hewell-public-beta-/</link><description><![CDATA[<p>Today I'm happy to announce the public beta for my newest app <a href="https://hewellapp.com">Hewell: A Virtual Tour Guide</a>. I've wanted to build something like Hewell for years, and I finally got around to it. The app is in Public Beta on iOS, so you won't find it in the App Store just yet, but you're free to try it out and give feedback via TestFlight.</p>
<p><img src="https://hewellapp.com/img/apple-touch-icon.png" alt="Hewell Logo" style="max-width:150px; width:80%; box-shadow:3px 3px 5px darkgrey; border-radius:30px; padding:0; margin:15px; float:right;"></p>
<blockquote>
<p>Hewell is a virtual tour guide that automatically finds interesting things around you whether you're in a new city or your home town.</p>
</blockquote>
<p>The world around us is full of awesome things and so many of them go unnoticed and unappreciated. Hewell helps you uncover the interesting and fascinating places in the world, whether you're on a trip, or just wanding around your home town.</p>
<p>Hewell is a privacy-respecting, open-data powered app that uses the power of Wikidata and Wikipedia to tell you more about the world around you. You could of course get all the benefits of Hewell by simply searching Wikipedia for everything interesting around you, but who does that? Hewell brings the enormous potential of open data to you right when you need it.</p>
<p>With Hewell you can discover cool spots, learn about their history, listen to a narrated guide for each place, vote and recommend great spots for other Hewell users, and earn badges for your efforts. I have a lot more great stuff planned for Hewell in the coming updates, but I wanted to get something out relatively quickly and get feedback.</p>
<p>If you're interested, please give the app a try and let me know what interesting things are in your area.</p>
<p><a href="https://hewellapp.com">Check out Hewell &#8594;</a></p>
<div style="text-align:center;">
    <img src="https://hewellapp.com/img/beta/list.png"
        alt="The overview in Hewell"
        width="500px"
        style="width:220px; display:inline-block;"
    />
    <img src="https://hewellapp.com/img/beta/detail.png"
        alt="A listing in Hewell"
        width="500px"
        style="width:220px; display:inline-block;"
    />
</div>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/house-judiciary-committee-recommends-interoperable-social-media</guid><pubDate>Wed, 07 Oct 2020 01:46:00 -0800</pubDate><category>law</category><category>social media</category><category>antitrust</category><category>web</category><category>open web</category><category>politics</category><title>House Judiciary Committee recommends Interoperable Social Media</title><link>http://brianschrader.com/archive/house-judiciary-committee-recommends-interoperable-social-media/</link><description><![CDATA[<p>Today the <a href="/images/blog/investigation_of_competition_in_digital_markets_majority_staff_report_and_recommendations.pdf">House Judiciary Committee released its report</a> detailing the numerous anti-competitive practices employed by the big tech firms: Apple, Amazon, Facebook, and Google. The report details why these firms are under investigation, what role they play in their respective markets, and whether they have achieved monopoly status in those markets (spoiler, it says they have). The report looks at the web search, web advertising, social media, e-commerce, and mobile software distribution markets, their history, and their future. It's a long read, but you should check it out, at least through the Executive Summary section.</p>
<p>Importantly, the authors also make a number of recommendations aimed at fixing the problems they identified in the report. This is where things get interesting. The report recommends a lot of what open web folks (like myself) have been wanting for years. Here's a few of the most relevant recommendations (emphasis mine):</p>
<blockquote>
<ul>
<li>Structural separations and <strong>prohibitions of certain dominant platforms from operating in adjacent lines of business</strong>;</li>
<li>Nondiscrimination requirements, <strong>prohibiting dominant platforms from engaging in self-preferencing, and requiring them to offer equal terms for equal products and services</strong>;</li>
<li><strong>Interoperability and data portability</strong>, requiring dominant platforms to make their services compatible with various networks and to make content and information easily portable between them;</li>
<li><strong>Safe harbor for news publishers</strong> in order to safeguard a free and diverse press;</li>
<li><strong>Prohibitions on abuses of superior bargaining power</strong>, proscribing dominant platforms from engaging in contracting practices that derive from their dominant market position, and requiring due process protections for individuals and businesses dependent on the dominant platforms;</li>
<li>Strengthening private enforcement, through <strong>eliminating obstacles such as forced arbitration clauses</strong>, limits on class action formation, judicially created standards constraining what constitutes an antitrust injury, and unduly high pleading standards.</li>
</ul>
<p><em>p. 20-12</em></p>
</blockquote>
<p>This is great news! These reforms would, in my opinion, do a lot to level the playing field that currently tilts towards benefitting these large incumbents. Each and every one of these companies benefitted by taking advantage of the power of the Open Web in their early days and most still do in some form, but they contribute nothing back and they actively work to undermine the things that make the Web and the Internet great. The report explicitly calls out Facebook's lack of interoperability and recommends that social media companies be forced to interoperate and provide data portability in the same way that phone carriers are currently required to do.</p>
<blockquote>
<p>As a result, these markets are no longer contestable by new entrants, the competitive process shifts from “competition in the market to competition for the market.”</p>
<p>This dynamic is particularly evident in the social networking market...</p>
<p>In response to these concerns, Subcommittee staff recommends that Congress consider data interoperability and portability to encourage competition by lowering entry barriers for competitors and switching costs by consumers. These reforms would complement vigorous antitrust enforcement by spurring competitive entry.</p>
<p><strong>a. Interoperability</strong></p>
<p>Interoperability is fundamental to the open internet. It is present in email, which is an open, interoperable protocol for communicating online regardless of a person’s email service or the type of the device they use to send the email.</p>
<p>An interoperability requirement would allow competing social networking platforms to interconnect with dominant firms to ensure that users can communicate across services. Foremost, interoperability “breaks the power of network effects”...</p>
<p><em>p. 384</em></p>
</blockquote>
<p>Open Web folks won't be surprised by any of these recommendations. We've been wanting them for years, but it appears that Congress is finally paying attention. There's a lot more in this report than just social media market reforms, but in my opinion these reforms are the most exciting and the most impactful to our discourse on the Web. Hopefully now that the wheels of government are turning, they move to enact some of these long-awaited and way-overdue reforms and give us back the Open Web we want.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/assumptions-and-variable-names</guid><pubDate>Thu, 01 Oct 2020 22:00:00 -0800</pubDate><category>software development</category><category>knowing</category><category>philosophy</category><category>variable naming</category><title>Assumptions and Variable Names</title><link>http://brianschrader.com/archive/assumptions-and-variable-names/</link><description><![CDATA[<p>As developers, we make a lot of assumptions about the world. We have to. The world is messy, unorganized, unsorted, and chaotic, and so is the data that this world generates. It's nigh impossible to process data in an orderly fashion if you can't organize it and make meaningful distinctions between different categories. Consider how much more difficult it would be for a music service to recommend titles if we didn't group music into genres, or how utterly meaningless it would be to say that COVID case counts were rising or falling if you couldn't say where or when. Developers are one of many groups of people who's job is largely to categorize and process data. We employ different methods than other disciplines, but the principle is the same. The problem is that almost any attempt to categorize the real world is fraught with peril. The world doesn't fit nicely into groups. It feeds back into itself in knotted and tangled ways. Few natural categories exist, and this means that in order for us to categorize the world, we need to construct those categories ourselves. These categories are build on assumptions about the world, but they're only assumptions. They can and will be broken, and when our assumptions no longer hold, they cause bugs.</p>
<h3>What does this have to do with code?</h3>
<p>A lot actually. When we write code we give names to various data points. We call one bit of memory a <code>username</code> and the other an <code>email_address</code>. Sometimes, like with more fundamental computer-science concepts, we can mathematically or physically guarantee that certain data is what it claims to be. Other times, we simply define a byte as 8-bits or a given variable as an <code>int</code> and not a <code>string</code>. Importantly, these definitions are assumptions. They assume that the hardware the code runs on works a certain way or that the system can be expected to do what the OS claims it will do, but that's a topic for another time.</p>
<p>Many bugs are the cause of failed assumptions. Some languages try to reduce the number of assumptions that a developer needs to make by guaranteeing that variables defined as a certain type will always hold data that is that type, but fundamentally, there are much bigger problems plaguing software than type checking. For example, type checking can guarantee that a given variable called <code>html_string</code> contains a string value and that it always will, but it can't guarantee that the string is actually HTML. It could be an email address or it could just be invalid HTML. Both are strings, sure, but that's not the whole story.</p>
<p>We often make the mistake of asserting more certainty in our code than is rightfully there. When we accept data from a user, we can't guarantee what the data is until we've validated it. When parsing batch data or data gathered from the Web, the situation is the same. Pine.blog encounters this a lot. As a feed reader, Pine.blog must parse feeds from the Web at large, but RSS and Atom feeds in the wild are notorious for being malformed and invalid (and sometimes just plain wrong). I've even come across a site that returned a PDF when requesting its RSS feed. Until the data is validated, you can only assume what the data contains. Years ago, I started coming up with ways to help me identify when I'm making assumptions in my code in an effort to reduce bugs, improve clarity, and minimize assumptions.</p>
<p>In the Pine.blog source code, there are quite a few examples of this explicit assumption-making process, especially in my variable names. When Pine.blog first receives data from a request, it needs to try to parse that data, but it can't do that until I know what kind of feed it is. To do this I have a series of functions that use a bunch of heuristics to check the data and determine what it contains.</p>
<pre><code>def is_probably_an_rss_feed(tree):
    pass

def is_probably_an_atom_feed(tree):
    pass

def is_probably_a_json_feed(tree):
    pass
</code></pre>
<p>The important thing here is the word <code>probably</code>. These functions don't attempt to actually parse the data, so they don't know for sure. By explicitly qualifying what these functions do I, as the programmer, understand the assumptions I'm making when I act on that information.</p>
<p>I do this a lot actually. It's common for my variables to contain the words <code>probably</code> or <code>approximate</code> if I'm not 100% sure that the data is valid or correct. Variables that contain these words immediately cause concern and force me to think about the potential failure modes whenever I attempt to manipulate them. If something says that it is an <code>html_string</code> than you don't usually think to second-guess that fact, but until you know that for sure, you may want to name your variable <code>probably_an_html_string</code> to better reflect your knowledge at the given point in your process.</p>
<p><img
    src="/images/blog/approximate-update-frequency.png"
    class="image-right hide-on-mobile"
    alt="Pine.blog Approximate Update Frequency"
/></p>
<h3>Handling Approximations</h3>
<p>As a guide to users, Pine.blog tries to determine the frequency that a given feed contains new items. Twitter users may be familiar with <a href="https://allenpike.com/2009/announcing-unladen-follow">Unladen Follow</a> which does the same thing for Twitter accounts, or how the podcast app <a href="https://overcast.fm">Overcast</a> does the same thing. This feature lets potential followers know how often a given feed will have new posts. This value is generally pretty simple to calculate, but because it's something determined by Pine.blog and not set by the site owner, this value is descriptive not prescriptive. It describes what is likely the update frequency based on past publishing habits. This measure cannot completely predict a site's future behavior, it's just a guess. To reflect that, my code calls this variable <code>approximate_update_frequency</code>, because it's just that <code>approximate</code>. Some would probably prefer the word <code>estimated</code>, which is certainly clearer, but the point is the same. The variable name conveys just as much confidence as possible without giving other developers (including future me) the false impression that the data is any more certain or guaranteed than it actually is.</p>
<p>Developers like guarantees. We like to know that data won't change on us without warning and that things are what they claim to be. This is why so many developers care deeply about variable naming. No one likes variables that are outright incorrect. If you saw a variable in a codebase called <code>bank_account_number</code>, but upon inspection, you saw that it contained a user's first and last name, you would be understandably confused and irritated. The original developer of that code either didn't account for a certain case, incorrectly assigned that data to the wrong variable, or they simply lied to you. The same is true when we name a given variable <code>html_string</code>, but it turns out to contain invalid data. The variable name lied to us. By naming variables you're making assumptions and you're making promises to yourself and to later developers about what the variable contains. If you're not sure about what the data is, or can't guarantee that fact, then you should probably say so.</p>]]></description></item></channel></rss>
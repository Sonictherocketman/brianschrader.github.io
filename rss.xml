<?xml version="1.0" encoding="iso-8859-1"?>
<rss version="2.0"><channel><title>BiteofanApple by Brian Schrader</title><link>http://brianschrader.com</link><description></description><lastBuildDate>Mon, 10 Aug 2015 13:53:53 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Rewritten</title><link>http://brianschrader.com/archive/rewritten/</link><description>&lt;![CDATA[&lt;p&gt;Yesterday I published a new version of this site, and hopefully you didn't notice a thing.&lt;/p&gt;
&lt;p&gt;One of the things that this rewrite allowed me to do was finally turn off PHP entirely. As of now, there is no more PHP or Python code that executes when you request a page from this site. It's completely static.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/rewritten</guid><pubDate>Mon, 10 Aug 2015 13:16:00 +0000</pubDate></item><item><title>Hiking the Pacific Crest Trail</title><link>http://brianschrader.com/archive/hiking-the-pacific-crest-trail/</link><description>&lt;![CDATA[&lt;p&gt;I've always wanted to hike the &lt;a href="https://en.wikipedia.org/wiki/Pacific_Crest_Trail"&gt;Pacific Crest Trail&lt;/a&gt;. Last week, a part of that dream came true. Last week, two friends and I hiked a section of the PCT, from Klamath Falls, OR to Crater Lake, OR. It was a trip long awaited, and it meant a lot to all three of us. Sean, I'd known from Scouting, and Nathaniel, I'd known from college. The three of us had talked about the possibility of doing a trip like this back in November of 2014, the weekend of Thanksgiving, and last week it finally happened.&lt;/p&gt;
&lt;h2&gt;What follows is an account of the journey&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Day 1:&lt;/strong&gt; Once everyone had arrived, Sean on the train, and Nathaniel and I on a plane, and &lt;a href="https://www.youtube.com/watch?v=uT9MITGrcFk"&gt;no one from a car&lt;/a&gt;, we set off, with smiles on our faces, on a shuttle from Klamath Falls, OR to our starting point off Hwy 140. We'd spent months planning to get here, and we were all thrilled to get started.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/the-gangs-all-here.jpg"&gt;&lt;img alt="The Gang's All here!" src="/images/collections/pct-hike/the-gangs-all-here-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After being dropped off by the shuttle, we started hiking. &lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/the-trailhead.jpg"&gt;&lt;img alt="The Trailhead" src="/images/collections/pct-hike/the-trailhead-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the trailhead I found a walking stick that someone had left there. The tip was covered in charcoal and the handle was already worn; someone had used and loved that stick, and now I was its next holder. It served me well.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/setting-out.jpg"&gt;&lt;img alt="Setting out" src="/images/collections/pct-hike/setting-out-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Needless to say, the trail was gorgeous.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/hiking-day-1.jpg"&gt;&lt;img alt="Hiking Day 1!" src="/images/collections/pct-hike/hiking-day-1-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About 3 miles into the hike we came across the first sign that we were actually on the right track. As we took a short break in the clearing, a hiker came up the trail from the south. He was about our age, on vacation from Germany, and had been hiking the trail since April. He told us that he'd been averaging 30 miles a day and that he planned to be done by July's end. He didn't stop long before setting back off again up the trail. We never saw him again.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/the-sign-on-the-trail.jpg"&gt;&lt;img alt="A sign!" src="/images/collections/pct-hike/the-sign-on-the-trail-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After 10.5 miles and at the end of a long day, we set up camp, and went to sleep. We were all exhausted.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/day-1-camp.jpg"&gt;&lt;img alt="Day 1 Camp" src="/images/collections/pct-hike/day-1-camp-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 2&lt;/strong&gt; was filled with amazing vistas and high ridges. Early that morning, as we were breaking camp, another hiker approached from the south. She asked us if we'd seen a blonde, German guy. "We saw him yesterday," we said. &lt;/p&gt;
&lt;p&gt;"What, yesterday?! I hiked with him for 2 days, but he said I was too slow and he went on without me," she replied. This was the first of many times that another hiker would ask about "the German guy". Apparently, he was a legend.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/the-trail-forested.jpg"&gt;&lt;img alt="The trail forested 1!" src="/images/collections/pct-hike/the-trail-forested-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As we climbed up the side of a ridge, we took a break and admired the scenery. As we climbed, the cover of trees broke and gave way to some really beautiful vistas.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/resting-ridge.jpg"&gt;&lt;img alt="Resting on a ridge" src="/images/collections/pct-hike/resting-ridge-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Surprisingly, we had cell service up here in the middle of the Oregon wilderness&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/ridge-view.jpg"&gt;&lt;img alt="Ridge view" src="/images/collections/pct-hike/ridge-view-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A bit further, we found a spectacular campsite at the top of the mountain.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/day-2-camp.jpg"&gt;&lt;img alt="Day 2: Camp" src="/images/collections/pct-hike/day-2-camp-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It had been a long, mosquito filled day. We cooked ourselves dinner, and, from our high perch, we watched the sun go down, mantling the mountains in the reddish-purple haze of evening light.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 3 &lt;/strong&gt; would prove to be the day of our highest highs, and lowest lows (literally and figuratively). We would reach the tallest peaks, feel the best we had in days, and end on the worst note of the entire trip.&lt;/p&gt;
&lt;p&gt;The day started off on an off note as we entered the what remained of the forest after a recent fire.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/burned-forested-trail.jpg"&gt;&lt;img alt="Burned out forest" src="/images/collections/pct-hike/burned-forested-trail-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Traversing such a breathtaking and scarred landscape was something none of us had ever done before, and it was an experience I recommend, if only for its wonder. The utter silence is, at the same time, both captivating, and deeply unsettling as no sound of birds, or buzzing of mosquitos broke the ever present silence.&lt;/p&gt;
&lt;p&gt;After the journey through the silent, dead swaths of burned out forest, we found ourselves on the top of a hill. A perfect retrospective of our progress thus far.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/lookback.jpg"&gt;&lt;img alt="Looking back" src="/images/collections/pct-hike/lookback-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That mountain in the back, Mt. McLoughlin, was where we started 2 days prior.&lt;/p&gt;
&lt;p&gt;After a short break, we found ourselves traversing some rocky ridges on the way to our highest high.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/rocky-ridge.jpg"&gt;&lt;img alt="Rocky ridge" src="/images/collections/pct-hike/rocky-ridge-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this point, we'd finally ascended Devil's Peak, 7,329ft above sea level, our highest high.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/devils-peak.jpg"&gt;&lt;img alt="Devil's Peak" src="/images/collections/pct-hike/devils-peak-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As a bonus, the peak came stock with a most spectacular view to the west.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/the-view-from-the-top.jpg"&gt;&lt;img alt="view from the top" src="/images/collections/pct-hike/the-view-from-the-top-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The way back down would greet us with 5 water stops in the span of 2 miles, which we heartily enjoyed. Today had been our best day by far... at least until now. We had one mile left to go.&lt;/p&gt;
&lt;p&gt;During that last mile, Sean slipped and fell in a stagnant, mosquito filled pond, and I received a lovely gift from the microbes in the river water. All of that, coupled with that last mile being the most mosquito filled section of the trail, so far, had beaten us down when we finally settled and set up camp for the night. &lt;/p&gt;
&lt;p&gt;Unfortunately, as we all knew, the next day would be a hard one: it was our first of two whole days without the ability to fill our water stores. Whatever we had now was all we'd have to last 2 days. We'd known about this section of the trail before setting out, but this 20 mile section was devoid of water until we reached the campground at the end, Mazama. After a short discussion, we elected to try to cover the entire 20 miles in one day, double our so-far daily milage. The prospect of being left high and dry, and with another night between ourselves and a burger at the Mazama cafe, was too much of an incentive. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 4:&lt;/strong&gt; I only have one picture of day 4; it was a long one. We did it though, all 20 miles. &lt;/p&gt;
&lt;p&gt;The trail took us over more ridges, through more burned, and scarred terrain, and onto some lovely vistas, all of which are left to the imagination of the reader. We didn't have much time to stop and take pictures, we were on a tight schedule.&lt;/p&gt;
&lt;p&gt;I do have this picture though, taken just after the 3 of us arrived at Mazama, 12 hours of hiking, and after covering a total of 20 miles.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/at-mazama.jpg"&gt;&lt;img alt="At Mazama" src="/images/collections/pct-hike/at-mazama-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We didn't last long that night after this. We showered, ate microwave burritos from the convenience store, and went to bed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 5:&lt;/strong&gt; We literally did nothing all day. Exhausted from the day prior, and a day (actually 2) early in the schedule, we took some time to relax, play card games, and eat the burger we earned the day prior. Once again, we encountered a hiker who, as they set up camp, asked us if we'd seen the German guy. When we said that we'd last seen him 3 days ago, he was impressed but not too surprised. &lt;/p&gt;
&lt;p&gt;"He was really moving," was all he could say.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Day 6 and 7:&lt;/strong&gt; For the next two days we bounced between Mazama and our final destination because of logistical reasons. I'm combining these days because, really we spent them in the same place, Crater Lake.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/crater-lake-pano.jpg"&gt;&lt;img alt="Crater Lake" src="/images/collections/pct-hike/crater-lake-pano-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There were other happenings during the day like how it rained on and off, or how we were left behind by the trolley and had to hike the 5 miles back to our camp site that evening, but really the majesty of Crater Lake blew all that out of the water.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/crater-lake.jpg"&gt;&lt;img alt="Crater Lake, again" src="/images/collections/pct-hike/crater-lake-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/from-the-wall.jpg"&gt;&lt;img alt="Crater Lake, again, again" src="/images/collections/pct-hike/from-the-wall-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the end of the day, we spent time at the lodge, and at the meadow next door overlooking Crater Lake and all its immense glory, but as these things usually go, it was soon time to get back on the shuttle and head home. &lt;/p&gt;
&lt;p&gt;Before that, I needed to leave something behind. It was time to leave my walking stick in a place akin to where I'd found it, at a trail marker on the PCT.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/hiking-stick.jpg"&gt;&lt;img alt="My hiking stick" src="/images/collections/pct-hike/hiking-stick-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On the shuttle ride home I found myself in a somber mood. All of that awe-inspiring scenery, the grand wilderness, the epic feeling of exploration, and the grandeur of Crater Lake were all behind us now. We'd had an amazing time together, but it had come to an end, and now here we were, flying home to our respective lives, all right where we left off. &lt;/p&gt;
&lt;p&gt;&lt;a href="/images/collections/pct-hike/together-at-the-end.jpg"&gt;&lt;img alt="My hiking stick" src="/images/collections/pct-hike/together-at-the-end-comp.jpeg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Until next time.&lt;/p&gt;
&lt;h2&gt;Afterword&lt;/h2&gt;
&lt;p&gt;This was my first excursion down a small part of the Pacific Crest trail, and I don't know when my next will be, but it can't come soon enough. &lt;/p&gt;
&lt;p&gt;Well, maybe it can wait until after my bug bites heal. Yeah, that would be good.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/hiking-the-pacific-crest-trail</guid><pubDate>Sun, 19 Jul 2015 22:59:00 +0000</pubDate></item><item><title>WWDC and Open Source Swift</title><link>http://brianschrader.com/archive/wwdc-and-open-source-swift/</link><description>&lt;![CDATA[&lt;p&gt;I'm pretty happy with yesterday's announcement (excluding the "One more thing..." part). OS X got a very understated release, but that's because, I suspect, that it seems to be mostly bug fixes, and that's great news. I'm mostly excited about the bug fixes and performance enhancements, but there were some solid updates to Safari, and Maps as well (transit isn't available for San Diego yet, but hopefully it will be soon).&lt;/p&gt;
&lt;p&gt;On the iOS front, the iPad got all the love, and that's long overdue. The "new" (Surface Pro style) multitasking is nice, and the popovers look cool (Netflix &lt;em&gt;and&lt;/em&gt; Twitter at the &lt;strong&gt;same time&lt;/strong&gt;!). I'm also a fan of the new battery improvements and the Spotlight search API (Finally). &lt;/p&gt;
&lt;p&gt;To me though, the biggest news of the whole conference was the announcement that Swift will be Open Source&lt;a href="#1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. For Apple, this means that Swift will be placed alongside &lt;a href="http://golang.org"&gt;Go&lt;/a&gt; and &lt;a href="http://www.rust-lang.org"&gt;Rust&lt;/a&gt; in the new, hot systems programming language category. Chris Latner expressed his desire for Swift to be open source last year at WWDC, and I'm glad he was able to convince the higher ups. Making Swift open source allows it to be a real alternative (and competitor) to Rust and Go, and I can't wait to see what people do with it. Swift interoperability with Python is also something I look forward to hearing about since Python already &lt;a href="https://siciarz.net/24-days-of-rust-calling-rust-from-other-languages/"&gt;interfaces with Rust quite nicely&lt;/a&gt; (&lt;a href="https://github.com/alexcrichton/rust-ffi-examples/tree/master/python-to-rust/src"&gt;examples&lt;/a&gt;). Using Swift, Rust, or Go as your low level language instead of C has a lot of advantages, and its great to see Apple keep pace with the outside world. More competition and choice in the systems programming language world is always good, and there will shortly be 3 great options to choose from.&lt;/p&gt;
&lt;div id='1' style='font-size:small;'&gt;1. Yes I'm aware that Apple said, "later this year." Yes, I am also aware that FaceTime was supposed to be an Open Standard. I contrast with this: ResearchKit is on GitHub; this is a new Apple.&lt;/div&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/wwdc-and-open-source-swift</guid><pubDate>Tue, 09 Jun 2015 14:56:00 +0000</pubDate></item><item><title>Software 'Engineering'</title><link>http://brianschrader.com/archive/software-engineering/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://benlog.com/author/benadida/"&gt;Ben Adida:&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;...most people have a pretty good idea of the trust they're placing in their doctor, while they have almost no idea that every time they install an app, enter some personal data, or share a private thought in a private electronic conversation, they're trusting a set of software engineers who have very little in the form of ethical guidelines.&lt;/p&gt;
&lt;p&gt;Where's our Hippocratic Oath, our "First, Do No Harm?"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've &lt;a href="https://twitter.com/sonicrocketman/status/572466355682689024"&gt;talked about this before&lt;/a&gt;. Software Engineering is unlike any other field that calls itself 'Engineering'. Unlike licensed engineers in other fields, there's no code that binds Software Engineers to a strict set of ethics, and no state certification to revoke when Software Engineers are found malpracticing. This kind of lax attitude toward development has indeed helped the industry boom the way it has, but &lt;a href="https://www.youtube.com/watch?v=k2h2lvhzMDc"&gt;success hides problems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's shocking really, coming from an education in Aerospace Engineering, the lack of precautions that a lot of software engineers take when designing their systems. In school, from the beginning, we had concepts like "factors of safety", "margins of error", and "graceful failure" drilled into us. Included in our final project &amp;#151;creating a design for a supersonic business jet&amp;#151; was the requirement that it be able to complete its entire mission with One Engine Inoperable (OEI). If one of the two engines burst into flames at takeoff, the plane still had to be able to fly. It's these kinds of regulations (FAA in this case) that enable commercial airlines to have the amazing safety record they do; people's lives are at stake. A professor one told my class, "These calculations are important. If your numbers aren't right, someone could die." &lt;/p&gt;
&lt;p&gt;Personal data is extremely valuable, and precious to the person it belongs to. Although their life may not be at stake, their finances, their livelihood, and their personal affairs might be. Software has reached a level of pervasiveness (and arguably did so years ago) that an engineer's decision (or lack thereof) can affect millions of people. If any other branch of Engineering tried to design and build a something that would affect that many people (their data or their wellbeing) you'd bet they'd be licensed. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://benlog.com/2015/05/23/the-responsibility-we-have-as-software-engineers/"&gt;the responsibility we have as software engineers &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/software-engineering</guid><pubDate>Mon, 25 May 2015 20:20:00 +0000</pubDate></item><item><title>Python multiprocessing and unittest</title><link>http://brianschrader.com/archive/python-multiprocessing-and-unittest/</link><description>&lt;![CDATA[&lt;p&gt;I've been having an issue with unit testing Microblogger when my tests need to use Python's multiprocessing module. I've been looking at this code for days now and I can't seem to find the bug. I'm hoping that by writing down my thoughts here, I can think through the problem. &lt;/p&gt;
&lt;p&gt;Basically, the test is trying to verify that a User object can be created with information from a remote XML feed. The &lt;a href="https://github.com/Sonictherocketman/Microblogger/blob/master/test/user_test.py#L41"&gt;test&lt;/a&gt; gives the &lt;code&gt;User&lt;/code&gt; module a URL and tells it to fetch all information at that resource.&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    def test_cache_user(self):
        user = User(remote_url='http://microblog.brianschrader.com/feed')
        user.cache_user()
        self.assertEqual(user._status, dl.CACHED)
        self.assertEqual(user.username, 'sonicrocketman')
 &lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/Sonictherocketman/Microblogger/blob/master/feed/user.py#L84"&gt;&lt;code&gt;cache_user&lt;/code&gt;&lt;/a&gt; method starts up a crawler to go out and parse the contents of the URL provided.&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    def cache_users(users):
        ...
        from crawler.crawler import OnDemandCrawler
        remote_links = [user._feed_url for user in users]
        user_dicts = OnDemandCrawler().get_user_info(remote_links)
        ...
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Everything is ok still. Inside that &lt;code&gt;OnDemandCrawler().get_user_info()&lt;/code&gt; method, the OnDemandCrawler crawls the URL given and then calls &lt;a href="https://github.com/Sonictherocketman/Microblogger/blob/master/crawler/crawler.py#L71"&gt;&lt;code&gt;self.on_finish()&lt;/code&gt;&lt;/a&gt;. This is when things get funky.&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    def on_finish(self):
        self.stop(now=True)
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The stop command tells the crawler to shut down, the &lt;code&gt;now&lt;/code&gt; keyword just tells it to force stop the crawling process and don't wait to cleanly exit.&lt;/p&gt;
&lt;p&gt;If we look at the source to the &lt;a href="https://pypi.python.org/pypi/MicroblogCrawler/1.4.1"&gt;microblogcrawler (v1.4.1)&lt;/a&gt; we see that &lt;a href="https://github.com/Sonictherocketman/microblog_crawler/blob/master/microblogcrawler/crawler.py#L116"&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; does the following:&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    def stop(self, now=False):
        ...
        if now:
            # Try to close the crawler and if it fails,
            # then ignore the error. This is a known issue
            # with Python multiprocessing.
            try:
                self._stop_crawling = True
                self._pool.close()
                self._pool.join()
            except:
                pass
        ...
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The curious part is that &lt;code&gt;self._stop_crawling = True&lt;/code&gt; part. In the &lt;a href="https://github.com/Sonictherocketman/microblog_crawler/tree/master/test"&gt;tests for the microblogcrawler&lt;/a&gt; both forcing the crawler to stop &lt;em&gt;and&lt;/em&gt; normally stopping it work fine. The issue arises when trying to stop them in a unit test. For some reason the crawler doesn't stop. &lt;/p&gt;
&lt;p&gt;Here's a sample crawler and the output it produces when run as a unit test:&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    class SomeCrawler(FeedCrawler):
        def on_start(self):
            print 'Starting up...' + str(self._stop_crawling)
        def on_finish(self):
            print 'Finishing up...' + str(self._stop_crawling)
            self.stop()
            print 'Should be done now...' + str(self._stop_crawling)
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;&gt;&gt;&gt; python -m crawler_test
&gt;&gt;&gt; Starting up...False        # Correct
&gt;&gt;&gt; Finishing up...False       # Correct
&gt;&gt;&gt; Should be done now...True  # Correct
&gt;&gt;&gt; Starting up...False        # lolwut?
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For some reason the crawler isn't receiving the signal to stop. Looking at it from my Activity Monitor it appears to stop (the 4 worker threads are closed), but then the crawler creates 4 new worker threads and does it all over again. &lt;/p&gt;
&lt;p&gt;The last step of this process is inside the crawler itself. The &lt;a href="https://github.com/Sonictherocketman/microblog_crawler/blob/master/microblogcrawler/crawler.py#L184"&gt;crawling process&lt;/a&gt; is controlled by the &lt;code&gt;self._stop_crawling&lt;/code&gt; attribute:&lt;/p&gt;
&lt;p&gt;&lt;code class="python"&gt;&lt;pre&gt;    def _do_crawl(self):
        ...
        # Start crawling.
        while not self._stop_crawling:
            # Do work...
            ...
            self.on_finish()
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;From this code, if the &lt;code&gt;_stop_crawling&lt;/code&gt; attribute is set to &lt;code&gt;True&lt;/code&gt;, then the crawler should finish the round it's on and close down, but the value of the attribute doesn't seem to be sticking when it's assigned in the &lt;code&gt;stop&lt;/code&gt; method above.&lt;/p&gt;
&lt;p&gt;If anyone has any ideas as to what the issue could be, I'd love to hear them. I'm pretty much out of ideas now. As I said before, the tests in the microblog crawler (which are not unit tests) work fine. The issue only comes up when running a test suite through &lt;code&gt;unittest&lt;/code&gt; itself.&lt;/p&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/default.min.css"&gt;
&lt;script src="http://yandex.st/highlightjs/8.0/highlight.min.js"&gt;&lt;/script&gt;
&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/python-multiprocessing-and-unittest</guid><pubDate>Tue, 28 Apr 2015 01:39:00 +0000</pubDate></item><item><title>Microblog Crawler v1.4(.1)</title><link>http://brianschrader.com/archive/microblog-crawler-v141/</link><description>&lt;![CDATA[&lt;p&gt;Version 1.4.1 of my MicroblogCrawler is out on &lt;a href="https://pypi.python.org/pypi/MicroblogCrawler/1.4.1"&gt;PyPi&lt;/a&gt;! Technically v1.4 was out last week but it had a fairly large bug that needed fixing. 1.4.1 has patched it and it's ready for prime time.&lt;/p&gt;
&lt;p&gt;v1.4.1 is full of enhancements, a few of which are listed here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calling stop now actually stops the crawler. This bug was due to a nasty bug in Python's multiprocessing module (9400). The crawler now alerts you when such a problem arises by outputting it through the on_error callback.&lt;/li&gt;
&lt;li&gt;Fixed a bug that would cause feeds to throw errors if no &lt;code&gt;pubdate&lt;/code&gt; element was found. Elements are not parsed but are discarded, and on_error is called.&lt;/li&gt;
&lt;li&gt;Fixed a major bug when attempting to stop the crawler immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/Sonictherocketman/microblog_crawler"&gt;The full version notes are available here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The major enhancement in this version (besides the graceful exiting) was the addition of a workaround for a &lt;a href="http://bugs.python.org/issue9400"&gt;bug in Python's multiprocessing module&lt;/a&gt;. The bug has to do with what happens to exceptions raised in child processes. When they are raised, they are pickled and sent back to the parent process. The problem arises when an exception is not pickleable. The child process hangs and never exits. The interesting thing is that the bug was first reported in 2010 and affects all versions of Python since 2010 (i.e. 2.7, 3.2, 3.3, 3.4). This bug has been baffling me since I started converting the crawler to be multiprocessed, and its nice to finally have a workaround. &lt;/p&gt;
&lt;p&gt;If anyone out there is using MicroblogCrawler, I'd love to hear from you, and pull requests are very welcome!&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-v141</guid><pubDate>Sat, 25 Apr 2015 22:29:00 +0000</pubDate></item><item><title>PEP 484 - Type Hints for Python</title><link>http://brianschrader.com/archive/pep-484---type-hints-for-python/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Guido_van_Rossum"&gt;Guido van Rossum&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Almost everyone in the language summit is supportive of PEP 484.&lt;/p&gt;&amp;mdash; Guido van Rossum (@gvanrossum) &lt;a href="https://twitter.com/gvanrossum/status/585872596090032131"&gt;April 8, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I'm for any improvements that will help my favorite language run smoother, with fewer errors, &lt;a href="#speeeed"&gt;and maybe faster someday*&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This PEP aims to provide a standard syntax for type annotations, opening up Python code to easier static analysis and refactoring, potential runtime type checking, and performance optimizations utilizing type information.&lt;/p&gt;
&lt;p&gt;Of these goals, static analysis is the most important. This includes support for off-line type checkers such as mypy, as well as providing a standard notation that can be used by IDEs for code completion and refactoring.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There's been a big push for better static analysis in Python for the last few years, and there've been attempts like this before (see Cython) and having a language level standard for Type Hints would bring the benefits to all the various Python implementations.&lt;/p&gt;
&lt;pre&gt;&lt;code class="python"&gt;# An example of the proposed type hint syntax.

def greeting(name: str) -&gt; str:

    return 'Hello ' + name&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I admit, the new syntax looks very Rust/Swift-like, and that's probably by design. One thing that worries me, and which isn't obvious from that code sample is that Python Type Hints will (must) include generics and blocks (i.e. lambdas, closures, etc). When those get into the mix, the Type Hint system starts to look a little messy.&lt;/p&gt;
&lt;pre&gt;&lt;code class="python"&gt;from typing import Mapping, Set



def notify_by_email(employees: Set[Employee], overrides: Mapping[str, str]) -&gt; None: ...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Even though that code isn't particularly pretty, the Type Hints can help the static analyzer find errors that could potentially be very hard to track down. As I said, I'm completely in favor of this addition to the Python syntax.   &lt;/p&gt;
&lt;p&gt;As a final note, for those of you worried that Python might be changing to a statically typed language, fear not.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It should also be emphasized that Python will remain a dynamically typed language, and the authors have no desire to ever make type hints mandatory, even by convention.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0484/"&gt;PEP 484 - Type Hints &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/default.min.css"&gt;&lt;/p&gt;
&lt;script src="http://yandex.st/highlightjs/8.0/highlight.min.js"&gt;&lt;/script&gt;

&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

&lt;p&gt;&#8212;&#8212;&#8212;&#8212;&lt;/p&gt;
&lt;p&gt;&lt;span id="speeeed"&gt;*&lt;/span&gt; According to the PEP, the goal of Type Hints will not be performance based, but they do go on to say, "Using type hints for performance optimizations is left as an exercise for the reader," which keeps me hopeful that PyPy or maybe even CPython could use them for that purpose as an added benefit.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/pep-484---type-hints-for-python</guid><pubDate>Wed, 08 Apr 2015 20:09:00 +0000</pubDate></item><item><title>Patreon</title><link>http://brianschrader.com/archive/patreon/</link><description>&lt;![CDATA[&lt;p&gt;This week I took to signing up for a &lt;a href="http://www.patreon.com"&gt;Patreon&lt;/a&gt; account and finally supporting my favorite video producers. Its exciting to see them getting due payment for what they create, and Patreon makes it really easy to be a patron, and the benefits are awesome.&lt;/p&gt;
&lt;p&gt;One of my favorite series &lt;a href="http://extra-credits.net"&gt;Extra Credits&lt;/a&gt;, a normally video games oriented series, create a mini-series a year ago called Extra History, where they told the story of the Punic Wars in their typical educational fashion. That mini-series is easily in my top 5 of the videos they've ever made, but they couldn't justify continuing the mini-series because their main sponsor was a gaming magazine. With Patreon, that has changed. Direct funding from their viewers means there's enough interest in Extra History to justify more and more videos, and its great. &lt;/p&gt;
&lt;p&gt;With direct support supplementing ad sales, creators can make judgements based on interest instead of solely on popularity. This means they can make more of the kinds videos that they want to make, instead of what will just be popular. If you haven't already, take a look at Patreon. The amounts you can sign up for are trivial, but they make a difference.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/patreon</guid><pubDate>Tue, 31 Mar 2015 22:31:00 +0000</pubDate></item><item><title>Microblog Crawler Diary: Signals Follow Up</title><link>http://brianschrader.com/archive/microblog-crawler-diary-signals-follow-up/</link><description>&lt;![CDATA[&lt;p&gt;Well, saner heads have prevailed. Microblogger will not rely on sending OS signals to alert the crawler of new messages (it was a terrible idea anyway). Instead, the crawler will ping the web server on a private URL periodically to get new messages. The implementation details have not been solidified, but I do like this solution a lot more than the terrible option of sending signals. Plus, this method is scalable to additional servers. &lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://twitter.com/macromicah"&gt;Micha&lt;/a&gt; for the suggestion.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-diary-signals-follow-up</guid><pubDate>Tue, 31 Mar 2015 22:09:00 +0000</pubDate></item><item><title>Priming the Pump</title><link>http://brianschrader.com/archive/priming-the-pump/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://cgpgrey.com/"&gt;C.G.P. Grey&lt;/a&gt; recently announced that he will be posting his videos to &lt;a href="https://www.youtube.com/watch?v=d-ezHpAqJmI"&gt;iTunes and RSS&lt;/a&gt; in addition to putting them on YouTube. His move is part of a growing trend as more and more creators move away from relying solely on proprietary platforms like YouTube. Having videos on YouTube is great; having YouTube be the only place the videos live is scary, and it puts a lot of power in YouTube's hands.&lt;/p&gt;
&lt;p&gt;More and more I'm hearing bloggers, video producers, and musicians talk about going back to more open, agnostic systems like RSS and blogs. There's been a lot talk of reinventing blogging (*cough* Dave Winer *cough*) and of creators owning their own content. &lt;a href="http://brianschrader.com/archive/the-open-microblog-standard/"&gt;Microblogger&lt;/a&gt; for one, hopes to be an active participant in the push to open up the internet. &lt;/p&gt;
&lt;p&gt;Together, we seem to be priming the pump for a resurgence of a more open internet, and that's exciting. With Facebook pushing harder then ever to trap other people's content inside its walled garden, and Twitter closing the doors on what developers can do with its API, a resurgence of the open internet is exactly what we need. We need to push for companies to use open standards, and open access to data, and we need to use them ourselves. Its time for the pendulum to swing back this way.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/priming-the-pump</guid><pubDate>Tue, 31 Mar 2015 21:49:00 +0000</pubDate></item><item><title>Roderick on the Line: Space Exploration is Human Nature</title><link>http://brianschrader.com/archive/roderick-on-the-line-space-exploration-is-human-nature/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;In the absence of an answer to the question, "Why?" all you can do is explore.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;center&gt;
&lt;audio controls style="width:60%;"&gt;
    &lt;source src="/audio/rotl_0142_cut.mp3" type="audio/mpeg" /&gt;
    Your browser does not support the audio tag.
&lt;/audio&gt;
&lt;/center&gt;
Magnificent episode. Really worth a listen.&lt;/p&gt;
&lt;aside&gt;And apparently I can't get chapter support to work, so here's the sections of the audio clip.&lt;/aside&gt;

&lt;ul&gt;
&lt;li&gt;00.00 - Why?&lt;/li&gt;
&lt;li&gt;01.50 - One-way trip to Mars&lt;/li&gt;
&lt;li&gt;05.15 - Why? Exactly!&lt;/li&gt;
&lt;li&gt;07.39 - Reasons against space travel&lt;/li&gt;
&lt;li&gt;08.45 - Privatization of Space Exploration&lt;/li&gt;
&lt;/ul&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/roderick-on-the-line-space-exploration-is-human-nature</guid><pubDate>Tue, 10 Mar 2015 05:26:00 +0000</pubDate></item><item><title>Why Everyone Was Wrong About Net Neutrality</title><link>http://brianschrader.com/archive/why-everyone-was-wrong-about-net-neutrality/</link><description>&lt;![CDATA[&lt;p&gt;An interesting take on why the new FCC regulations may be here to stay.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Looking to the future, there's one last thing that everyone might be wrong about. The general assumption is that the new rules will be met with fierce and protracted litigation (perhaps decades of it, warn the greatest doomsdayers). I've said myself that there will be litigation, and it is true that, in our times, most serious regulation is immediately challenged in court, almost as a kind of corporate reflex. Verizon and A.T. &amp;amp; T. have both already threatened to sue. But maybe this prediction is wrong, too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.newyorker.com/business/currency/why-everyone-was-wrong-about-net-neutrality"&gt;Why Everyone Was Wrong About Net Neutrality &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/why-everyone-was-wrong-about-net-neutrality</guid><pubDate>Sun, 08 Mar 2015 20:01:00 +0000</pubDate></item><item><title>Microblog Crawler v1.3 Released</title><link>http://brianschrader.com/archive/microblog-crawler-v13-released/</link><description>&lt;![CDATA[&lt;p&gt;I'm pleased to announce that version 1.3 of the Microblog Crawler is now available on &lt;a href="https://github.com/Sonictherocketman/microblog_crawler"&gt;GitHub&lt;/a&gt; and &lt;a href="https://pypi.python.org/pypi/MicroblogCrawler"&gt;PyPi&lt;/a&gt;! &lt;/p&gt;
&lt;p&gt;To install use:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install MicroblogCrawler&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Release Notes&lt;/h2&gt;
&lt;p&gt;The big news: Version 1.3 is now multiprocessed!&lt;/p&gt;
&lt;h3&gt;Among other things, version 1.3 also includes a number of fixes and improvements.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;on_item callback now includes the feed information as the second parameter. This is a breaking change in the API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;on_info callback now receives a dictionary response of all of the info fields in a given feed. Previous versions received a name, value tuple.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiprocessing now allows the crawler to process 4 feeds (or more if you override the value) at once.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed a number of bugs that allowed duplicates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed an issue where feed crawl times may be inaccurately reported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fixed the timezone problem. Feeds without timezones are parsed according to their HTTP response timezone.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Added a bunch of 'Good Citizen' features like:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added crawler user agent and proper subscriber count reporting to remote servers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crawler is now HTTP status code aware and static files will not be parsed if they have not been modified (HTTP 304).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added automatic 301 redirection behavior and MAX_REDIRECTS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added support for returning specific error codes from other HTTP headers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-v13-released</guid><pubDate>Sun, 08 Mar 2015 00:00:00 +0000</pubDate></item><item><title>Clarifying Structure</title><link>http://brianschrader.com/archive/clarifying-structure/</link><description>&lt;![CDATA[&lt;p&gt;&lt;link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/default.min.css"&gt;&lt;/p&gt;
&lt;script src="http://yandex.st/highlightjs/8.0/highlight.min.js"&gt;&lt;/script&gt;

&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

&lt;p&gt;In moving between my day job, programming in Java, and my personal projects, usually in Python, there tends to be a lot of bleedover from one language/paradigm to the other. I love Python. It's a fun, straghtforward, powerful language and it has lots of great features and frameworks built up around it, but Python's dynamic nature can lead to problems with readability and understandability(?) when developers take it for granted.&lt;/p&gt;
&lt;p&gt;Say one thing for Java, say that it's picky. It wants one class per file, getters and setters are explicit, and it can be very verbose (in the wrong ways). One thing Java does have though, is clear structure. Classes have members, members are laid out in advance, and you know what to expect. Python passes dictionaries like Java throws NullPointerExceptions: everywhere. Unlike NullPointerExceptions though, Python's reliance on dictionaries is one of my favorite features of the language, but relying on data types, which have no default structure, means that anyone reading your code will have to, not only decipher the meaning of the code, but also the structure of your data. Clarifying the structure of your dictionaries explicitly will help readability and enforce you to adhear to that structure down the line.&lt;/p&gt;
&lt;p&gt;Here's some sample code that doesn't clarify ahead of time what the structure of the dictionary will be:&lt;/p&gt;
&lt;pre&gt;&lt;code class='python'&gt;    results = {}

    results['users'] = get_users()

    results['posts'] = [post for post in get_posts()]

    if my_user_id not in results['users']:

        results['users'].append(my_user_id)

    results['last_post_times'] = [last_post_time for last_post_time in get_times()]

    for lpt in results['last_post_times']:

        if lpt['user'] not in results['users']:

            raise SomeError

    return results

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although it's not too hard to see, the structure of results can't be easily determined from the first line. You have to walk the code to see the structure.&lt;/p&gt;
&lt;pre&gt;&lt;code class='python'&gt;    &gt;&gt;&gt; results = {

            'users': [

                'terry.gilliam',

                'eric.idle',

                'graham.chapman',

                'john.cleese',

                'michael.palin',

                'terry.jones'

            ],

            'posts': [

                { 

                    'user': 'john.cleese',  

                    'content': 'How to defend yourself against a man armed with a banana.'

                },

                {

                    'user': 'eric.idle',

                    'content': '@john.cleese What about a pointed stick?'

                }

            ],

            'last_post_times': [...]

        }

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another way of laying out this code would be like this. Here, we clarify the structure that results will have upfront.&lt;/p&gt;
&lt;pre&gt;&lt;code class='python'&gt;    results = { 'users': [], 'posts': [], 'last_post_times': [] }

    # The rest is the same...

    results['users'] = get_users()

    results['posts'] = [post for post in get_posts()]

    if my_user_id not in results['users']:

        results['users'].append(my_user_id)

    results['last_post_times'] = [last_post_time for last_post_time in get_times()]

    for lpt in results['last_post_times']:

        if lpt['user'] not in results['users']:

            raise SomeError

    return results

&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now, from looking only at the first line, we know the structure that results will take. We don't have to decipher it. There's no performance difference in either approach, but laying out the structure of the dictionary ahead of time makes the code more easily scannable. &lt;/p&gt;
&lt;p&gt;Python will let you be sloppy in ways that Java just won't. Overall I much prefer working in Python, but because its so forgivable and dynamic, I'm constantly finding myself forcing structure onto my code to make it more understandable when I eventually come back to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href="https://twitter.com/macromicah"&gt;Someone&lt;/a&gt; at the local Python meetup group told me about &lt;a href="http://stackoverflow.com/a/2970722/2085172"&gt;NamedTuples&lt;/a&gt; saying, "If you're looking for that structure, I'm wondering if you should be using a dictionary."&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/clarifying-structure</guid><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate></item><item><title>Microblog Crawler Diary: Signals</title><link>http://brianschrader.com/archive/microblog-crawler-diary-signals/</link><description>&lt;![CDATA[&lt;p&gt;I've been turning this issue over in my head all day, and I think I've got a workable solution. Here's the problem: Since the web-app and the crawler are two separate processes (completely unrelated since the crawler is a cron job and the web-app is running under mod_wsgi) they don't have any way to communicate. Normally this isn't a problem since they don't really need to communicate. The crawler does its thing, and inserts records into a cache, and the web-app reads from the cache. Simple. However, my goal now is to support server notifications for new posts. That is, when a user posts a message, any service that has registered for notifications will be pinged to let them know that a new post is available. That way the server doesn't have to poll URLs constantly to receive to-the-minute updates.&lt;/p&gt;
&lt;p&gt;Sending these messages is simple. Receiving them is hard. Upon receiving a message, the app server needs to notify the crawler that it should go and fetch a given URL (and possibly even a given item). Interrupting a process that is completely unrelated and that could be right in the middle of something else, is not an easy problem to solve. Here's my solution though. Currently, when the crawler starts up it checks to see if there is a &lt;code&gt;pid&lt;/code&gt; file in the system's temp directory. If there is, then it quits, if not it creates one and sets about its business. The pid file tells the crawler that an instance of itself is already running. The web-app will read the pid from that file, write the link it's supposed to crawl to another file, and send a signal to the crawler process with that pid. &lt;/p&gt;
&lt;p&gt;The crawler will have a handler for that signal that will then pause the crawling, (if it is being done) read in the link that is supposed to be crawled, and do so. Once it is done crawling, it records the link, and inserts the new post into the cache. The crawler then resumes its job of crawling the list of links, and if that link is the same as the link recorded in the signal handler, then it moves on without processing it (since it has already done so). &lt;/p&gt;
&lt;p&gt;It does seem a bit primitive, but it should be straight forward to implement. With this implemented, the crawler can increase its default crawling interval and fall back to just being notified if anything new comes along.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Side note:&lt;/strong&gt; I will have to be careful what signals are allowed to pass to the crawler. If unchecked, spammers could easily stop the crawler dead in its tracks (since I would be essentially sending OS interrupts for every message received). To mitigate this, the web-app will keep a whitelist of servers it has requested updates from and only accept messages from those servers. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-diary-signals</guid><pubDate>Tue, 24 Feb 2015 03:07:00 +0000</pubDate></item><item><title>Microblog Crawler Diary: Timezones</title><link>http://brianschrader.com/archive/microblog-crawler-diary-timezones/</link><description>&lt;![CDATA[&lt;p&gt;Akin to &lt;a href="http://inessential.com/vespersyncdiary"&gt;Brent Simmons' Vesper Sync Diary&lt;/a&gt; I think I'm gonna start posting updates and concerns that I have as I continue to develop the various parts of Microblogger. &lt;/p&gt;
&lt;p&gt;So far, my biggest issue, aside from learning &lt;a href="http://flask.pocoo.org"&gt;Flask&lt;/a&gt;, has been constructing the user's home timeline. For those who are unfamiliar with Microblogger, basically the home timeline looks just like Twitter's timeline. It consists of a reverse chronological list of posts by people that the user follows. Since Microblogger has to construct this timeline from disparate XML feeds, I have to account for future developers not including timezones in their &lt;code&gt;pubdate&lt;/code&gt; strings. &lt;/p&gt;
&lt;p&gt;Here's the basic problem. Consider that I have a correctly formatted microblog post:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;item&amp;gt;
    &amp;lt;guid&amp;gt;{some guid}&amp;lt;/guid&amp;gt;
    &amp;lt;description&amp;gt;Hi!&amp;lt;/description&amp;gt;
    &amp;lt;pubdate&amp;gt;Wed, Feb 28 2014 08:00:00 EST&amp;lt;/pubdate&amp;gt;
&amp;lt;/item&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now consider that I have an incorrectly formatted one:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;item&amp;gt;
    &amp;lt;guid&amp;gt;{some guid}&amp;lt;/guid&amp;gt;
    &amp;lt;description&amp;gt;Hi!&amp;lt;/description&amp;gt;
    &amp;lt;pubdate&amp;gt;Wed, Feb 28 2014 05:01:00&amp;lt;/pubdate&amp;gt;
&amp;lt;/item&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which post comes first? Initially you would think the top one would come first since it was posted after the second. However if we know that the second was posted in Pacific Standard Time, then it should actually come first, and not 3 hours behind. Accounting for bad formatting is arguably something I should hold off on doing until I encounter it, and I've thought about that a lot. However, I think I've come up with a very simple way to work around this problem for a large percentage of cases where this happens.&lt;/p&gt;
&lt;p&gt;My workaround is to use the timezone present in the HTTP response timestamp. &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HTTP/1.1 GET
Date: Wed, Feb 28 2014 08:31:00 EST
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will tell me the timezone that the server is in, and from there I can assume the most likely timezone for the &lt;code&gt;pubdate&lt;/code&gt; is the same.&lt;/p&gt;
&lt;p&gt;So that's how I'm proceeding: If there is no timezone present in the &lt;code&gt;pubdate&lt;/code&gt;, then use the timezone from the HTTP response header. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-diary-timezones</guid><pubDate>Sun, 22 Feb 2015 23:20:00 +0000</pubDate></item><item><title>Elon Musk is Crazy</title><link>http://brianschrader.com/archive/elon-musk-is-crazy/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;It would be an incremental process, and proceeds from the Earth internet could will help pay for the $10 billion investment in the colony and internet on Mars, Musk said. &lt;/p&gt;
&lt;p&gt;"People should not expect this to be active sooner than five years," he said. "But we see it as a long-term revenue source for SpaceX to be able to fund a city on Mars..." - Elon Musk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The man is crazy, really crazy, but in a good way. I like it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.universetoday.com/118347/elon-musk-wants-to-bring-the-internet-to-mars/"&gt;Elon Musk Wants to Bring the Internet to Mars &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Apparently &lt;a href="http://www.rawstory.com/rs/2015/01/elon-musks-spacex-gets-1-billion-in-funding-from-google-and-fidelity/"&gt;Google is in on the project too.&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/elon-musk-is-crazy</guid><pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate></item><item><title>Fight for Space - Why Space?</title><link>http://brianschrader.com/archive/fight-for-space---why-space/</link><description>&lt;![CDATA[&lt;p&gt;&lt;center&gt;
&lt;iframe width="560" height="315" src="//www.youtube.com/embed/LO8DvN53esE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Space exploration is important for our economy, our society, and our future as a species. The upcoming documentary, "Fight for Space" was funded on Kickstarter almost 2 years ago, and they've been hard at work making the case for space. Great work guys, I can't wait for the finished film.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/fight-for-space---why-space</guid><pubDate>Thu, 15 Jan 2015 05:53:00 +0000</pubDate></item><item><title>What-If: Pools on the Moon</title><link>http://brianschrader.com/archive/what-if-pools-on-the-moon/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What if there was a lake on the Moon?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;... Because of the reduced gravity on the Moon, the water would be launched upward more easily, just like the swimmers. The result would be larger waves and more flying droplets. In technical terms, a pool on the Moon would be more "splashy".&lt;/p&gt;
&lt;p&gt;To avoid splashing all the water out, you'd want to design the deck so water drains quickly back into the pool. You could just make the rim higher, but then you'd spoil one of the key joys of a pool on the Moon&amp;#8212;exiting via Slip 'N Slide.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I love &lt;a href="http://what-if.xkcd.com/124/"&gt;XKCD&lt;/a&gt;.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/what-if-pools-on-the-moon</guid><pubDate>Thu, 15 Jan 2015 05:28:00 +0000</pubDate></item><item><title>The Results of SpaceX's Attempt to Recover Falcon</title><link>http://brianschrader.com/archive/the-results-of-spacexs-attempt-to-recover-falcon/</link><description>&lt;![CDATA[&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Rocket made it to drone spaceport ship, but landed hard. Close, but no cigar this time. Bodes well for the future tho.&lt;/p&gt;&amp;mdash; Elon Musk (@elonmusk) &lt;a href="https://twitter.com/elonmusk/status/553855109114101760"&gt;January 10, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Grid fins worked extremely well from hypersonic velocity to subsonic, but ran out of hydraulic fluid right before landing.&lt;/p&gt;&amp;mdash; Elon Musk (@elonmusk) &lt;a href="https://twitter.com/elonmusk/status/553963793056030721"&gt;January 10, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/alankerlin"&gt;@alankerlin&lt;/a&gt; Hydraulics are usually closed, but that adds mass vs short acting open systems. F9 fins only work for 4 mins. We were ~10% off.&lt;/p&gt;&amp;mdash; Elon Musk (@elonmusk) &lt;a href="https://twitter.com/elonmusk/status/554023312033341440"&gt;January 10, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Amazing really. For a first test, it really is amazing they did as well as they did. Congrats SpaceX.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.parabolicarc.com/2015/01/10/elon-musk-explains-spacex-falcon-9-recovery-attempt/"&gt;Parabolic Arc &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-results-of-spacexs-attempt-to-recover-falcon</guid><pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate></item><item><title>Time Machine Transfer Trouble Resolved</title><link>http://brianschrader.com/archive/time-machine-transfer-trouble-resolved/</link><description>&lt;![CDATA[&lt;p&gt;Finally got it working with a block copy via Disk Utility. I guess that's how people used to do it in the pre OS X 10.6 days. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/time-machine-transfer-trouble-resolved</guid><pubDate>Fri, 02 Jan 2015 19:02:00 +0000</pubDate></item><item><title>Microblogger Wiki and Issues are Live!</title><link>http://brianschrader.com/archive/microblogger-wiki-and-issues-are-live/</link><description>&lt;![CDATA[&lt;p&gt;I've been chugging along with &lt;a href="https://github.com/Sonictherocketman/Microblogger"&gt;Microblogger&lt;/a&gt; the last couple of days, and progress has been good. Seeing as it's December 30th though, I doubt I'll make my &lt;a href="http://brianschrader.com/archive/microblogger-status-updates-and-more/"&gt;end of the year deadline&lt;/a&gt;. Today, I added quite a bit of documentation and &lt;a href="https://github.com/Sonictherocketman/Microblogger/wiki"&gt;even a wiki&lt;/a&gt; to the project! I've also clarified the &lt;a href="https://github.com/Sonictherocketman/Microblogger/issues"&gt;issues&lt;/a&gt; quite a bit, so if you're interested in helping out with the project, but aren't sure what you can help with, or if you want to read about how the project works go &lt;a href="https://github.com/Sonictherocketman/Microblogger/"&gt;check it out&lt;/a&gt;!&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblogger-wiki-and-issues-are-live</guid><pubDate>Wed, 31 Dec 2014 04:31:00 +0000</pubDate></item><item><title>Time Machine Transfer Trouble</title><link>http://brianschrader.com/archive/time-machine-transfer-trouble/</link><description>&lt;![CDATA[&lt;p&gt;A week ago, I purchased a new 3TB drive and a USB 3.0 enclosure with the intent to transfer my Time Machine backup off of the 1.5TB drive it currently inhabits. &lt;/p&gt;
&lt;p&gt;After almost a week and about 6 different approaches, I still haven't been able to copy the entire set of backups. According to Apple, dragging the folder over to the new drive in the Finder should work, but about 100GB into the transfer it throws up an error, "Presentation could not be opened," and quits. After some investigation, I discovered that "Presentation" is the name of an old Keynote file I have backed up. I have no idea why the Finder needs to open that presentation, but apparently it does.&lt;/p&gt;
&lt;p&gt;Last night I tried sudoing a cp. About 20 mins in, cp got stuck and even after letting it go all night, it never got unstuck. Tonight I'm trying again, this time with rsync, after a suggestion from Stack Overflow. If this doesn't work, I don't know what else to try.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/time-machine-transfer-trouble</guid><pubDate>Wed, 31 Dec 2014 03:36:00 +0000</pubDate></item><item><title>Microblogger status updates and more</title><link>http://brianschrader.com/archive/microblogger-status-updates-and-more/</link><description>&lt;![CDATA[&lt;p&gt;Over the last few weeks I've been working on the first implementation of Microblogger (new name desired): a self hosted microblog implementing the &lt;a href="http://openmicroblog.com"&gt;Open Microblog standard&lt;/a&gt;. Work has been slower than I'd like, but steady nonetheless. The &lt;a href="http://github.com/Sonictherocketman/microblog_crawler"&gt;microblogcrawler&lt;/a&gt; I announced a couple weeks back, was just one of many pieces of the project, and one that could easily be spin off into its own little sub-project.&lt;/p&gt;
&lt;p&gt;Yessir, all was going well: basic crawling is almost in place, and almost everything regarding the user's data and profile is good to go. I was working on adding another crawler to the mix (for on demand requests) and flushing out the caching engine last time I touched the project, trouble is that was over a week ago. Since then all progress has stopped. &lt;/p&gt;
&lt;p&gt;Due to a colony of microbes wreaking havoc on my immune system, I've been out of commission all week. With a busy weekend ahead of me, I'm holding out hope that I'll be able to get something done, but it probably won't be much. Either way, next week, I'm diving back in. &lt;/p&gt;
&lt;p&gt;I won't promise anything, but my tentative release date is the end of the month. That said, there's still a lot to do. As of now my remaining tasks for version 1.0 are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix bugs in the posting system.&lt;/li&gt;
&lt;li&gt;Create another (more dynamic) crawler that can be spun up on demand to fulfill user requests.&lt;/li&gt;
&lt;li&gt;Make the website actually good.&lt;/li&gt;
&lt;li&gt;Implement messaging (public only for version 1.0)&lt;/li&gt;
&lt;li&gt;Complete and test the caching engine.&lt;/li&gt;
&lt;li&gt;Finish making tests for everything.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These come in no particular order, and as you can see, some of them are pretty big. I've also documented most of these items in the &lt;a href="https://github.com/Sonictherocketman/Microblogger/issues"&gt;Issues section&lt;/a&gt; of the project's &lt;a href="https://github.com/Sonictherocketman/Microblogger"&gt;GitHub page&lt;/a&gt; for further reference.&lt;/p&gt;
&lt;p&gt;All this being said, I'm looking for great people to help keep the project on schedule and later improve the design. In particular, I'm looking for someone interested in building the front-end. If that sounds interesting to you, &lt;a href="http://brianschrader.com/about/"&gt;let me know&lt;/a&gt;! I'm open to using whatever technology you'd like (Angular/Ember, Bootstrap, etc). &lt;/p&gt;
&lt;p&gt;Have a good weekend everyone! I'll be back to work on the project ASAP. See you then!&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblogger-status-updates-and-more</guid><pubDate>Sat, 13 Dec 2014 07:16:00 +0000</pubDate></item><item><title>What if sending money was as easy as AirDrop</title><link>http://brianschrader.com/archive/what-if-sending-money-was-as-easy-as-airdrop/</link><description>&lt;![CDATA[&lt;p&gt;Dan Moren:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's long seemed ridiculous to me that it's not easier to transfer funds between people electronically. After all, your bank account and my bank account are little more than entries in a ledger somewhere, represented by 1s and 0s. Why should it be any harder for me to send you some bits that turn into money than it is for me to send you an email?&lt;/p&gt;
&lt;p&gt;In theory, Apple could even offer the ability to send funds to people via the Internet. Apple Pay already works for some online transactions, and once again Square Cash has proved that you can transfer funds online without too much hassle.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please, please Apple, Square, Chase, &lt;del&gt;Google&lt;/del&gt;, please make this real. The day sharing a check with friends or paying someone back for lunch becomes as easy as it is with cash is the day I abandon cash forever. And I'd never look back.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://sixcolors.com/post/2014/12/wish-list-apple-pay-your-friends/"&gt;Wish List: Apple Pay your friends &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/what-if-sending-money-was-as-easy-as-airdrop</guid><pubDate>Thu, 04 Dec 2014 20:56:00 +0000</pubDate></item><item><title>Hypervelocity Stars</title><link>http://brianschrader.com/archive/hypervelocity-stars/</link><description>&lt;![CDATA[&lt;p&gt;Universe Today:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Back in 1988, astronomer Jack Hills predicted a type of "rogue" star might exist that is not bound to any particular galaxy. These stars, he reasoned, were periodically ejected from their host galaxy by some sort of mechanism to begin traveling through interstellar space.&lt;/p&gt;
&lt;p&gt;And now, in a series of papers that published in arXiv Astrophysics, two Harvard researchers have argued that some of these stars may be traveling close to the speed of light. Known as semi-relativistic hypervelocity stars (SHS), these fast-movers are apparently caused by galactic mergers, where the gravitational effect is so strong that it fling stars out of a galaxy entirely. These stars, the researchers say, may have the potential to spread life throughout the Universe.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Really cool. I find myself thinking about what life would be like on a planet orbiting a star that's zooming around the universe, at 3% the speed of light(!), while constantly under the effects of relativity. I can't help but think it would make a great setting for a novel (or a Doctor Who episode).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.universetoday.com/116872/planets-could-travel-along-with-rogue-hypervelocity-stars-spreading-life-throughout-the-universe/"&gt;Planets Could Travel Along with Rogue 'Hypervelocity' Stars, Spreading Life Throughout the Universe &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/hypervelocity-stars</guid><pubDate>Wed, 03 Dec 2014 23:47:00 +0000</pubDate></item><item><title>Dave Winer on Donating to Wikipedia</title><link>http://brianschrader.com/archive/dave-winer-on-donating-to-wikipedia/</link><description>&lt;![CDATA[&lt;p&gt;Dave Winer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Without Wikipedia the web would be fully dominated by business models. There would be no way to get the simple single fact you need. If there weren't such a thing as Wikipedia, with all its flaws, we'd wish there was. Or in the future you would tell the younguns about this thing that was so wonderful that had just the facts you wanted and nothing more, and they'd roll their eyes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Try to picture the internet without Wikipedia. When that terrible idea starts to give you chills, please consider donating to Wikipedia; I did.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://scripting.com/2014/12/03/iGave100ToWikipedia.html"&gt;I gave $100 to Wikipedia &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/dave-winer-on-donating-to-wikipedia</guid><pubDate>Wed, 03 Dec 2014 23:11:00 +0000</pubDate></item><item><title>Microblog Crawler v1.0 Released</title><link>http://brianschrader.com/archive/microblog-crawler-v10-released/</link><description>&lt;![CDATA[&lt;p&gt;Today, I'm proud to announce that version 1.0 of my Microblog/RSS feed crawler is released. It's &lt;a href="https://github.com/Sonictherocketman/microblog_crawler"&gt;up on GitHub&lt;/a&gt; for all to see and installation is as easy as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install microblogcrawler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;From the README:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[The MicroblogCrawler is a] basic feed crawler/parser for traversing microblog and RSS feeds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some quick notes about the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's written in Python.&lt;/li&gt;
&lt;li&gt;It's my first project to be officially released on PyPi&lt;/li&gt;
&lt;li&gt;This crawler is actually an offshoot project from my &lt;a href="https://github.com/Sonictherocketman/Microblogger"&gt;Microblogger&lt;/a&gt; project. &lt;/li&gt;
&lt;li&gt;The crawler's API is modeled after the &lt;a href="https://github.com/tweepy/tweepy"&gt;Tweepy&lt;/a&gt; StreamListener API.&lt;/li&gt;
&lt;li&gt;The crawler is 241 lines long, and a significant portion of those line are documentation (~35%).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If this project interests you, please check it out. I'd love feedback on the design and ideas for improvements!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Sonictherocketman/microblog_crawler"&gt;MicroblogCrawler: GitHub &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microblog-crawler-v10-released</guid><pubDate>Sat, 29 Nov 2014 20:35:00 +0000</pubDate></item><item><title>Star Wars VII Teaser (and thoughts on the new lightsabers)</title><link>http://brianschrader.com/archive/star-wars-vii-teaser-and-thoughts-on-the-new-lightsabers/</link><description>&lt;![CDATA[&lt;p&gt;It looks good. As a few people on Twitter have said, this trailer feels more like Star Wars than the prequels did, and I'd have to agree. There's X-Wings, the Millennium Falcon, Rebel pilots, and more. Truth be told though, my brain still doesn't know how to process the trailer. Its harder than I would have thought to accept that there's going to be a new Star Wars. Regardless, the teaser looks very promising. Let's hope the movie is as good.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OMOVFvcNfvE"&gt;Star Wars VII Teaser Trailer &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Ok well I thought I could get through this without talking about the new lightsaber. I can't, so here goes.&lt;/p&gt;
&lt;p&gt;I like the new lightsaber a lot. For something that was on screen for literally two seconds, I have more thoughts on it than the entire rest of the trailer.&lt;/p&gt;
&lt;p&gt;To start, it looks like reinventing the lightsaber is something that only the Sith can do, and it's nice to see them continuing to change the design. Putting aside the impracticality of it, (since come on, it's Star Wars) I really like the new look of the blade. By making it more than just a solid beam of light, it gives the weapon a dangerous look. The blade looks like it's just barely contained; it could fail at any moment. It gives the weapon a feeling it's never had before. The lightsaber is no longer a dignified weapon of noble knights, but savage weapon, a shadow of its former self, a relic of a bygone age.&lt;/p&gt;
&lt;p&gt;Star Wars has always been a "used-future" universe, and the lightsabers have always looked too new, too nice for the world they're in. The Sith are stretched thin, as far as we know, and the Jedi are in the process of recovering from utter destruction. The Empire is trying to recover from the loss of its leader, and the Rebellion is trying to make the most of it's victory over the Empire. A barely functional lightsaber in a barely functional world is a nice bit of symbolism. &lt;/p&gt;
&lt;p&gt;Lightsabers are the weapons of the Jedi Knights, elegant weapons, for a more civilized age... a bygone age. This Star Wars takes place in a new world, a brutal world, a broken world. It's only fitting that the new lightsabers reflect that.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/star-wars-vii-teaser-and-thoughts-on-the-new-lightsabers</guid><pubDate>Fri, 28 Nov 2014 18:04:00 +0000</pubDate></item><item><title>ISS Livestream now in 720p HD</title><link>http://brianschrader.com/archive/iss-livestream-now-in-720p-hd/</link><description>&lt;![CDATA[&lt;p&gt;Really cool to see NASA continuing to upgrade the livestream. I've shown it to so many people and they are always impressed. Little gestures like this help to motivate the public's interest in space. Plus now the stream title, "ISS HD Earth Viewing Experiment" isn't a lie.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ustream.tv/channel/iss-hdev-payload"&gt;ISS HD Earth Viewing Experiment &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/iss-livestream-now-in-720p-hd</guid><pubDate>Mon, 24 Nov 2014 02:31:00 +0000</pubDate></item><item><title>Ursula K. Le Guin At The National Book Awards</title><link>http://brianschrader.com/archive/ursula-k-le-guin-at-the-national-book-awards/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Ursula_K._Le_Guin"&gt;Ursula Le Guin&lt;/a&gt; hit it out of the park, with her speech, at the National Book awards. Her speech in defense of Science-Fiction/Fantasy writers as the "realists of a larger reality," and her impassioned call for writers to stop allowing themselves to be "sold like deodorant" really takes the cake.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.npr.org/blogs/thetwo-way/2014/11/20/365434149/book-news-ursula-k-le-guin-steals-the-show-at-the-national-book-awards?sc=ipad&amp;amp;f=1008"&gt;Ursula K. Le Guin Steals The Show At The National Book Awards &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/ursula-k-le-guin-at-the-national-book-awards</guid><pubDate>Sun, 23 Nov 2014 06:51:00 +0000</pubDate></item><item><title>Philae Breaks our Hearts</title><link>http://brianschrader.com/archive/philae-breaks-our-hearts/</link><description>&lt;![CDATA[&lt;p&gt;ESA&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With its batteries depleted and not enough sunlight available to recharge, Philae has fallen into 'idle mode' for a potentially long silence. In this mode, all instruments and most systems on board are shut down.&lt;/p&gt;
&lt;p&gt;"Prior to falling silent, the lander was able to transmit all science data gathered during the First Science Sequence", says DLR's Stephan Ulamec, Lander Manager, who was in the Main Control Room at ESOC tonight.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://blogs.esa.int/rosetta/2014/11/15/our-landers-asleep/"&gt;OUR LANDER'S ASLEEP &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/philae-breaks-our-hearts</guid><pubDate>Sun, 16 Nov 2014 18:11:00 +0000</pubDate></item><item><title>Philae Lands on Comet 67P</title><link>http://brianschrader.com/archive/philae-lands-on-comet-67p/</link><description>&lt;![CDATA[&lt;p&gt;type: post&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Philae_(spacecraft)"&gt;Philae&lt;/a&gt; detached from &lt;a href="http://en.wikipedia.org/wiki/Rosetta_(spacecraft)"&gt;Rosetta&lt;/a&gt;, landed on a &lt;a href="http://en.wikipedia.org/wiki/67P/Churyumov%E2%80%93Gerasimenko"&gt;comet&lt;/a&gt; the &lt;a href="http://graphics8.nytimes.com/newsgraphics/2014/11/08/rosetta-philae/assets/NYT_comet_manhattan_comparison.jpg"&gt;the size of Manhattan&lt;/a&gt; that's 321,908,000 miles away and  moving at 40,000 mph, using an orbital approach that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Rosetta's approach trajectory" src="http://brianschrader.com/images/blog/philae_trajectory.png" /&gt;&lt;/p&gt;
&lt;p&gt;Congratulations to everyone at ESA who made this landing possible. I can't wait to see the data Philae sends back.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.universetoday.com/116231/touchdown-philae-successfully-lands-on-rosettas-comet/"&gt;Here's some background info &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nytimes.com/interactive/2014/11/12/science/space/rosetta-philae-comet-landing.html"&gt;Here's some pictures from Rosetta and Philae &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://xkcd.com/1446/"&gt;Here's the XKCD about it &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.tanyaharrisonofmars.com/philae.gif"&gt;Here's that same XKCD in GIF form &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/philae-lands-on-comet-67p</guid><pubDate>Wed, 12 Nov 2014 19:39:00 +0000</pubDate></item><item><title>Obama "urges" FCC to reclassify ISPs as Utilities</title><link>http://brianschrader.com/archive/obama-urges-fcc-to-reclassify-isps-as-utilities/</link><description>&lt;![CDATA[&lt;p&gt;type: post&lt;/p&gt;
&lt;p&gt;Today, President Obama announced his new plan to protect Net Neutrality. It's really important to remember that he doesn't have any power over the FCC, and he can only "urge" them to protect Net Neutrality, which he claims he will do. I won't say I'm confident he'll be able to effect any change, but the sentiment is nice at least. Another voice in the fight is always appreciated.&lt;/p&gt;
&lt;p&gt;What's interesting is that the President isn't calling for an extension of Net Neutrality protections, he's taking his recommendation one step further. He's "urging" the FCC to reclassify ISPs as utilities. ISPs would be like the water company. I &lt;em&gt;really&lt;/em&gt; doubt that the FCC would approve that severe of legislation, but I do think that's the direction we need to force ISPs to go. The President seems committed now; let's see if he still cares about this in 6 months.&lt;/p&gt;
&lt;p&gt;Just for the sake of argument, let's assume that the FCC ignores the cable company lobbyists and reclassifies ISPs as utilities. Go one step further and assume they did all this because they heard the President suggest it, and the people advocate it (or vice versa). &lt;em&gt;If&lt;/em&gt; all that were to happen, I would honestly have hope that maybe our government isn't as broken as it seems. But that's a big "if".&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.theverge.com/2014/11/10/7185933/fcc-should-reclassify-internet-as-utility-obama-says"&gt;The Verge: Obama says FCC should reclassify internet as a utility &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.whitehouse.gov/net-neutrality"&gt;Net Neutrality: President Obama's Plan for a Free and Open Internet &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/obama-urges-fcc-to-reclassify-isps-as-utilities</guid><pubDate>Mon, 10 Nov 2014 20:34:00 +0000</pubDate></item><item><title>The Mac Mini Server Configuration is Dead</title><link>http://brianschrader.com/archive/the-mac-mini-server-configuration-is-dead/</link><description>&lt;![CDATA[&lt;p&gt;Ars Technica&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the two 2.5-inch drive bays inside the new Mini has been removed and replaced with a spot for the small PCI Express SSD cards that the rest of the Macs now use. This is fine for a single-drive or Fusion Drive configuration, but you can no longer install two hard drives and mirror the data for redundancy. As a result, the $999 Mac Mini Server configuration is dead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That's a shame. I've never used a Mac Mini as a server, but lots of people do.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arstechnica.com/apple/2014/11/not-the-upgrade-we-were-hoping-for-the-2014-mac-mini-reviewed/"&gt;Not the upgrade we were hoping for: The 2014 Mac Mini reviewed &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-mac-mini-server-configuration-is-dead</guid><pubDate>Sun, 09 Nov 2014 19:30:00 +0000</pubDate></item><item><title>New Parallel Universe Theory Proposed</title><link>http://brianschrader.com/archive/new-parallel-universe-theory-proposed/</link><description>&lt;![CDATA[&lt;p&gt;A new &lt;a href="http://en.wikipedia.org/wiki/Multiverse"&gt;multiverse theory&lt;/a&gt; was proposed last week, and it could be promising. I have to say, the basic idea of the theory is very appealing to me. Basically the idea (as far as I understand it) is that the unpredictable world we live in is actually one of many (but not infinite) parallel worlds that reside in the same physical space and time as ours, right on top of each other, but in different dimensions. These many worlds follow basic, Newtonian laws, and do not, on their own have the principle of Quantum Mechanics. &lt;/p&gt;
&lt;p&gt;What does that mean? Well, since these 'worlds', as the theory calls them, aren't separated from each other (like other multi-universe theories claim), they can interact with each other. These interactions are what give rise to what we see as Quantum Mechanical effects. &lt;/p&gt;
&lt;p&gt;From &lt;a href="http://www.universetoday.com/"&gt;Universe Today&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hall states in the paper that simple Newtonian Physics can explain how all these worlds evolve... Certainly, Einstein's Special and General Theories of Relativity completes the Newtonian equations and are not dismissed by [Many Interacting Worlds Theory]. However, the paper begins with the simpler model using Newtonian physics and even explains that some fundamental behavior of quantum mechanics unfolds from a universe comprised of just two interacting worlds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that, on their own, a given world is just a classical Newtonian environment. Newton's laws apply. Quantum Mechanics arises from the fact that all of these, otherwise clean, Newtonian worlds are stacked together and interact. And I find this idea fascinating. It means that, if this is true, Quantum Mechanics is a consequence of reality, not a builtin principle of it, and that has me &lt;em&gt;very&lt;/em&gt; excited.&lt;/p&gt;
&lt;p&gt;A pretty straightforward, but by no means perfect metaphor is that the universe can be thought of as a billiards table. We are hitting the cue ball and watching the results as it hits the other balls. Quantum Mechanical effects, in this metaphor, would be the 7 ball randomly veering off in another direction when you hit the 4 ball. Weird right? Well, this theory basically says that the 7 ball isn't moving randomly, instead there's another person playing right next you who's hitting another cue ball at the 7 ball when you hit the 4 ball. Quantum Mechanics is the study of the 4 and 7 balls, whereas MIW theory looks at the 2 players. If we realize that there are two players and not just one, the movement of the balls is relatively easy to explain.&lt;/p&gt;
&lt;p&gt;Quantum Mechanics works, we use its principles every day. That's not going to change. What would change, if this theory proves useful, is that Quantum Mechanics would not be thought of as a fundamental principle of the universe, but merely a consequence of other principles.&lt;/p&gt;
&lt;p&gt;I'll be keeping my eye on this; hopefully it pans out for further investigation.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.universetoday.com/115915/the-world-is-not-enough-a-new-theory-of-parallel-universes-is-proposed/"&gt;Universe Today: A New Theory of Parallel Universes is Proposed &amp;#8594;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://journals.aps.org/prx/abstract/10.1103/PhysRevX.4.041013#s3"&gt;Quantum Phenomena Modeled by Interactions between Many Classical Worlds &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/new-parallel-universe-theory-proposed</guid><pubDate>Tue, 04 Nov 2014 21:19:00 +0000</pubDate></item><item><title>FCC's Tom Wheeler is trying to open up cable TV</title><link>http://brianschrader.com/archive/fccs-tom-wheeler-is-trying-to-open-up-cable-tv/</link><description>&lt;![CDATA[&lt;p&gt;type: post&lt;/p&gt;
&lt;p&gt;The Verge&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FCC Chairman Tom Wheeler just proposed a rule change that would require cable and broadcast networks to sell their programming to any company that wants to be a TV provider, not just cable or satellite companies&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Its really strange to me that the FCC (and Tom in particular) want to make TV channel distribution a more competitive market, something that I can only assume makes their cable company lobbyists very anxious, and yet the FCC has been a slave to those same lobbyists during the ongoing Net Neutrality debacle. I'd love TV to be a more direct channel-to-home system. I don't think I'd ever go back to watching on-air TV (something reserved for sportsball parties at friend's houses), but its nice to see progress.&lt;/p&gt;
&lt;p&gt;I have to wonder though, what changed? Why would the FCC decide that it's going to disobey its lobbyist for the public good now, and not 6 months ago? Did we really have that big of an impact with Net Neutrality, or is this a fluke?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.theverge.com/2014/10/28/7086473/a-real-apple-tv-might-finally-happen"&gt;The real Apple TV might finally happen if the FCC gets what it wants &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/fccs-tom-wheeler-is-trying-to-open-up-cable-tv</guid><pubDate>Sun, 02 Nov 2014 23:28:00 +0000</pubDate></item><item><title>What is your blog about?</title><link>http://brianschrader.com/archive/what-is-your-blog-about/</link><description>&lt;![CDATA[&lt;p&gt;type: post&lt;/p&gt;
&lt;p&gt;When I tell people that I have a blog, they almost always ask me the same question: "What is your blog about?" I never know how to answer that. BiteofanApple is not a (Philosophy|Lifestyle|Productivity|Science|Link) blog, its &lt;em&gt;my&lt;/em&gt; blog and its about whatever interests me. A given post could be about anything... as long as I find it interesting. Though to be a little more specific, I use this blog for 2 primary purposes: to publish my thoughts on certain topics, and as a sort of public &lt;a href="http://instapaper.com"&gt;Instapaper&lt;/a&gt; feed of articles I find interesting. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/what-is-your-blog-about</guid><pubDate>Sun, 02 Nov 2014 22:22:00 +0000</pubDate></item><item><title>Short-form blogging</title><link>http://brianschrader.com/archive/short-form-blogging/</link><description>&lt;![CDATA[&lt;p&gt;type: link&lt;/p&gt;
&lt;p&gt;Blogging is supposed to be fun. &lt;a href="http://scribbling.net"&gt;Gina Trapani&lt;/a&gt;'s heuristics for a blog post are pretty simple, and obvious. But sometimes we need to hear something from someone else for it to really sink in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;If it's a paragraph, it's a post.&lt;/b&gt; Medium-sized content gets short shrift these days. Don't go long. One or two paragraphs count. Then press publish.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Negotiate a comfort zone on two axes:&lt;/b&gt; personal and public, tech and everything else (feminism, musical theater, MMA, parenting, etc). 2001-era Scribbling.net was too personal, Lifehacker/Smarterware too tech. There's something in the middle.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Traffic is irrelevant.&lt;/b&gt; Don't even measure it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://scribbling.net/2014/10/16/short-form-blogging/"&gt;Short-form blogging &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/short-form-blogging</guid><pubDate>Sun, 02 Nov 2014 22:03:00 +0000</pubDate></item><item><title>Twitter is not a replacement for blogs</title><link>http://brianschrader.com/archive/twitter-is-not-a-replacement-for-blogs/</link><description>&lt;![CDATA[&lt;p&gt;Marco Arment&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Twitter is a complementary medium to blogging, but it's not a replacement...&lt;/p&gt;
&lt;p&gt;By knocking down a few walls and moving some furniture around, blogging is preparing for a comeback, and we'll all be better off for it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.marco.org/2014/11/01/short-form-blogging"&gt;Twitter is not a replacement for blogs &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/twitter-is-not-a-replacement-for-blogs</guid><pubDate>Sun, 02 Nov 2014 21:41:00 +0000</pubDate></item><item><title>The Professional Sharer</title><link>http://brianschrader.com/archive/the-professional-sharer/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;But I've been on The Internet long enough to see a trend. As platforms grow more popular: professional sharers cannot trust the platforms upon which they stand, audiences cannot trust the platform to show what they asked to see...&lt;/p&gt;
&lt;p&gt;I'm surprised to find myself, well into the second decade of the 21st century, doubling down on a technology invented before I was born: email.&lt;/p&gt;
&lt;p&gt;Through a lucky accident, no company owns email. It's like language: used by all, controlled by none.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-CGP Grey&lt;/p&gt;
&lt;p&gt;This kind of thing is happening more and more. First it was Facebook, and few people cared. Then it was Twitter and people got mad. Now, Youtube. CGP Grey brings up a very good point though: Platforms do this to make money. They have to do this to make money. It just sucks that how they make money is by compromising the people that made the service what it is (*cough* Twitter *cough*). &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cgpgrey.com/blog/the-professional-sharer"&gt;The Professional Sharer &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-professional-sharer</guid><pubDate>Fri, 24 Oct 2014 21:09:00 +0000</pubDate></item><item><title>AT&amp;T and Apple SIM</title><link>http://brianschrader.com/archive/att-and-apple-sim/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;...in the United States, you can choose a domestic plan from either Sprint or T-Mobile and also pick an alternate plan from the other carrier as needed. When you choose AT&amp;amp;T on iPad Air 2 and iPad mini 3, AT&amp;amp;T dedicates Apple SIM to their network only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AT&amp;amp;T: "Apple wants to do what?! Make SIM cards simpler?! Nah, we're good."&lt;/p&gt;
&lt;p&gt;I almost don't want to know what Verizon would have done.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://support.apple.com/kb/HT6499?viewlocale=en_US&amp;amp;locale=en_US"&gt;Apple Support: Apple SIM &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/att-and-apple-sim</guid><pubDate>Fri, 24 Oct 2014 20:29:00 +0000</pubDate></item><item><title>Podcast Recommendations</title><link>http://brianschrader.com/archive/podcast-recommendations/</link><description>&lt;![CDATA[&lt;p&gt;I saw a few other people posting podcast recommendations and I thought they were lacking a few crucial entries. Here's my list:&lt;/p&gt;
&lt;style type='text/css'&gt;







.post ul, #post ul {







list-style: none;







}







.post img, #post img {







margin-left:0px;







display: inline;







vertical-align: middle;







margin-right: 15px;







}







&lt;/style&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Analog(ue)" src="http://brianschrader.com/images/blog/analogue_icon.png" /&gt; &lt;a href="http://relay.fm/analogue"&gt;Analog(ue)&lt;/a&gt; with Myke Hurley and Casey Liss&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Astronomy 162 - Stars, Galaxies, &amp;amp; the Universe" src="http://brianschrader.com/images/blog/astr_162_icon.png" /&gt; &lt;a href="http://www.astronomy.ohio-state.edu/~pogge/Ast162/"&gt;Astronomy 162 - Stars, Galaxies, &amp;amp; the Universe&lt;/a&gt; with Professor Richard Pogge &lt;a href="#note"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="ATP" src="http://brianschrader.com/images/blog/atp_icon.png" /&gt; &lt;a href="http://atp.fm"&gt;ATP&lt;/a&gt; with Marco Arment, John Siracusa, and Casey Liss &lt;a href="#note"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Back to Work" src="http://brianschrader.com/images/blog/back_to_work_icon.png" /&gt; &lt;a href="http://5by5.tv/b2w"&gt;Back to Work&lt;/a&gt; with Merlin Mann and Dan Benjamin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Connected" src="http://brianschrader.com/images/blog/connected_icon.png" /&gt; &lt;a href="http://relay.fm/connected"&gt;Connected&lt;/a&gt; with Myke Hurley, Stephen Hackett, and Federico Viticci&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Core Intuition" src="http://brianschrader.com/images/blog/core_int_icon.png" /&gt; &lt;a href="http://www.coreint.org"&gt;Core Intuition&lt;/a&gt; with Daniel Jalkut and Manton Reece&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Debug" src="http://brianschrader.com/images/blog/debug_icon.png" /&gt; &lt;a href="http://www.imore.com/debug"&gt;Debug&lt;/a&gt; with Guy English and Rene Ritchie&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Edge Cases" src="http://brianschrader.com/images/blog/edge_cases_icon.png" /&gt; &lt;a href="http://edgecasesshow.com"&gt;Edge Cases&lt;/a&gt; with Andrew Pontious and Wolf Rentzsch &lt;a href="#note"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Hardcore History" src="http://brianschrader.com/images/blog/hardcore_history_icon.png" /&gt; &lt;a href="http://www.dancarlin.com"&gt;Hardcore History&lt;/a&gt; with Dan Carlin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Hello Internet" src="http://brianschrader.com/images/blog/hi_icon.png" /&gt; &lt;a href="http://www.hellointernet.fm"&gt;Hello Internet&lt;/a&gt; with CGP Grey and Brady Haran&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Internet History Podcast" src="http://brianschrader.com/images/blog/internet_history_icon.png" /&gt; &lt;a href="http://www.internethistorypodcast.com"&gt;Internet History Podcast&lt;/a&gt; with Brian McCullough&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Melton" src="http://brianschrader.com/images/blog/melton_icon.png" /&gt; &lt;a href="http://www.imore.com/introducing-new-don-melton-podcast"&gt;Melton&lt;/a&gt; with Don Melton and Rene Ritchie&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Pragmatic" src="http://brianschrader.com/images/blog/pragmatic_icon.png" /&gt; &lt;a href="http://techdistortion.com/podcasts/pragmatic"&gt;Pragmatic&lt;/a&gt; with John Chidgey&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="Roderick on the Line" src="http://brianschrader.com/images/blog/rotl_icon.png" /&gt; &lt;a href="http://www.merlinmann.com/roderick/"&gt;Roderick on the Line&lt;/a&gt; with John Roderick and Merlin Mann &lt;a href="#note"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img alt="The Talk Show" src="http://brianschrader.com/images/blog/talk_show_icon.png" /&gt; &lt;a href="http://daringfireball.net/thetalkshow/"&gt;The Talk Show&lt;/a&gt; with John Gruber&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;div id='note'&gt;* &lt;i&gt;Highly&lt;/i&gt; recommended&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I listen to a lot of podcasts...&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/podcast-recommendations</guid><pubDate>Tue, 21 Oct 2014 00:00:00 +0000</pubDate></item><item><title>Twitter's "peace offering" to developers is meaningless</title><link>http://brianschrader.com/archive/twitters-peace-offering-to-developers-is-meaningless/</link><description>&lt;![CDATA[&lt;p&gt;Marco Arment&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Companies grow and change. Business needs change. Founders and leaders move on and get replaced.&lt;/p&gt;
&lt;p&gt;Especially at Twitter. Twitter started out as a developer-friendly company, then they became a developer-hostile company, and now they're trying to be a developer-friendly company again. If I had to pick a company to have absolute power over something very important, Twitter wouldn't be very high on the list...&lt;/p&gt;
&lt;p&gt;Twitter will never, and should never, have any credibility with developers again. Enjoy it while it lasts, but be ready for it to disappear at any moment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Agreed. Twitter is still a great product, but its not happy with what it is. Twitter is always seeking to ruin itself by trying to be Facebook. I can't wait until &lt;a href="http://brianschrader.com/archive/the-open-microblog-standard/"&gt;something else comes along&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.marco.org/2014/10/20/wsj-twitter-peace-offering"&gt;Twitter's "peace offering" to developers is meaningless &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/twitters-peace-offering-to-developers-is-meaningless</guid><pubDate>Mon, 20 Oct 2014 20:30:00 +0000</pubDate></item><item><title>Making RSS Real-Time</title><link>http://brianschrader.com/archive/making-rss-real-time/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;One of the critiques of RSS feeds in a world dominated by Facebook and Twitter is that RSS just isn't fast enough. You can't hope to achieve what Twitter calls "in-the-moment updates" and "watch events unfold" if your client is polling each web site's RSS feed once an hour for new microblog posts.&lt;/p&gt;
&lt;p&gt;Luckily this was solved years ago. Many blogging apps (including WordPress) have a setting to "ping" another server when a post has been published. When it receives this notification, the other server can request the RSS feed and make note of the new post right away.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.manton.org"&gt;Manon&lt;/a&gt; is right. This is actually a huge issue with the &lt;a href="https://github.com/Sonictherocketman/Open-Microblog"&gt;Open Microblog spec&lt;/a&gt; right now. I'm still trying to come up with a standard way of working around this issue (if you have suggestions, &lt;a href="http://brianschrader.com/about/"&gt;contact me&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.manton.org/2014/10/making-rss-real-time.html"&gt;Making RSS real-time &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/making-rss-real-time</guid><pubDate>Sun, 19 Oct 2014 23:32:00 +0000</pubDate></item><item><title>Site transferred. Email is next</title><link>http://brianschrader.com/archive/site-transferred-email-is-next/</link><description>&lt;![CDATA[&lt;p&gt;Ok, so I've moved my website off of shared hosting to Linode and everything is great. I haven't added the new features to my blog engine yet, but I'll get to that. First though is the problem of what do I do with my email. Currently, its hosted with my domain provider and part of my shared hosting plan (which I no longer need). I'm looking to move my email off of my domain provider to something more private. I'm thinking about Rackspace or Zoho right now.&lt;/p&gt;
&lt;p&gt;If you have any suggestions please let me know. I'm looking to host 2-4 email addresses as cost effectively as possible (calendar and contact syncing is not needed. iCloud does that just fine).&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/site-transferred-email-is-next</guid><pubDate>Tue, 14 Oct 2014 06:37:00 +0000</pubDate></item><item><title>Some advice on programming</title><link>http://brianschrader.com/archive/some-advice-on-programming/</link><description>&lt;![CDATA[&lt;p&gt;Someone once said to me, "If you ever go back to look at code you've written, and you can't see anything wrong with it, then you haven't learned anything."&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/some-advice-on-programming</guid><pubDate>Sun, 12 Oct 2014 21:32:00 +0000</pubDate></item><item><title>Thinking about redoing my blog engine</title><link>http://brianschrader.com/archive/thinking-about-redoing-my-blog-engine/</link><description>&lt;![CDATA[&lt;p&gt;I think I've decided to go ahead and ditch my web host and switch my blog over to Linode. I could just move the Git repo and transfer the domain, but leaving a web host for a VPS provider gives me a lot more freedom with how I could run my site.&lt;/p&gt;
&lt;p&gt;I'm looking into tweaking my blog engine to support Dropbox integration like &lt;a href="https://github.com/marcoarment/secondcrack"&gt;Second Crack&lt;/a&gt; does. I always liked that system, but my current web host doesn't allow that; Linode does (Linode really doesn't care what I do).&lt;/p&gt;
&lt;p&gt;I'm pretty sold on the idea, and I just need to figure out how I'm going to do it. I'd also like to be able to publish posts from my phone and iPad, so I'm going to have to figure out how to do that too. Since the site is run by committing from a local Git repo to the web server (something that wouldn't be easily done on iOS), I'm going to have to come up with something. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/thinking-about-redoing-my-blog-engine</guid><pubDate>Sat, 11 Oct 2014 22:04:00 +0000</pubDate></item><item><title>The unremarkable yesterday</title><link>http://brianschrader.com/archive/the-unremarkable-yesterday/</link><description>&lt;![CDATA[&lt;blockquote&gt;
&lt;p&gt;I wrote this blog post because I wanted to follow up on my post about blogging every day, underscoring that seemingly unimportant events can carry great meaning later. Those common everyday activities that don't seem noteworthy today? That's our life. One after another, strung together for days and then years until we die. It's the culture of the 21st century scattered among millions of micro posts. And it'll be lost to time if we don't curate it.&lt;/p&gt;
&lt;p&gt;Yesterday was unremarkable only because we're too close to it. Later we'll understand that it meant everything. And if that's true, let's aspire to something greater than our content being sliced up and interspersed with ads on someone else's platform.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Manton really nails it here. &lt;a href="http://brianschrader.com/archive/re:-permanence/"&gt;I've said this before&lt;/a&gt;, the reason I blog is because I want a record of myself over time, a public journal of my thoughts. It may not be important to you to know what you're thinking right now, but it might be later, and if you don't write it down, and keep a copy for yourself, you might not be able to get it back.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.manton.org/2014/10/the-unremarkable-yesterday.html"&gt;The unremarkable yesterday &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-unremarkable-yesterday</guid><pubDate>Sat, 11 Oct 2014 21:42:00 +0000</pubDate></item><item><title>Balancing Work, Fun, and Work-Fun</title><link>http://brianschrader.com/archive/balancing-work-fun-and-work-fun/</link><description>&lt;![CDATA[&lt;p&gt;I develop software for a living. I like to develop software (I'd call it one of my most productive and enjoyable hobbies) and I have lots of projects that I'd love to build in my spare time. The "problem"&lt;sup&gt;&lt;a href="#1"&gt;*&lt;/a&gt;&lt;/sup&gt; is, I spend the entire workday sitting in front of a computer programming, and I'm not really in the mood, most nights, to do more of it when I get home. &lt;/p&gt;
&lt;p&gt;The question becomes: how do you strike a balance between work, hobbies,  chores, and mindless, unproductive, purely relaxational fun?&lt;/p&gt;
&lt;div style='font-size:small;' id="1"&gt;* As in one of the first-est of first world problems.&lt;/div&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/balancing-work-fun-and-work-fun</guid><pubDate>Tue, 07 Oct 2014 03:22:00 +0000</pubDate></item><item><title>Backblaze Hard Drive Reliability Report</title><link>http://brianschrader.com/archive/backblaze-hard-drive-reliability-report/</link><description>&lt;![CDATA[&lt;p&gt;Every few months &lt;a href="https://www.backblaze.com/"&gt;Backblaze&lt;/a&gt; sends out a cool report that shows the stats of various parts of their data centers. This month's report had a few interesting bits. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At Backblaze we now have 34,881 drives and store over 100 petabytes of data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The most interesting part though was about the reliability of the hard drives they use. Notably, Backblaze uses consumer drives for their data centers instead of the more "business class" drives that exist for express use in data centers. This graph was very interesting, and honestly slightly alarming, at first.&lt;/p&gt;
&lt;p&gt;&lt;a href='https://www.backblaze.com/blog/hard-drive-reliability-update-september-2014'&gt;&lt;img src='https://www.backblaze.com/blog/wp-content/uploads/2014/09/blog-fail-drives-manufactureX.jpg' alt='Hard Drive Failure Rates by Model' width='560' border='0' /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Below it though, they go on to say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Should we switch to enterprise drives?
Assuming we continue to see a failure rate of 15% on these drives, would it make sense to switch to "enterprise" drives instead?&lt;/p&gt;
&lt;p&gt;There are two answers to this question:&lt;/p&gt;
&lt;p&gt;Today on Amazon, a Seagate 3 TB "enterprise" drive costs $235 versus a Seagate 3 TB "desktop" drive costs $102. Most of the drives we get have a 3-year warranty, making failures a non-issue from a cost perspective for that period. However, even if there were no warranty, a 15% annual failure rate on the consumer "desktop" drive and a 0% failure rate on the "enterprise" drive, the breakeven would be 10 years, which is longer than we expect to even run the drives for.
The assumption that "enterprise" drives would work better than "consumer" drives has not been true in our tests. I analyzed both of these types of drives in our system and found that their failure rates in our environment were very similar - with the "consumer" drives actually being slightly more reliable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These findings are very interesting indeed.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.backblaze.com/blog/hard-drive-reliability-update-september-2014/"&gt;Hard Drive Reliability Update - Sep 2014 &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/backblaze-hard-drive-reliability-report</guid><pubDate>Thu, 02 Oct 2014 02:41:00 +0000</pubDate></item><item><title>The Open Microblog Standard</title><link>http://brianschrader.com/archive/the-open-microblog-standard/</link><description>&lt;![CDATA[&lt;p&gt;A few weeks ago I began drafting a new standard for open, platform independent communication service. You can think of it as Twitter meets RSS. Today I'm making it public (the GitHub repo has been public for almost a week now, but I haven't told anyone). &lt;/p&gt;
&lt;p&gt;Twitter, in my eyes &lt;a href="http://globalspin.com/2014/09/communication-news-entertainment/"&gt;and in the eyes of others&lt;/a&gt; is &lt;strong&gt;not&lt;/strong&gt; a social network, its a communications service (like the phone company). With Twitter announcing that it will soon become like Facebook, in that it shows you what it wants rather than what you want, I thought the time was perfect to begin looking for alternatives. So far few exist, and those few that do are just lined up to be another Twitter or Facebook. This led me to try coming up with my own solution.&lt;/p&gt;
&lt;p&gt;The Open Microblog standard is an outline for a potential service(s) that provide features similar to Twitter, but in a way that is not controlled by a central entity. Its based on RSS and, excluding some additional information, should work with most RSS readers already. It adds the ability to reply to, message, and converse with people using a simple format. A user's data is 100% public, and users can migrate to any open microblog service provider if their current choice no longer fits their needs or goals all without losing followers, their block list, or the ability to talk with their friends. &lt;/p&gt;
&lt;p&gt;Here's an excerpt from the Open Microblog Spec:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In recent years our internet communication has been increasingly controlled by single private companies. Facebook and Twitter account for an enormous percentage of online communication... &lt;/p&gt;
&lt;p&gt;The Open Microblog is a proposed standard for an open and easy to implement internet communication mechanism. It is based on the success of RSS and is platform independent. It allows for most of the features that services like Twitter and Facebook provide but in an open way.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I encourage any developers reading this to please check out the spec, read through it, submit pull requests, etc. The spec is still technically in development and I'd love your feedback.&lt;/p&gt;
&lt;p&gt;The first Open Microblog provider is in development, and any developers looking to implement a provider themselves, please &lt;a href="http://brianschrader.com/about"&gt;get in contact with me&lt;/a&gt;. You don't have to since I don't control anything, but I'd love to hear your plans so that we can work together to create a better, more open web for everyone.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Sonictherocketman/Open-Microblog"&gt;The Open Microblog Spec &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-open-microblog-standard</guid><pubDate>Mon, 29 Sep 2014 00:16:00 +0000</pubDate></item><item><title>Thoughts on the iPhone 6</title><link>http://brianschrader.com/archive/thoughts-on-the-iphone-6/</link><description>&lt;![CDATA[&lt;p&gt;I got my iPhone 6 on launch day. After a week with it, I have a few thoughts on Apple's new device. For context, I purchased a Space Gray, 64GB iPhone 6.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The screen is awesome, the black levels have been greatly improved over the iPhone 5. It would have been nice to have increased pixel density, but I'll take the screen improvements over more pixels hands down.&lt;/li&gt;
&lt;li&gt;Apps that have not been optimized for the bigger displays look really silly. Developers, please update your apps.&lt;/li&gt;
&lt;li&gt;The curved glass around the edges feels great to hold in your hand, and swipe gestures feel much smoother now that there isn't a hard corner that you drag your thumb over.&lt;/li&gt;
&lt;li&gt;The storage increase is awesome (this isn't an iPhone 6 thing, but getting an iPhone with 64GB of storage as opposed to 16 is a decision I should have made a long time ago).&lt;/li&gt;
&lt;li&gt;The screen size... Im getting used to it. Soon I doubt I'll be able to consider a time when I didn't have a screen this size, but that time is not yet upon me. I like the extra real-estate, but one-handed has taken a huge hit in terms of usability.&lt;/li&gt;
&lt;/ul&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/thoughts-on-the-iphone-6</guid><pubDate>Sun, 28 Sep 2014 22:34:00 +0000</pubDate></item><item><title>The Trouble With Harvard</title><link>http://brianschrader.com/archive/the-trouble-with-harvard/</link><description>&lt;![CDATA[&lt;p&gt;To me, these are the things a university education should instill in you. Universities aren't for job training, they're for educating.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think we can be more specific. It seems to me that educated people should know something about the 13-billion-year prehistory of our species and the basic laws governing the physical and living world, including our bodies and brains. They should grasp the timeline of human history from the dawn of agriculture to the present. They should be exposed to the diversity of human cultures, and the major systems of belief and value with which they have made sense of their lives. They should know about the formative events in human history, including the blunders we can hope not to repeat. They should understand the principles behind democratic governance and the rule of law. They should know how to appreciate works of fiction and art as sources of aesthetic pleasure and as impetuses to reflect on the human condition. &lt;/p&gt;
&lt;p&gt;On top of this knowledge, a liberal education should make certain habits of rationality second nature. Educated people should be able to express complex ideas in clear writing and speech. They should appreciate that objective knowledge is a precious commodity, and know how to distinguish vetted fact from superstition, rumor, and unexamined conventional wisdom. They should know how to reason logically and statistically, avoiding the fallacies and biases to which the untutored human mind is vulnerable. They should think causally rather than magically, and know what it takes to distinguish causation from correlation and coincidence. They should be acutely aware of human fallibility, most notably their own, and appreciate that people who disagree with them are not stupid or evil. Accordingly, they should appreciate the value of trying to change minds by persuasion rather than intimidation or demagoguery.
&lt;/i&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.newrepublic.com/article/119321/harvard-ivy-league-should-judge-students-standardized-tests"&gt;The Trouble With Harvard &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-trouble-with-harvard</guid><pubDate>Sun, 14 Sep 2014 20:01:00 +0000</pubDate></item><item><title>Space Junk</title><link>http://brianschrader.com/archive/space-junk/</link><description>&lt;![CDATA[&lt;p&gt;In a break from our regularly scheduled developer-oriented topics, we're taking a break to talk about orbital space debris...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Insert canned space junk image here" src="http://brianschrader.com/images/blog/space_junk.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;The amount of &lt;a href="http://en.wikipedia.org/wiki/Space_debris"&gt;debris in Earth orbit&lt;/a&gt; is &lt;a href="http://orbitaldebris.jsc.nasa.gov/faqs.html#5"&gt;growing every year&lt;/a&gt;. Every launch we dump more things into orbit to float around aimlessly crowding an already crowded area. That junk hits other junk and breaks apart, good right?. No. &lt;a href="http://orbitaldebris.jsc.nasa.gov/faqs.html#3"&gt;Smaller pieces&lt;/a&gt;, often moving faster, are harder to track. Some of these pieces are fractions of inches big and are impossible to track. Combine this small size with the fact that the pieces move at a speed of around &lt;a href="http://orbitaldebris.jsc.nasa.gov/faqs.html#7"&gt;7km/s&lt;/a&gt; (per &lt;em&gt;second&lt;/em&gt;) and that pebble-sized debris becomes &lt;em&gt;really&lt;/em&gt; dangerous.&lt;/p&gt;
&lt;p&gt;Because of a lot of regulation and Cold War era crap cleaning up this space junk is a legal nightmare. Nations can only clean up the stuff they own, cleaning up another nation's junk immediately makes that nation in violation of a whole myriad of laws, and any private vendor who touches this debris immediately becomes a "&lt;a href="http://en.wikipedia.org/wiki/Space_pirate"&gt;space pirate&lt;/a&gt;" (awesome name, not-so-awesome ramifications).&lt;/p&gt;
&lt;p&gt;The amount of space debris is growing every year, and although there is a lot of collaboration to prevent the growth of such debris, the amount currently in orbit is already worrisome. &lt;a href="http://orbitaldebris.jsc.nasa.gov/faqs.html#12"&gt;It doesn't go away either&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The problem is still unsolved and remains a &lt;em&gt;huge&lt;/em&gt; economic and political challenge. The most harrowing fact about this debris is that if unchecked it may soon be very &lt;a href="http://www.newscientist.com/article/dn18050-space-debris-threat-to-future-launches.html#.U_AtxEuzsgo"&gt;dangerous if not impossible to launch craft into orbit.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm not trying to be a sandwich-board-wearing, doomsday-heralding, rambling, crazy-person here. I'm just bringing it up. We do need to find a solution. Its a serious problem.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://orbitaldebris.jsc.nasa.gov/faqs.html"&gt;NASA's Space Debris FAQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.universetoday.com/113884/how-can-we-clean-up-that-space-junk/"&gt;How Can We Clean Up That Space Junk?&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/space-junk</guid><pubDate>Sun, 14 Sep 2014 02:04:00 +0000</pubDate></item><item><title>Chris Radcliff on Twitter's Timeline Changes</title><link>http://brianschrader.com/archive/chris-radcliff-on-twitters-timeline-changes/</link><description>&lt;![CDATA[&lt;div class='link'&gt;For some users, filtering like this means nothing less than the end of Twitter. That may seem overblown, but I think it's a fair assessment. To be specific: &lt;span style='font-weight:bold;'&gt;filtering the timeline changes Twitter from a communications service into a news or entertainment service, which is inherently less valuable to me as a Twitter user.&lt;/span&gt;&lt;/div&gt;

&lt;p&gt;I feel the same way.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://globalspin.com/2014/09/communication-news-entertainment/"&gt;on the difference between communication, news, and entertainment &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/chris-radcliff-on-twitters-timeline-changes</guid><pubDate>Sun, 07 Sep 2014 02:34:00 +0000</pubDate></item><item><title>Casey Liss on Women's Experience in Gaming</title><link>http://brianschrader.com/archive/casey-liss-on-womens-experience-in-gaming/</link><description>&lt;![CDATA[&lt;p&gt;I'd like to share this excerpt from the episode &lt;a href="http://atp.fm/episodes/81"&gt;81 of the Accidental Tech Podcast&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Casey:&lt;/strong&gt; I got, what I felt to be a considerable amount of hate, and a considerable amount of yelling directed at me on Twitter because I had said that I wanted to think for a minute before I spoke and it really upset me a lot, and it really bothered me...&lt;/p&gt;
&lt;p&gt;The thing that was really upsetting about all this, the thing that really bothered me and continues to bother me about all this... is I dealt with three hours of a handful of people being  meaner than I think was necessary, and it kinda messed me up for a while. That was three hours. Nobody threatened to rape me, nobody threatened to murder me, nobody sent me disgusting pronography&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Marco:&lt;/strong&gt; Nobody, like, came to your house.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;John:&lt;/strong&gt; Nobody said they knew your address and knew your family's address and were going to kill them, and showed you pictures of your family that they'd taken secretly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Casey:&lt;/strong&gt; Yes, and I felt like a piece of crap after this three hours which had none of those thing, and it occurred to me: If I feel like a piece of just utter crap after three hours of people saying, "Oh, you're not doing enough. You should't think about that. Nuanced!? Are you kidding me?" Three hours of that and I felt like I wanted to crawl in a hole and just go away for a week, and that was three hours. I cannot freaking fathom what it's like to be a woman in... technology and especially in gaming...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He's right. It's hard to realize that people, and women more commonly go through that kind of crap every day. This isn't a discussion about some topic with equal sides. That kind of behavior is unacceptable.&lt;/p&gt;
&lt;p&gt;Here's the audio trimming. Hearing it has a lot more power than reading it, I think.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;audio controls&gt;
  &lt;source src="http://brianschrader.com/audio/atp81_women_in_gaming.mp3" type="audio/mpeg"&gt;
  Your browser does not support the audio tag.
&lt;/audio&gt;
&lt;/center&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/casey-liss-on-womens-experience-in-gaming</guid><pubDate>Sat, 06 Sep 2014 22:20:00 +0000</pubDate></item><item><title>How to stimulate the open web</title><link>http://brianschrader.com/archive/how-to-stimulate-the-open-web/</link><description>&lt;![CDATA[&lt;div class='link'&gt;Create systems that are ambivalent about the open or closed web. If I create a tool that's good at posting content to Facebook and Twitter, it should also post to RSS feeds, which exist outside the context of any corporation. Now other generous and innovative people can build systems that work differently from Facebook and Twitter, using these feeds as the basis...&lt;/div&gt;

&lt;p&gt;Fantastic advice. We developers should provide a feature like this in our apps/services. I know I'd use it in heartbeat. A proactive dev could use this feature to allow their users to leave Twitter/Facebook and still use their favorite apps.&lt;/p&gt;
&lt;p&gt;This also gives me an idea.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://scripting.com/2014/08/31/howToStimulateTheOpenWeb.html"&gt;How to stimulate the open web &amp;#8594;&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/how-to-stimulate-the-open-web</guid><pubDate>Sun, 31 Aug 2014 21:53:00 +0000</pubDate></item><item><title>Why It's Impossible to Make Plans Anymore</title><link>http://brianschrader.com/archive/why-its-impossible-to-make-plans-anymore/</link><description>&lt;![CDATA[&lt;div class='link'&gt;In the landline-days of old, a plan had to be a solid commitment. Now, it more closely resembles a series of nebulous inklings. For some context, we made this video...&lt;/div&gt;

&lt;p&gt;Funny, sad, and true.&lt;a href="https://twitter.com/sonicrocketman/status/481186538558980096"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.alexcornell.com/why-its-impossible-to-make-plans-anymore"&gt;Why It's Impossible to Make Plans Anymore&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/why-its-impossible-to-make-plans-anymore</guid><pubDate>Sun, 31 Aug 2014 01:45:00 +0000</pubDate></item><item><title>Brent Simmons on App Performance Tuning</title><link>http://brianschrader.com/archive/brent-simmons-on-app-performance-tuning/</link><description>&lt;![CDATA[&lt;p&gt;It's always cool to see into another developer's approach to solving problems.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://inessential.com/2014/08/28/a_vesper_performance_enhancement"&gt;A Vesper Performance Enhancement&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/brent-simmons-on-app-performance-tuning</guid><pubDate>Sun, 31 Aug 2014 01:31:00 +0000</pubDate></item><item><title>Numba: Compiling Python Using LLVM the way WebKit Compiles JavaScript</title><link>http://brianschrader.com/archive/numba-compiling-python-using-llvm-the-way-webkit-compiles-javascript/</link><description>&lt;![CDATA[&lt;p&gt;&lt;link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/default.min.css"&gt;&lt;/p&gt;
&lt;script src="http://yandex.st/highlightjs/8.0/highlight.min.js"&gt;&lt;/script&gt;

&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

&lt;p&gt;In May, Apple announced a &lt;a href="https://www.webkit.org/blog/3362/introducing-the-webkit-ftl-jit/"&gt;new feature in WebKit&lt;/a&gt; that added a fourth tier of speed optimization for JavaScript in Safari. In this new tier, JavaScript would be compiled to machine code (specifics aside). This kind of optimization (called FTL JIT) gave Webkit a 35% performance boost when compared to the third tier of optimization, pretty impressive.&lt;/p&gt;
&lt;p&gt;It seems someone thought that JavaScript was getting all the love when it came to speed optimizations and thought Python should benefit from this idea as well. That became &lt;a href="http://numba.pydata.org"&gt;Numba&lt;/a&gt;. Numba allows Python developers to annotate any given segment in their code, that segment will be just-in-time (JIT) compiled using LLVM giving it, potentially, a 2 orders of magnitude improvement in speed! &lt;/p&gt;
&lt;pre&gt;&lt;code class="python"&gt;# Code from http://numba.pydata.org
from numba import jit
from numpy import arange

# jit decorator tells Numba to compile this function.
# The argument types will be inferred by Numba when function is called.
@jit
def sum2d(arr):
    M, N = arr.shape
    result = 0.0
    for i in range(M):
        for j in range(N):
            result += arr[i,j]
    return result

a = arange(9).reshape(3,3)
print(sum2d(a))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After talking to someone who'd actually used Numba in their code, they say their code saw anywhere from 2x to 500x speed improvements depending on what they were doing (using regular, old vanilla Python). That's really impressive. I can't wait to try out Numba, and I think I have some very interesting use cases coming up where this might be the solution I've been looking for.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/numba-compiling-python-using-llvm-the-way-webkit-compiles-javascript</guid><pubDate>Sat, 30 Aug 2014 23:10:00 +0000</pubDate></item><item><title>Waffle, Brent and Marco on Social Networks</title><link>http://brianschrader.com/archive/waffle-brent-and-marco-on-social-networks/</link><description>&lt;![CDATA[&lt;div class='link'&gt;What I do care about is that my blog isn't part of a system where its usefulness is just a hook to get me to use it. It works the way I want to, and the company running the servers (DreamHost) doesn't care one fig what I do...

When Medium and Tumblr are gone, my blog will be here.&lt;/div&gt;

&lt;p&gt;I've been thinking about this &lt;a href="http://brianschrader.com/archive/twitter-and-the-open-web/"&gt;a lot&lt;/a&gt; over the last few days. What would it mean to have a social network (like Dispora) that is decentralized, and independent of corporate ties? Could such a thing exist? Would it take off? Maybe. For now though Waffle, Brent and Marco are right. Social networks will rise and fall. Blogs, and RSS may never be as popular, but they don't have to be. &lt;/p&gt;
&lt;p&gt;They're playing the long game.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.marco.org/2014/08/27/brentwaffle"&gt;Marco: Brent on the shifting sands of social platforms&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/waffle-brent-and-marco-on-social-networks</guid><pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate></item><item><title>Twitter and the Open Web</title><link>http://brianschrader.com/archive/twitter-and-the-open-web/</link><description>&lt;![CDATA[&lt;p&gt;Twitter announced that it will be &lt;a href="http://mashable.com/2014/08/20/twitter-timeline-changes-confirmed/"&gt;changing the way the timeline works&lt;/a&gt;. Instead of being a list of posts from people you follow, the timeline will now include things that Twitter thinks you'd like to see (basically what Facebook does). For a lot of people, that's a huge pain-point, myself included. Twitter is great because it's what I want to see, not what Twitter wants me to see. Of course, there are people threatening to leave Twitter forever (just like the people who threaten to delete their account whenever YouTube changes their interface). The trouble is that there's no place for us to go. We'd all love to take our attention elsewhere, but where? Facebook shoo'd us away, and Twitter threatens to do the same. As a user, you'll only go where your friends are. That's the hold they have on us. I can say, "I'm fed up and I'm going to Twitter-clone X!" But without the people that I want to talk to also being on Twitter-clone X it's no fun there.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" align='center' lang="en"&gt;&lt;p&gt;It&amp;#39;s amazing that an open standard like email became so ubiquitous. If email came out today, it would be nerd-only tech no one uses.&lt;/p&gt;&amp;mdash; Brian Schrader (@sonicrocketman) &lt;a href="https://twitter.com/sonicrocketman/statuses/503672083805503488"&gt;August 24, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="http://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Social media is a very siloed operation, it doesn't have to be (not by any stretch of the imagination) but it is. Twitter, Facebook and messaging are all holed up in their little domains and that structure keeps you tied to a particular service. People blame Apple for supposed platform lock-in, but social network lock-in is arguably a lot more mischievous than anything Apple does. &lt;/p&gt;
&lt;p&gt;Twitter has made it clear that its third-party developers (like those behind amazing apps like &lt;a href="http://tapbots.com/software/tweetbot/"&gt;Tweetbot&lt;/a&gt; and &lt;a href="http://twitterrific.com/ios"&gt;Twitterific&lt;/a&gt;) are not crucial to its future. They were once committed to an open infrastructure, but no more (and Facebook never was). Eventually Twitter will probably become just like Facebook; what will we do then? Stay with it? I hope not, but I fear so.&lt;/p&gt;
&lt;p&gt;This whole situation has me worried, frantically looking around for alternatives. Google+ (as much as Google would try to convince you otherwise) is not very popular. App.net failed, never reaching critical mass. Could it be that the time for new social networks is past us? I hope not. RSS succeeded as an open standard, and so did email (though email had an early start). The podcasting industry is growing, powered by RSS. It's nowhere near the popularity of other social media platforms, but it is big and growing. Social media is a big part of people's lives, I don't really believe that we know just how important it is to us. Having that communication, that sharing of opinions censored, shutdown, or controlled by a single entity is a scary thought. There's no chance that Podcasts could die with a company (arguably Apple's podcast directory would be a huge loss) and RSS use floundered after Google Reader shutdown, but RSS is still with us. That's important.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" align='center'  data-conversation="none" lang="en"&gt;&lt;p&gt;&lt;a href="https://twitter.com/stevedekorte"&gt;@stevedekorte&lt;/a&gt; Most decentralized systems fail. Every attempt at a decentralized messaging system, except email, has failed.&lt;/p&gt;&amp;mdash; Steve Streza (@SteveStreza) &lt;a href="https://twitter.com/SteveStreza/statuses/234804015173623808"&gt;August 13, 2012&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;I'm not some doomsday-warning, sandwich-board-wearing maniac here, and I'm not claiming that Twitter will do evil things in the future (the definition of "evil" here is up for debate), but I am saying that our communication, which is currently under the control of 1 or 2 companies, shouldn't be in such a fragile situation. Twitter is still struggling to become profitable, and it is perfectly possible that they could go under in the future. What happens when they do? The way we communicate is affected. Twitter is used, right now, as a echo chamber for public outcry. Countries have fought to ban Twitter and block it from their citizens. Twitter and Facebook are big deals, but they are controlled systems. That could become a big problem if something were to happen to them in the future.&lt;/p&gt;
&lt;p&gt;Some quick Googling yielded a couple of open alternatives &lt;sup&gt;1, 2&lt;/sup&gt; to Twitter, neither has a huge following right now, and are pretty nerd-oriented. Trsst is a little friendlier, but it's still in Alpha. Overall though, I worry what the future holds for social media. I actually do hope that something forces us to adopt an open standard (like Podcasting does) so that our communication can remain out of the greedy palms of corporate interest, but I fear that may not happen. For now, we're stuck with Twitter and its stupid, not-really-timelines-anymore timelines.&lt;/p&gt;
&lt;div id='alt' style='font-size:small;'&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href='http://podupti.me'&gt;Podupti: A distributed social network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href='http://www.trsst.com'&gt;Trsst: A Social Network based on BitCoin and RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/twitter-and-the-open-web</guid><pubDate>Mon, 25 Aug 2014 00:01:00 +0000</pubDate></item><item><title>Roderick on the Line</title><link>http://brianschrader.com/archive/roderick-on-the-line/</link><description>&lt;![CDATA[&lt;p&gt;I wanted to share a clip of this week's &lt;a href="http://www.merlinmann.com/roderick/"&gt;Roderick on the Line&lt;/a&gt;. If you aren't already, you should subscribe to this podcast. &lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;audio controls&gt;
  &lt;source src="http://brianschrader.com/audio/rotl_0121_cut.mp3" type="audio/mpeg"&gt;
  Your browser does not support the audio tag.
&lt;/audio&gt;
&lt;/center&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/roderick-on-the-line</guid><pubDate>Sun, 24 Aug 2014 04:53:00 +0000</pubDate></item><item><title>Notifications</title><link>http://brianschrader.com/archive/notifications/</link><description>&lt;![CDATA[&lt;div class="link"&gt;What I need is a notification system that reliably alerts me when things aren't normal. Such a system would receive those periodic email notifications from my various apps and utilities, and would notify me whenever they didn't receive them on the expected periodicity.&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.dafacto.com/2014/08/14/notifications/"&gt;Notifications&lt;/a&gt; by Matt Henderson&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/notifications</guid><pubDate>Mon, 18 Aug 2014 01:45:00 +0000</pubDate></item><item><title>Book Recommendation: The Stormlight Archive</title><link>http://brianschrader.com/archive/book-recommendation-the-stormlight-archive/</link><description>&lt;![CDATA[&lt;p&gt;&lt;img alt="The StormLight Archive" src="http://brianschrader.com/images/blog/stormlight_archive_banner.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I just finished &lt;em&gt;Words of Radiance&lt;/em&gt;, book 2 of the &lt;a href="http://brandonsanderson.com/books/the-stormlight-archive/"&gt;Stormlight Archive&lt;/a&gt;, &lt;a href="http://brandonsanderson.com"&gt;Brandon Sanderson's&lt;/a&gt; ongoing Epic Fantasy series. If you haven't heard of this series, or its author you &lt;em&gt;need&lt;/em&gt; to check it out. The planned 10-part series takes place in a war-torn land of failing kings, squabbling princedoms, and magical knights long thought to be gone forever. &lt;/p&gt;
&lt;p&gt;When the king is assassinated by a mysterious man with powers no one should have, the kingdom goes to war with his employer. All the while a young surgeon, turned soldier, turned slave discovers his powers, and a young girl tries to steal from the most respected and hated scholar in the world. &lt;/p&gt;
&lt;p&gt;If that little paragraph intro doesn't sell you, try a sample of the &lt;a href="http://www.audible.com/pd/Sci-Fi-Fantasy/The-Way-of-Kings-Audiobook/B003ZWFO7E/ref=a_search_c4_1_1_srTtl?qid=1408310992&amp;amp;sr=1-1"&gt;Audible version of the book&lt;/a&gt;. The narrators are amazing as they bring Sanderson's enormous world to life.&lt;/p&gt;
&lt;p&gt;I listened to the books via Audible, and I'd highly recommend them. The books are long (it is &lt;em&gt;Epic&lt;/em&gt; fantasy after all) clocking in at around 1100 pages (45 hours of audio). It's a significant investment, but one that you'll be hooked to for every page/minute. &lt;/p&gt;
&lt;p&gt;If Audible sponsored, I'm sure that they'd give me a code for you to try the book, but I think you can try it via their 14-day trial anyway.&lt;/p&gt;
&lt;p&gt;Give it a shot, the books were amazing. The bad thing is that, having finished them, I have to wait another &lt;a href="http://stormlightarchive.wikia.com/wiki/The_Stormlight_Archive"&gt;2 years&lt;/a&gt; to read the next one...&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/book-recommendation-the-stormlight-archive</guid><pubDate>Sun, 17 Aug 2014 21:50:00 +0000</pubDate></item><item><title>10 Years of Podcasts</title><link>http://brianschrader.com/archive/10-years-of-podcasts/</link><description>&lt;![CDATA[&lt;p&gt;A fantastic Ars Technica article about the history of Podcasting  as it hits it's 10 year anniversary. There's so much history, and not-unsurprisingly, conflict hidden inside the medium that I, and I know so many others enjoy.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://arstechnica.com/business/2014/08/10-years-of-podcasting-code-comedy-and-patent-lawsuits/"&gt;10 years of podcasting: Code, comedy, and patent lawsuits&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/10-years-of-podcasts</guid><pubDate>Sun, 17 Aug 2014 01:27:00 +0000</pubDate></item><item><title>Changing App Behavior Server-Side</title><link>http://brianschrader.com/archive/changing-app-behavior-server-side/</link><description>&lt;![CDATA[&lt;p&gt;We've all been there: you ship your app, it passes Apple's App Review, then it's in the Store... and &lt;em&gt;then&lt;/em&gt; you find a bug. A small bug, but one you should fix ASAP. Whether it's some issue with download behavior, the color of some box, the font somewhere is too small, or your French localization of some text is overflowing some button (like what &lt;a href="http://www.red-sweater.com"&gt;Daniel Jalkut&lt;/a&gt; talked about on &lt;a href="http://www.coreint.org"&gt;Core Intuition&lt;/a&gt; this week), either way, it's a pain. You fix the problem locally, and submit a new build, but Apple still takes a week to review it. Meanwhile your users are having to deal with a bug that you've already solved. It's a common, frustrating and often a sales affecting problem.&lt;/p&gt;
&lt;p&gt;On a &lt;a href="http://atp.fm/episodes/74"&gt;recent episode of ATP&lt;/a&gt;, &lt;a href="http://www.marco.org"&gt;Marco&lt;/a&gt; mentioned that he could change quite a few features of the app from the server-side. Combine this with &lt;a href="http://inessential.com"&gt;Brent Simmons'&lt;/a&gt; way of building &lt;a href="http://vesperapp.co"&gt;Vesper&lt;/a&gt; (i.e. using plists to configure colors, fonts, item sizes, etc) and it seems to me that it should be entirely possible to make iOS apps that are mostly configurable from the server-side. This got me thinking. Why not build the app to download it's configuration file (i.e. plist, or Localization.strings file) remotely? Sure it's not as convenient as Apple's built in frameworks sometimes, but it would allow developers to fix features, colors, themes, and localization issues all remotely, and instantly.&lt;/p&gt;
&lt;p&gt;I haven't looked into the technical issues with this, and there is an argument to be made that not all iOS devs want to run a server just to host their .strings files, but if you're already running a server for some other functionality in your app, it's basically cost free and avoids quite a few small but irritating problems.&lt;/p&gt;
&lt;p&gt;My motto: If it can be on the server, it should be on the server. The client doesn't need to worry about it, it just needs to display it.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/changing-app-behavior-server-side</guid><pubDate>Sun, 17 Aug 2014 00:00:00 +0000</pubDate></item><item><title>Humans Need Not Apply</title><link>http://brianschrader.com/archive/humans-need-not-apply/</link><description>&lt;![CDATA[&lt;div class='link'&gt;Horses aren't unemployed now because they got lazy as a species, they're unemployable. There's little work a horse can do that do that pays for its housing and hay.&lt;/div&gt;

&lt;p&gt;A fascinating video about the true nature of automation. &lt;/p&gt;
&lt;p&gt;In the coming years, the automation revolution will completely change the nature of our society. People with skill based jobs will find themselves out of work almost as quickly as those in low-skill jobs. This isn't a bad thing, its something we've been trying to accomplish for millennia, making our lives easier. Truly the only bad thing is that our current system doesn't account for the case where &lt;em&gt;most&lt;/em&gt; of society is unemployed. We require that all people work as of now, and soon that may not be the case. So how do people pay for things? Do we need to pay for things? All questions we need to consider.&lt;/p&gt;
&lt;p&gt;We will survive it if we are prepared, but we aren't prepared. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://kottke.org/14/08/humans-need-not-apply"&gt;Humans Need Not Apply&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/humans-need-not-apply</guid><pubDate>Sat, 16 Aug 2014 20:32:00 +0000</pubDate></item><item><title>Permanence Revisited</title><link>http://brianschrader.com/archive/permanence-revisited/</link><description>&lt;![CDATA[&lt;p&gt;Last time I discussed &lt;a href="http://brianschrader.com/archive/re:-permanence/"&gt;digital permanence&lt;/a&gt; I mentioned that there seemed to be no good way of holding on to or archive social media posts or blog articles. This isn't true really, since Instapaper exists (or other competing services I guess). The thing is, Instapaper exists as a fantastic way to save articles,  but saving social media posts is something it doesn't do well, sure it can (and I have it set up to do so) but searching them, archiving them, and retrieving them is not something it excels at. Like many others, &lt;a href="#ifttt"&gt;I've set up a system&lt;/a&gt; using &lt;a href="https://ifttt.com"&gt;IFTTT&lt;/a&gt; and &lt;a href="https://www.instapaper.com/"&gt;Instapaper&lt;/a&gt; to save any links I retweet to an Instapaper folder. This is obviously a hack and to be honest, not a great one. Links aren't saved with their title, but the URL (a limit if IFTTT I guess) and Instapaper's archive and search aren't perfect. It works but it screams "incomplete solution". &lt;/p&gt;
&lt;p&gt;Really it all comes down to search, now that I think about it. You can have everything in the world saved in some archive folder, but if you can't search for the item you need, that folder is useless. I've retweeted &lt;a href="https://twitter.com/gruber/status/1024766035"&gt;this tweet&lt;/a&gt; multiple times, mostly because it's hilarious, but every time I want to do so, even though I have it saved in Instapaper and favorited on Twitter, its easier to &lt;a href="[http://brianschrader.com/image/blog/gruber_tweet.png]"&gt;google the text of the tweet&lt;/a&gt; (as close as I can remember) and let Google do the work.&lt;/p&gt;
&lt;p&gt;&lt;img alt="google" src="http://brianschrader.com/image/blog/gruber_tweet.png" /&gt;&lt;/p&gt;
&lt;p&gt;In no way do I mean to blame Instapaper for this problem. It's far deeper than that. Archiving your collection of articles you liked, tweets you favorited, or posts you liked and providing a way to search for them and export them is a larger problem. I do believe it is one that Instapaper could solve, but not one that they need to. &lt;/p&gt;
&lt;p&gt;In the old days, we had bookshelves full of the things we'd read (magazines, books, maps, etc) and we have no way of doing that (permanently and vendor independently in this online and ephemeral world. &lt;/p&gt;
&lt;div id='ifttt' style='font-size:small;'&gt;* &lt;a href='https://ifttt.com/recipes/180542-save-links-in-your-favorite-tweets-to-instapaper'&gt;IFTTT can save Favorited&lt;/a&gt; and Retweeted links to Instapaper.&lt;/div&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/permanence-revisited</guid><pubDate>Tue, 12 Aug 2014 00:00:00 +0000</pubDate></item><item><title>How the Other Half Works: an Adventure in the Low Status of Software Engineers</title><link>http://brianschrader.com/archive/how-the-other-half-works-an-adventure-in-the-low-status-of-software-engineers/</link><description>&lt;![CDATA[&lt;p&gt;An interesting experiment about management and the darker side of Software Development where developers are supposed to be passionate, hard-working, and dedicated because they have nothing better to do.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://michaelochurch.wordpress.com/2014/07/13/how-the-other-half-works-an-adventure-in-the-low-status-of-software-engineers/"&gt;How the Other Half Works: an Adventure in the Low Status &lt;/a&gt; by Michael O. Church&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/how-the-other-half-works-an-adventure-in-the-low-status-of-software-engineers</guid><pubDate>Mon, 11 Aug 2014 18:39:00 +0000</pubDate></item><item><title>First Person Hyperlapse Videos by Microsoft</title><link>http://brianschrader.com/archive/first-person-hyperlapse-videos-by-microsoft/</link><description>&lt;![CDATA[&lt;div class='link'&gt;
"We present a method for converting first-person videos, for example, captured with a helmet camera during activities such as rock climbing or bicycling, into hyper-lapse videos, i.e., time-lapse videos with a smoothly moving camera."&lt;/div&gt;

&lt;p&gt;Fresh out of Microsoft Labs is this new what they call &lt;a href="http://research.microsoft.com/en-us/um/redmond/projects/hyperlapse/"&gt;"Hyperlapse" videos&lt;/a&gt;. You have to check it out. If you have a Go-Pro or other first-person camera, you'll need this (They're working on a Windows app). &lt;/p&gt;
&lt;p&gt;My favorite part is the fact that they included their technical papers with the release. They're obviously looking for people to  mess with and improve their algorithm (the way software should be).&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/first-person-hyperlapse-videos-by-microsoft</guid><pubDate>Mon, 11 Aug 2014 18:08:00 +0000</pubDate></item><item><title>Into the Depths of Python</title><link>http://brianschrader.com/archive/into-the-depths-of-python/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://tech.blog.aknin.name/category/my-projects/pythons-innards/"&gt;A fantastic series&lt;/a&gt; by Yaniv Aknin about the innards of Python, how it works, and what makes it tick.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/into-the-depths-of-python</guid><pubDate>Tue, 05 Aug 2014 01:54:00 +0000</pubDate></item><item><title>You need math to program</title><link>http://brianschrader.com/archive/you-need-math-to-program/</link><description>&lt;![CDATA[&lt;div class="link"&gt;
&lt;p&gt;"You can learn to program without 'being good at math,' if by 'being good at math' you mean having gotten good grades in school. But programming is based on a number of rigorously-proven mathematical concepts, and you will be doing math whether you choose to believe it or not."&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="http://blog.tabini.ca/posts/you-need-math-to-program-and-thats-a-good-thing"&gt;You need math to program&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/you-need-math-to-program</guid><pubDate>Fri, 25 Jul 2014 05:29:00 +0000</pubDate></item><item><title>Forest Through the Trees</title><link>http://brianschrader.com/archive/forest-through-the-trees/</link><description>&lt;![CDATA[&lt;p&gt;Languages are just tools in the developer's belt. Sure Javascript is nasty, and C++ is  a complicated mess, but in the end it's the problem you solve that should be the real decider in what language you choose to use. What do you need? Which language makes your job easier without sacrificing too much in the way of performance? The language features should decide which one you use, not your preference toward any given one.&lt;/p&gt;
&lt;p&gt;The ability to program a computer to do whatever you want really is magic. The spells are the finished programs, the words and incantation are the written in archaic languages that only we know. I see a lot of people throwing a fuss about learning a new language or plugin or framework, and to me, that's a weird way of going about your life. Use the tool for the job you need, if you need C, then use it; if you can get away with Python or Ruby (or PHP I guess) use them. It's just another way of solving the problem you want to solve. Do carpenters complain that they have to use a saw to cut lumber when they'd rather use a hammer for everything? No. They use the tool appropriate for the job. Each language has its strengths, weaknesses, tradeoffs and perks. Learn what you can about the different languages, and paradigms (especially paradigms!) the more you learn about one the more it will help you in others.&lt;/p&gt;
&lt;p&gt;At the most basic level, developers are paid for, are tasked with solving a problem; we are paid to think. To shut out something because you don't want or need to learn it is to cut off a way of thinking. To stop thinking is to not do your job as a developer.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/forest-through-the-trees</guid><pubDate>Wed, 16 Jul 2014 02:46:00 +0000</pubDate></item><item><title>Letter to the FCC</title><link>http://brianschrader.com/archive/letter-to-the-fcc/</link><description>&lt;![CDATA[&lt;p&gt;My letter to the FCC today:&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The loss of net neutrality would be tragic from so many levels. The internet is supposed to be free and open, and by removing the protections that net neutrality offers the FCC is allowing for the selective censoring of the internet by any given ISP or other provider. Information that we, as a society, depend on these days will be stripped by for-profit companies. Companies would be able to censor opposers of their interests and manipulate the information users receive. If that's not scary to you, I'm sorry, but frankly you don't understand the issue. &lt;/p&gt;
&lt;p&gt;The internet is a beacon of the future of free information, of our societal progress, and of an ideal. It's one of the few things in our world that is so close to it's ideal. Would you forbid a book the rights to sit in a library based on its content? If so, this isn't a free country already. Please don't do this. Please.Science and innovation have led us to this, don't let money take it away; not this time.&lt;/p&gt;
&lt;p&gt;Please make the right decision; please don't end net neutrality.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Brian Schrader &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;Software Developer, and hopeful U.S. Citizen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Please take some time today to sign &lt;a href="https://dearfcc.org"&gt;this petition&lt;/a&gt; asking the FCC to not repeal net neutrality. I've asked before, and I'll ask again. The fight isn't over. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/letter-to-the-fcc</guid><pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate></item><item><title>Re: Permanence</title><link>http://brianschrader.com/archive/re-permanence/</link><description>&lt;![CDATA[&lt;p&gt;After watching &lt;a href="http://brianschrader.com/archive/the-internet's-own-boy/"&gt;The Internet's Own Boy&lt;/a&gt; I got to thinking about &lt;a href="http://mattgemmell.com/permanence/"&gt;Matt Gemmell's article&lt;/a&gt; a few weeks back about digital permanence. I took to browsing the &lt;a href="https://archive.org/index.php"&gt;Internet Archive&lt;/a&gt; after watching the movie, and I was struck by how exhaustive their collection is. Even my old Wordpress blog was in there, crazy. The thing is, we need more of that kind of thing. We need to realize that what we put on the Internet we are committing to history. In the past, the only way to make it into history was to write a book, or publish a scientific paper. Now it's trivial; blogs, Twitter, Facebook (most people's substitute for a blog these days), Instagram, etc instantly connect us with each other, and almost by accident, provide us with first hand accounts of our modern day events. Future historians won't have to search in the dirt for our words, they'll have to cut out all the crap to find the stuff they want. That changes how historians will do their work, and it should change how we think about what we say and do online.&lt;/p&gt;
&lt;h2&gt;The Internet Never Forgets&lt;/h2&gt;
&lt;p&gt;I truly hope that the Internet Archive thrives long into the future. I hope that The Library of Congress does the same thing they do &lt;a href="http://www.loc.gov/today/pr/2013/files/twitter_report_2013jan.pdf"&gt;with Twitter&lt;/a&gt; to scores of other online services. Students of the future will not know us like we know George Washington, by paintings and second hand accounts, but by his Facebook page, Twitter feed, and his blog. How much history is lost by those who live it not writing it down. With the internet, we have the ability (assuming storage is cheap) to preserve &lt;em&gt;everything&lt;/em&gt; we ever say, think, write, or post. That's really powerful, and possible accountability and privacy issues aside, its probably the most important use of an invention in the history of man. That someone decades, if not centuries, from now could read these words (assuming they are looking in the "Blogs No One Reads" section) is amazing. Every letter or period you type is committed to the record of history.&lt;/p&gt;
&lt;h2&gt;Write Early, Write Often&lt;/h2&gt;
&lt;p&gt;I try to get people I know, friends and family, to start a blog. And I encourage anyone reading this to do the same. I'm really insistent on it. Why? Because even your personal blog, your meaningless post on the usefulness of digital permanence could end up in the archive (chances are that it will, if it doesn't, you can add it manually). That means that you are a voice in history. Centuries from now your name will be on those thoughts, those bytes. Those words will be yours. To not write, to not give your opinion, is to be forgotten by history. Give your opinions, even if no one sees them. Some one might someday.&lt;/p&gt;
&lt;p&gt;Just as Matt promised in his post, I promise here to keep this site up as long as I can. I have this site version controlled so that the entire site can be rebuild as I built it, step by step. Why? Mostly for safeguarding against my own stupidity, but also to preserve the site as it used to be or as it will be. Anyone who got their hands on the repository could reproduce this site as it was at any point in its history. Every style change, every typo fix, every deleted article, everything. Most of this information is worthless, true, but deleting it is doing this information a disservice. Keep &lt;a href="https://www.apple.com/support/timemachine/"&gt;backups of your work&lt;/a&gt;, and &lt;a href="http://www.backblaze.com"&gt;make sure that backup is safe&lt;/a&gt;. It's our job as parts of history to report what we see, think, feel, and say not only to offer our thoughts as evidence for some future grad student's thesis proposal, but to preserve ourselves, and our identity indefinitely. In the past, &lt;a href="http://en.wikipedia.org/wiki/Library_of_Alexandria"&gt;libraries have burned&lt;/a&gt;, their knowledge lost. It is possible now that we can make sure that kind of tragedy never happens again, and that all people can have their footnote in the book of human history; that is, if they write it down.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/re-permanence</guid><pubDate>Tue, 15 Jul 2014 06:19:00 +0000</pubDate></item><item><title>The Internet's Own Boy</title><link>http://brianschrader.com/archive/the-internets-own-boy/</link><description>&lt;![CDATA[&lt;p&gt;I just finished watching &lt;em&gt;The Internet's Own Boy&lt;/em&gt;, the documentary detailing the life and tragic death of one of, in my opinion, America's great activists. Long story short: watch this documentary, really, just do it. It's licensed under &lt;a href="http://creativecommons.org/licenses/by-nc-sa/3.0/"&gt;Creative Commons BY-NC-SA&lt;/a&gt; so torrent it if you want. &lt;/p&gt;
&lt;p&gt;Then, when you are sufficiently riled, and fed up with the way our government pursues "justice", donate to &lt;a href="https://mayday.us"&gt;The Mayday PAC&lt;/a&gt;. I did. It's still accepting donations and they need support. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-internets-own-boy</guid><pubDate>Tue, 15 Jul 2014 00:00:00 +0000</pubDate></item><item><title>It's just a Phone</title><link>http://brianschrader.com/archive/its-just-a-phone/</link><description>&lt;![CDATA[&lt;p&gt;In a conversation with a friend a few weeks ago, we stumbled into an interesting discussion. He brought up that he'd been playing a particular game on his smartphone, and that it kept badgering him with "Pay to continue" messages. He made it very clear how, even as a casual gamer, the constant barrage of messages was exhausting to deal with, and in many cases would stop him from playing altogether. Leaving aside the whole "Free to Play" discussion, I asked him if he'd ever purchased one of those upgrades, or indeed if he'd ever bought an app or game on the Google Play store. &lt;/p&gt;
&lt;p&gt;He paused, thinking about it, and finally said,  "No." 
I then asked, why he wouldn't. &lt;/p&gt;
&lt;p&gt;"I wouldn't, but I don't know why I wouldn't." &lt;/p&gt;
&lt;p&gt;Intrigued I said, "You know it takes teams of people and months of time to make those games and apps; how do they make money if you don't buy anything from them? You downloaded their app for free, and refuse to pay anything for it."&lt;/p&gt;
&lt;p&gt;He paused. "Wait, if I don't buy this, the developers don't make any money?... Wow. I didn't know that."&lt;/p&gt;
&lt;p&gt;It sounds silly, but this isn't that uncommon a response. Neglecting the gross oversimplification of the app/game payment model here, I think this illustrates one of the most common problems that developers today face. We, as developers, love to imagine that people refuse to pay for apps because they are used to software being free. We &lt;em&gt;love&lt;/em&gt; to repeat the phrase "Rush to the bottom" and mourn the loss of paid apps, but there's another problem here as well: A lot of people still don't know how software is paid for, or that the only source of income that the developer has are those in-app purchases or upfront charges (neglecting ads of course). &lt;/p&gt;
&lt;p&gt;"I just assumed that the app was getting money for being in the store, or from Cox, Comcast, etc." &lt;/p&gt;
&lt;p&gt;That took me by surprise. I'd never heard that idea before. &lt;/p&gt;
&lt;p&gt;Really, this whole discussion was just as intriguing to me than it was to him. It means that there's still mystery surrounding apps and games, mystery about where they come from, and how they're made. We've heard that many people still believe that Apple writes all the apps in the App Store, that they're all paid for from ads, or something similar, but it just underscores the reality that most people don't see "pay for this developer's rent" in those little popups or up-front price tags, they see, "give Apple more money." &lt;/p&gt;
&lt;p&gt;Speaking for Apple, (since I don't know much about Android, I won't group Google in this analysis) the fact that individual developers don't control refunds, and don't have the ability to respond to comments and reviews in the store really cuts the communication between developers and their customers to an unfair level. Apple did add quite a few improvements to the App Store at this year's WWDC, but the ability to better communicate with their customers was not one of them, and it's sad. Apple gave us a lot, and that's good, but it's not enough. I really hope that Apple continues with the theme of this year's WWDC and improves the App Store next year (though sooner would be better).&lt;/p&gt;
&lt;p&gt;Ultimately, I think it's a communication problem; developers can't come out from under the rug that Apple throws over them and just talk to their customers. As the conversation continued, I posed other questions and got the usual responses:&lt;/p&gt;
&lt;p&gt;"Would you pay for Twitter?"&lt;/p&gt;
&lt;p&gt;"No."&lt;/p&gt;
&lt;p&gt;"Facebook?"&lt;/p&gt;
&lt;p&gt;"No."&lt;/p&gt;
&lt;p&gt;"Google?"&lt;/p&gt;
&lt;p&gt;"Umm...maybe."&lt;/p&gt;
&lt;p&gt;That one surprised me; even Google, the homepage of the internet, doesn't get a pass. &lt;/p&gt;
&lt;p&gt;To me this just underscores the reality that a large percentage of the population still consider software to be free, meaningless, and ephemeral additions to a device that they already felt was too expensive. Whenever the conversation gets this far, I make the comment, "Remember when software was hundreds of dollars?" Hell, Microsoft Word is &lt;em&gt;still&lt;/em&gt; $99 or more (for the old versions that don't require a subscription, and now the payment model is arguably worse). Why do most people pay for that, and not a far better piece of software or service?&lt;/p&gt;
&lt;p&gt;The response I almost always get is, "it's a phone." Phones aren't full-fledged computers in the popular mindset; they're toys. That, I think is the real problem. I'm not sure how to change that, maybe it'll come with time. We in the developer circle like to think that the popular mindset already considers smartphones a real computing or working device, but we forget that a lot of people, (probably a majority, though I have no data to affirm that) still consider smartphones expensive toys. Until this perception changes, apps are just meaningless, free toys to justify the price of our phones.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/its-just-a-phone</guid><pubDate>Sun, 22 Jun 2014 05:05:00 +0000</pubDate></item><item><title>Harry's Razors Review</title><link>http://brianschrader.com/archive/harrys-razors-review/</link><description>&lt;![CDATA[&lt;p&gt;A little over a month ago, I needed to buy more razor blades. I hate buying razor blades. Its annoying, and it costs way too much. I think I had just finished listening to an episode of &lt;a href="http://atp.fm"&gt;ATP&lt;/a&gt; or &lt;a href="http://daringfireball.net"&gt;The Talk Show&lt;/a&gt; and they'd had &lt;a href="https://www.harrys.com"&gt;Harry's&lt;/a&gt; as a sponsor. So I looked up their prices, and immediately noticed that they were half the price of the Gillette ones I usually buy, so I took the plunge, entered the promo code, and ordered their starter set (which, turns out, was exactly the same price as a 4-pack of Gillette razors). Three days later, this arrived in the mail.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The starter pack" src="http://brianschrader.com/images/blog/harrys-razors.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;That next morning I took to using my new set of razors. After some initial confusion on how to get the razors on and off the handle (if you read the instructions, you won't have this problem), I got right to shaving. &lt;/p&gt;
&lt;p&gt;The first thing I noticed is that these razors are sharp, really sharp which makes for a great shave overall. The shaving cream is minty and feels cool on your face, and its not a foam, but a cream. I'd never used a shaving cream like that before, and now all the foam ones feel weird by comparison. &lt;/p&gt;
&lt;p&gt;As I said, these blades are sharp, and if you aren't watching what you're doing, you will get cut. I'm a pretty clumsy shaver, and I don't typically pay too much attention to how I'm holding this incredibly sharp piece of steel that's gliding up and down my throat, so of course I cut myself. Since then, I've been a little more careful, and it's never happened again. It wasn't a fault of the blades, but of me not noticing how sharp they were.&lt;/p&gt;
&lt;p&gt;In a little over a month, I've gone through three blades, and I just ordered my refill set today (I shave about 3-5 times a week so that's not a bad turnaround). I'm personally thrilled to be using them, and I prefer them immensely to other commercial brand razors. The shaving cream is excellent, and the blades are sharp and they stay sharp for quite a long time (much longer, it seems, than Gillette razors which are usually only good for about a week). One thing I will recommend though, is to get the &lt;a href="https://www.harrys.com/products/the-winston-set"&gt;Winston&lt;/a&gt; razor set. The difference between that and the regular one is that the Winston is made from aluminum. The regular plastic ones (like mine) are great to hold and have a nice weight to them, but every time I use it, I tell myself that I should have paid the extra $5 for the aluminum one. Hopefully I'll be buying one soon, (plus it just looks amazing).&lt;/p&gt;
&lt;p&gt;I highly recommend &lt;a href="https://www.harrys.com"&gt;Harry's&lt;/a&gt; and I, for one, am going to be buying from them for a long time. They're cheaper than other blades, they last longer than other blades, and they're a better quality than other blades. That's really what you want after all. Great job guys! Keep it up.&lt;/p&gt;
&lt;p&gt;&lt;span id="note" style="font-size:small;"&gt;
Just as a disclaimer: Harry's did not ask me to post this review, nor are they giving me anything for doing so. This was entirely because I enjoyed their product and wanted to give them a shout out for the awesome job they're doing.
&lt;/span&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/harrys-razors-review</guid><pubDate>Thu, 05 Jun 2014 17:32:00 +0000</pubDate></item><item><title>So I Went Flying Yesterday</title><link>http://brianschrader.com/archive/so-i-went-flying-yesterday/</link><description>&lt;![CDATA[&lt;p&gt;Yesterday I went flying, and it was amazing. &lt;/p&gt;
&lt;p&gt;About a week ago, my neighbor, a retired Navy and Airline pilot, knocked on my door and told me he wanted to take me flying. I said sure, but didn't really know what to expect. I knew that he had a small plane at his disposal that he flies when he can, but really nothing more than that. I'd flown in small 15 passenger planes before, but just as a passenger. What I got was something out of this world&lt;a href="#note"&gt;*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="This was our plane." src="http://brianschrader.com/images/collections/flying-pics/the-plane.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The plane, first off, was much smaller than anything I'd ever flown in before. It was a 1960's Cherokee, 4 seats, and the size of my Subaru. Before we set off the only thought going through my head was, "This is going to be awesome." We did some preflight checks, and packed ourselves in. As we taxied down the runway, my pilot handed me a pre-takeoff checklist. The engine noise now too loud to hear one another, despite being less than a foot apart. We donned headsets and checked off the items on the list one by one. It was almost surreal.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "Mags ON?" &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "ON. Check." &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "Engine at 2000RPM?" &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "Check." &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "Flaps up?" &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt; "Flaps up. Check." &lt;em&gt;ksh&lt;/em&gt; &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;A smooth takeoff put us high above the city. The view from the plane was awesome, but there were much better views to come.&lt;/p&gt;
&lt;p&gt;We started off on a leisurely journey from the airfield, and headed north-east, into the mountains, and the views got better and better. We flew high above peaks that I'd hiked. What took me five hours to hike took us five minutes to fly over. Its a strange feeling seeing mountains from above. What made it even more amazing was that we weren't that high above them. At the time, our altitude was ~5,000 ft and climbing. With a quick google search, I can tell you that the peak we passed, the one I'd hiked, is 3,675 ft tall. Passing just 1,325 ft above the peak, I felt like I could almost touch it, like I was looking at a model railroad.&lt;/p&gt;
&lt;p&gt;From there, we headed north. At this point I moved beyond the role of passenger, and closely guarded, into the role of pilot. &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;"Why don't you steer for a bit?"&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;"Umm... sure, I guess."&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;My heart was pounding now, and carefully I grabbed hold of the controls, put my hands on the pedals, and took control. I could hear my heart pounding in my ears as I nudged the plane into a 15&amp;deg; turn. Before long, and at my, probably terrified sounding, request he took control once again, and we continued north.&lt;/p&gt;
&lt;p&gt;From our lofty position we saw so many things, it would be silly to list them all. Needless to say, it was beautiful. The weather was perfect, not a cloud for miles. The ride, smooth and calming. The only discomfort was the temperature. These little planes don't have air conditioning and the cabin is cooled by a little vent on the outside of the plane that feeds inward. The air was forceful, but not, by any means, cool. With the sun beating down and warm air rushing through the vents, the cabin got really warm.&lt;/p&gt;
&lt;p&gt;Near the end of our outward journey we flew past Palomar Mountain. It was the greenest thing for miles and stuck out like a jagged spike from the relatively flat valley around it. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Palomar Mt." src="http://brianschrader.com/images/collections/flying-pics/palomar.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;We landed on an airstrip close by, and had lunch before heading back along the western edge of the valley. &lt;/p&gt;
&lt;p&gt;The way back was a little bumpier than before, but nothing my expert pilot couldn't handle. I always knew thermals were a main cause of turbulence, but I'd never thought that it would be caused by the different colors of the various farmlands below.&lt;/p&gt;
&lt;p&gt;We landed smoothly, and taxied in. The journey was over, and it was barely noon. &lt;/p&gt;
&lt;p&gt;My little three hour adventure was over, and that makes me a bit sad. It was so amazing, and now I have to do it again.&lt;/p&gt;
&lt;p&gt;Thank you neighbor. It was amazing.&lt;/p&gt;
&lt;p&gt;&lt;span id="note" style="font-size:small;"&gt;&lt;/p&gt;
&lt;p&gt;The full collection of photos are available &lt;a href="http://brianschrader.com/images/collections/flying-pics/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/so-i-went-flying-yesterday</guid><pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate></item><item><title>Multithreading in Java</title><link>http://brianschrader.com/archive/multithreading-in-java/</link><description>&lt;![CDATA[&lt;p&gt;&lt;link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/default.min.css"&gt;&lt;/p&gt;
&lt;script src="http://yandex.st/highlightjs/8.0/highlight.min.js"&gt;&lt;/script&gt;

&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;

&lt;p&gt;I work as a Java Software Developer. That being the case, I know comparatively little about Java&lt;a href="#note1"&gt;*&lt;/a&gt;. I'm much more well-versed in Objective-C, Python, or even PHP, than in Java. As such I've had quite a few occasions I've needed to do some task or another and I'm at a loss for the "Java way", so I put together this handy-dandy little guide.  &lt;/p&gt;
&lt;p&gt;&lt;img src="http://brianschrader.com/images/blog/branches.png" class="image-center hide-on-mobile" style="width:70%;"&gt;&lt;/p&gt;
&lt;p&gt;Let's assume that I want to do some heavy processing, but not have it clog up the main thread, a pretty common task. In Objective-C we have Grand Central Dispatch.&lt;/p&gt;
&lt;h2&gt;GCD and Multithreading in Objective-C&lt;/h2&gt;
&lt;pre&gt;&lt;code class="objc"&gt;

dispatch_async( dispatch_get_global_queue( DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^(void){

        //Do your long processing job here.

    });

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And in Objective-C, if I want to return to the main thread to do some UI Updates, or return to do something else I just add 1 line and it becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code class="objc"&gt;

dispatch_async( dispatch_get_global_queue( DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^(void){

    //Do your long processing job here.

    dispatch_async( dispatch_get_main_queue(), ^(void){

        //Run UI Updates

    });

});

&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Now, In Java&lt;/h2&gt;
&lt;p&gt;In Java, I wanted to do the same thing, dispatch work to be done on another thread. After some research, I found this on StackOverflow. It seemed to be just want I wanted.&lt;/p&gt;
&lt;h3&gt;Using Threads (The Wrong Way)&lt;/h3&gt;
&lt;pre&gt;&lt;code class="java"&gt;

new Thread(new Runnable() {

    public void run() {

        //Do your heavy lifting here.

    }

}).start();

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://brianschrader.com/images/blog/java.png" class="image-right hide-on-mobile" style="width:30%;"&gt;&lt;/p&gt;
&lt;p&gt;This tells Java, literally, to make a new thread and execute this code on that new thread. Unlike in Objective-C where I'm handing some code off to a queue that might make a new thread, choose an existing one, or whatever. This also means that, in Java, the developer is tasked with maintaining that thread, and as far as I know, it isn't handled like regular system threads. As such, this is kind of frowned upon.&lt;/p&gt;
&lt;p&gt;The problem I encountered in testing this was 2-fold. First, the task was unable to give status updates or return to the main thread without considerably more code, and second, if the process encountered an Exception it went uncaught and you'd never know that anything happened. Obviously there are ways around both of those things, but they require significant changes to the source code, and I wanted an inline solution just like GCD in Objective-C. Let's try something else.&lt;/p&gt;
&lt;h3&gt;Using Executors (The Right Way)&lt;/h3&gt;
&lt;p&gt;After more research, I discovered a way to accomplish what I wanted in an inline way that was preferred by the Java community and worked the way I wanted. There's three options for doing this depending on what you need to accomplish.&lt;/p&gt;
&lt;p&gt;If you want to do some execution on another thread but don't need results or status updates from it then this code should work.&lt;/p&gt;
&lt;h4&gt;Asynchronous Execution (No Status Updates, No Returns, No Exceptions)&lt;/h4&gt;
&lt;pre&gt;&lt;code class="java"&gt;

ExecutorService executorService = Executors.newSingleThreadExecutor();

executorService.execute(new Runnable() {

    public void run() {

       //Do your heavy lifting here. 

    }

});

executorService.shutdown();

&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Asynchronous Execution (Status Updates, but No Returns, No Exceptions)&lt;/h4&gt;
&lt;p&gt;If you need to check on the task, but not get values from it: &lt;/p&gt;
&lt;p&gt;(i.e. you want to know if its finished, but you dont care about getting results). &lt;/p&gt;
&lt;pre&gt;&lt;code class="java"&gt;

Future future = executorService.submit(new Runnable() {

    public void run() {

        //Do your heavy lifting here.

    }

});

future.get();  //returns null if the task has finished correctly.

&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Asynchronous Execution (Status Updates, Returns, and Exceptions)&lt;/h4&gt;
&lt;p&gt;If the task needs to return values, or throw exceptions, then use a Callable instead of Runnable.&lt;/p&gt;
&lt;pre&gt;&lt;code class="java"&gt;

Future future = executorService.submit(new Callable(){

    public Object call() throws Exception {

        //Do your heavy lifting here.

        return "Callable Result";

    }

});

System.out.println("future.get() = " + future.get());

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully this little guide helps you. Let me know if you have any suggestions or if you want to correct me. As I said, Java isn't my strongest language and I may have gotten some details wrong regarding the benefits of each approach. Overall, I still admire Objective-C's implementation, it just feels more straight forward and readable. I know that people have &lt;a href="http://hawtdispatch.fusesource.org"&gt;ported GCD&lt;/a&gt;, which Apple &lt;a href="http://libdispatch.macosforge.org"&gt;open sourced&lt;/a&gt;, to Java and other languages, but for business applications, that kind of thing isn't really accepted. I'm stuck doing it the Java way, which is fine.&lt;/p&gt;
&lt;p&gt;&lt;span id="note1" style="font-size:small;"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java is a language I learned in class and hadn't touched again until I was roped in to do Java Development at work. Its not my favorite language, but it gets the job done and its community is enormous. If you have questions, the Java section of StackOverflow has an answer. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id="note2" style="font-size:small;"&gt;&lt;/p&gt;
&lt;p&gt;** I've been sitting on this article for a while, mostly because I didn't know if these "answers" were correct or not. Now that I've not only researched this topic more, but I've actually used it quite a bit, I'm far more confident in the answers I'm giving.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id="note3" style="font-size:small;"&gt;&lt;/p&gt;
&lt;p&gt;*** Also, &lt;a href="http://highlightjs.org"&gt;Highlight.js&lt;/a&gt; is really cool.&lt;/p&gt;
&lt;p&gt;&lt;/span&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/multithreading-in-java</guid><pubDate>Fri, 30 May 2014 00:00:00 +0000</pubDate></item><item><title>NASA Streams the ISS View of Earth 24/7</title><link>http://brianschrader.com/archive/nasa-streams-the-iss-view-of-earth-24-7/</link><description>&lt;![CDATA[&lt;p&gt;The view of sunrise over the Italian Peninsula from space... stunning. This is what modern engineering gives us. 
&lt;center&gt;
&lt;iframe style="margin-left:auto; margin-right:auto;" width="480" height="302" src="http://www.ustream.tv/embed/17074538?v=3&amp;amp;wmode=direct" scrolling="no" frameborder="0" style="border: 0px none transparent;"&gt;    &lt;/iframe&gt;&lt;br /&gt;&lt;a href="http://www.ustream.tv/" style="padding: 2px 0px 4px; width: 400px; background: #ffffff; display: block; color: #000000; font-weight: normal; font-size: 10px; text-decoration: underline; text-align: center;" target="_blank"&gt;Live streaming video by Ustream&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/nasa-streams-the-iss-view-of-earth-24-7</guid><pubDate>Sat, 10 May 2014 06:39:00 +0000</pubDate></item><item><title>Rocket Simulation</title><link>http://brianschrader.com/archive/rocketsim/</link><description>&lt;![CDATA[&lt;p&gt;The final project for my rocket propulsion class was to build a simulation of a water-air composite structure rocket (basically a bottle rocket on steroids). The goal of the assignment was to design a rocket to beat the &lt;a href="http://wra2.org/WRA2_Class_A_Rules.php"&gt;world record&lt;/a&gt; (at time of writing it was 663 meters). &lt;/p&gt;
&lt;p&gt;In the pre-finals rush, I whipped up this simulation and I've uploaded the code to GitHub. It was recommended to do the simulation in MatLab, but I wanted to practice my Python. Anyway, here's the &lt;a href="https://github.com/Sonictherocketman/RocketSim"&gt;link to the repository&lt;/a&gt;.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/rocketsim</guid><pubDate>Mon, 05 May 2014 23:51:00 +0000</pubDate></item><item><title>Programming Sucks</title><link>http://brianschrader.com/archive/programming-sucks/</link><description>&lt;![CDATA[&lt;p&gt;So true.&lt;/p&gt;
&lt;div class="link"&gt;"Somewhere there's a database programmer surrounded by empty Mountain Dew bottles whose husband thinks she's dead. And if these people stop, the world burns."&lt;/div&gt;

&lt;p&gt;&lt;a href="http://stilldrinking.org/programming-sucks"&gt;Programming Sucks&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/programming-sucks</guid><pubDate>Fri, 02 May 2014 03:43:00 +0000</pubDate></item><item><title>CSU Tuition</title><link>http://brianschrader.com/archive/csu-tuition/</link><description>&lt;![CDATA[&lt;p&gt;I was doing some quick research, and I found this interesting.
&lt;center&gt;
&lt;table&gt;
&lt;th&gt;Cal State University Tuition&lt;/th&gt;&lt;/p&gt;
&lt;tr&gt;&lt;td&gt;San Luis Obispo&lt;/td&gt;&lt;td&gt;$8,724&lt;/td&gt;
&lt;tr&gt;&lt;td&gt;San Jose&lt;/td&gt;&lt;td&gt;$7,303&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sonoma&lt;/td&gt;&lt;td&gt;$7,234&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Humboldt&lt;/td&gt;&lt;td&gt;$7,130&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Chico&lt;/td&gt;&lt;td&gt;$6,972&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;San Marcos&lt;/td&gt;&lt;td&gt;$6,814&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Bakersfield&lt;/td&gt;&lt;td&gt;$6,775&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;SDSU&lt;/td&gt;&lt;td&gt;$6,766&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Sacramento&lt;/td&gt;&lt;td&gt;$6,628&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Stanislaus&lt;/td&gt;&lt;td&gt;$6,626&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;San Bernardino&lt;/td&gt;&lt;td&gt;$6,549&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;East bay&lt;/td&gt;&lt;td&gt;$6,549&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Maritime Academy&lt;/td&gt;&lt;td&gt;$6,536&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Northridge&lt;/td&gt;&lt;td&gt;$6,520&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Channel Islands&lt;/td&gt;&lt;td&gt;$6,450&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;San Francisco&lt;/td&gt;&lt;td&gt;$6,440&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Polytechnic&lt;/td&gt;&lt;td&gt;$6,351&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Las Angeles&lt;/td&gt;&lt;td&gt;$6,335&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Fresno&lt;/td&gt;&lt;td&gt;$6,286&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Long Beach&lt;/td&gt;&lt;td&gt;$6,240&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Fullerton&lt;/td&gt;&lt;td&gt;$6,118&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Dominguez Hills&lt;/td&gt;&lt;td&gt;$6,095&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Monterey Bay&lt;/td&gt;&lt;td&gt;$5,963&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/center&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/csu-tuition</guid><pubDate>Thu, 01 May 2014 21:11:00 +0000</pubDate></item><item><title>Don't Blow Up the Internet</title><link>http://brianschrader.com/archive/dont-blow-up-the-internet/</link><description>&lt;![CDATA[&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;div style="margin-left:auto; margin-right:auto;"&gt;&lt;iframe width="560" height="315" style="margin-left:auto; margin-right:auto;" src="https://www.youtube.com/embed/c34NU_ph9YM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;I've been listening to this all morning. Great job &lt;a href="https://twitter.com/songadaymann"&gt;@songadaymann&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href="https://twitter.com/songadaymann/status/460170188328304641"&gt;Jessica&lt;/a&gt; from the FCC watched it! &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The song has been posted to BandCamp! &lt;a href="http://archive.hellomann.com/track/dont-blow-up-the-internet"&gt;Get it now!&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/dont-blow-up-the-internet</guid><pubDate>Sat, 26 Apr 2014 21:40:00 +0000</pubDate></item><item><title>Help Protect the Internet</title><link>http://brianschrader.com/archive/help-protect-the-internet/</link><description>&lt;![CDATA[&lt;p&gt;The &lt;a href="http://www.nytimes.com/2014/04/24/technology/fcc-new-net-neutrality-rules.html?_r=1"&gt;FCC's decision&lt;/a&gt; this week has shown us that, if the FCC and big corporations were to have their way, &lt;a href="http://www.theopeninter.net"&gt;Net Neutrality &lt;/a&gt; would be nothing but a sweet dream.&lt;/p&gt;
&lt;p&gt;Help protect a free and neutral internet. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.savetheinternet.com/sti-home"&gt;Save the Internet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://petitions.whitehouse.gov/petition/maintain-true-net-neutrality-protect-freedom-information-united-states/9sxxdBgy"&gt;White House Petition on Net Neutrality&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href="https://www.reformgovernmentsurveillance.com"&gt;CEOs of Apple, Dropbox, Facebook, Google, Twitter, Microsoft and more send a letter to the U.S. Government asking for reform of U.S. surveillance policies&lt;/a&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/help-protect-the-internet</guid><pubDate>Fri, 25 Apr 2014 00:00:00 +0000</pubDate></item><item><title>OS X's New Look</title><link>http://brianschrader.com/archive/os-x-new-look/</link><description>&lt;![CDATA[&lt;p&gt;With the release of iOS 7 last summer and the upcoming announcement of iOS 8 in a couple weeks, the Tech world is abuzz with iOS 8 rumors. One thing that sticks out to me, and a few others, is the question of what will happen to OS X this June. Many assumed that it would get a re-skin along with iOS 7, and it didn't. OS X Mavericks did remove a lot of extraneous skeuomorphic elements of OS X, but the basic visual structure remains unchanged. That begs the question though, whether Apple will revamp the visuals this year to make the Mac look similar, but hopefully not exactly, like iOS 7. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/Dexwell_"&gt;@Dexwell_&lt;/a&gt; tweeted his re-skin of the &lt;a href="https://twitter.com/Dexwell_/status/456495401638830080/photo/1"&gt;OS X Finder&lt;/a&gt; and the &lt;a href="https://twitter.com/Dexwell_/status/453154821315768320/photo/1"&gt;"About this Mac"&lt;/a&gt; window recently and I have to say, I love the look. I've also noticed recently that Spotify's new desktop app looks very iOS 7-y and I think it works really well on the Mac. Could these be the style that Apple leans toward if they are re-skinning OS X? If so, I love it. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Spotify's new look" src="http://brianschrader.com/images/blog/spotify-new-look.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OS X Finder, by @Dexwell_. All credit goes to him. I did not make this image, nor do I own rights to it." src="http://brianschrader.com/images/blog/dexwell_finder.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="OS X About this Mac, by @Dexwell_. All credit goes to him. I did not make this image, nor do I own rights to it." src="http://brianschrader.com/images/blog/dexwell_atm.png" /&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/os-x-new-look</guid><pubDate>Mon, 21 Apr 2014 21:23:00 +0000</pubDate></item><item><title>Pokemon</title><link>http://brianschrader.com/archive/pokemon/</link><description>&lt;![CDATA[&lt;p&gt;&lt;img alt="Pokemon, Gotta Catch 'em All!" src="http://brianschrader.com/images/blog/pokemon.png" /&gt;&lt;/p&gt;
&lt;p&gt;Pokemon is 16 years old. That's 17 seasons, 827 episodes, and it's &lt;em&gt;still&lt;/em&gt; airing new episodes. Wow, just wow. That blows my mind. Pokemon was such a huge part of my childhood, and to see it still going is amazing in the truest sense of the word. I watched some older episodes today, and they still look pretty good. Still though, I can't believe it's still on. I was 7 when it first aired in the U.S. and I'm 22 today (You might be thinking, "Wait, thats 15 years!" You're right, but it first aired in Japan a year earlier than here). &lt;/p&gt;
&lt;p&gt;I'm in awe by this; Pokemon, keep going strong. If you teach kids today what you did to me, keep going forever.&lt;/p&gt;
&lt;p&gt;P.S. Here's some of my favorite moments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4gol1SDDbx4"&gt;James, Turn Attack!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fOsdy1ZsXUs"&gt;Viridian City&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fERhjPooumo"&gt;You and Me and Pokemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Bgeh81geivE"&gt;Pikachu's Goodbye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZBnp3eEJld8"&gt;A Friend in Deed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and of course &lt;a href="https://www.youtube.com/watch?v=DqXlSwBIHFc"&gt;the theme song&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/pokemon</guid><pubDate>Mon, 21 Apr 2014 04:28:00 +0000</pubDate></item><item><title>Roman Food</title><link>http://brianschrader.com/archive/roman-food/</link><description>&lt;![CDATA[&lt;div class="link"&gt;"Moretum is a cheese, garlic, and herb spread mentioned in a wonderful little poem, also called Moretum, by the poet Virgil."&lt;/div&gt;

&lt;p&gt;&lt;a href="http://pass-the-garum.blogspot.com/2012/10/cooking-apicius.html"&gt;Moretum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I needed to find a "Roman" dish for a G.E. class. This one actually sounds good. Better than the fish paste.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/roman-food</guid><pubDate>Sun, 20 Apr 2014 04:56:00 +0000</pubDate></item><item><title>My iOS 8 Wishlist</title><link>http://brianschrader.com/archive/my-ios-8-wishlist/</link><description>&lt;![CDATA[&lt;p&gt;WWDC is right around the corner. Its not a very long list, but here's my feature wish list for iOS 8 and a little on the iPhone 6:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.imore.com/ios-7-wants-actionable-notifications-push-interface"&gt;Actionable Notifications&lt;/a&gt; (like in OS X Mavericks)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maps travel time (&lt;em&gt;also&lt;/em&gt; like in OS X Mavericks)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better Inter-App Communication (we've been asking for this for years now)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;That Siri API we've been wanting (&lt;a href="http://www.techradar.com/us/news/phone-and-communications/mobile-phones/cortana-everything-you-need-to-know-about-microsoft-s-siri-rival-1183607"&gt;Cortana&lt;/a&gt; and Google Now aren't getting worse).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Offline Siri dictation (like in Mavericks...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Battery Shaming (like in Mavericks... you get the point?)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mac-iOS AirDrop compatibility&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A public &lt;a href="http://stackoverflow.com/questions/19019031/how-can-an-ios-7-app-make-itself-transparent-to-see-a-users-home-screen-image"&gt;API for developers to see and use the home screen background &lt;/a&gt;(Safari can do this, but its private)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As for the iPhone 6 I have but one request: better battery life (I can dream can't I?).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It'll be interesting to see what Apple brings to the table this year. The feature request lists get shorter every year, and this year its really short. It would make me happy just to see the features in Mavericks that I love make their way to iOS. I'd be thrilled with just that, though I'm sure there's more.&lt;/p&gt;
&lt;p&gt;Really my biggest concern is if they'll announce any new retina Macbook Pros. I'll be in the market for one soon, and I don't want to get one if they are just about to refresh them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This is really more of an OS X thing, but I would love to be able to respond to text messages from my Mac (I know about the technical challenges, but its Apple and they could figure it out).&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/my-ios-8-wishlist</guid><pubDate>Wed, 16 Apr 2014 00:00:00 +0000</pubDate></item><item><title>BloodMoon Eclipse Photos</title><link>http://brianschrader.com/archive/bloodmoon-eclipse/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://brianschrader.com/images/blog/blodmoon-1.jpg"&gt;&lt;img alt="The first sliver" src="http://brianschrader.com/images/blog/blodmoon-1-comp.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://brianschrader.com/images/blog/blodmoon-3.jpg"&gt;&lt;img alt="Halfway there!" src="http://brianschrader.com/images/blog/blodmoon-2-comp.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://brianschrader.com/images/blog/blodmoon-3.jpg"&gt;&lt;img alt="Bloodmoon's final form" src="http://brianschrader.com/images/blog/blodmoon-3-comp.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Universe is amazing, isn't it? &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/bloodmoon-eclipse</guid><pubDate>Tue, 15 Apr 2014 07:33:00 +0000</pubDate></item><item><title>Apple, Intel, and Matt Richman</title><link>http://brianschrader.com/archive/apple-intel-and-matt-richman/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href="http://mattrichman.net/post/82689013158/apple-samsung-and-intel&amp;gt;)"&gt;Matt Richman&lt;/a&gt; brings up a great point. Apple is, in my layman's opinion, too
dependent on their competitor for parts that are essential for its business
(namely its A-series processors). There's been a lot of talk in the community
about how beneficial it would be for Apple and Intel if they were to cooperate,
and Matt points out a great starting point for their negotiations. It'll be very
interesting to see if anything is announced at WWDC this year regarding a
possible partnership.&lt;/p&gt;
&lt;p&gt;One thing is for certain, and I'm not the first to say this, Apple cannot
"out-pace" Samsung in processor design and manufacturing if they use Samsung's
facilities to make their chips; Samsung will always be on even keel with Apple.
If Apple wants to innovate beyond Samsung it needs to move to another supplier,
and the only one capable of such volumes and quality would be Intel. The two
were made for each other.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/apple-intel-and-matt-richman</guid><pubDate>Tue, 15 Apr 2014 05:09:00 +0000</pubDate></item><item><title>The NSA knew about and exploited the Heartbleed Bug</title><link>http://brianschrader.com/archive/heartbleed-and-the-nsa/</link><description>&lt;![CDATA[&lt;p&gt;The &lt;a href="http://www.cnet.com/news/heartbleed-bug-what-you-need-to-know-faq/"&gt;Heartbleed SSL&lt;/a&gt; bug is &lt;a href="http://time.com/59390/heartbleed-internet-security-routers/"&gt;no joke&lt;/a&gt;. If you don't know, SSL is the security mechanism that websites use for HTTPS security. Your bank, your Facebook account, your mortgage lender, your online stores, your home router, everything uses HTTPS for encryption and this bug is something that compromises all of that, and its been there for 3 years! It was a bug that the developers, had they discovered it sooner, they would have patched it immediately, but they didn't know about it. Turns out the NSA did know about it, and they chose to keep it a secret, and worse to exploit it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.bloomberg.com/news/2014-04-11/nsa-said-to-have-used-heartbleed-bug-exposing-consumers.html"&gt;Reports claim&lt;/a&gt; that the NSA not only knew, for years I might add, about this bug, but they exploited it to get our private information. Its almost hilarious how much they were able to acquire.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.marco.org/2014/04/11/nsa-knew-of-heartbleed"&gt;Marco Arment&lt;/a&gt; gave his input on this, and I mostly agree with him on this. The NSA exploits and undermines the security of major tech companies and infrastructures to steal information, to infringe on privacy, and to &lt;a href="http://www.washingtonpost.com/wp-srv/special/national/black-budget/"&gt;sabotage the backbones of the internet&lt;/a&gt; in order to get this information. To me, the worst thing about the NSA, &lt;em&gt;aside&lt;/em&gt; from the fact that they maliciously steal our private data and take no heed as to what they steal, is that after all that, the NSA refuses to be helpful, they refuse to use their powers to do anything good.&lt;/p&gt;
&lt;p&gt;The NSA knew about this bug years ago, &lt;em&gt;years ago&lt;/em&gt;, and did nothing. They took advantage of it instead of fixing it. Software, and security won't get better without the people who discover these vulnerabilities telling the developers about it so they can, wait for it, FIX IT! We don't know who &lt;em&gt;else&lt;/em&gt; was able to steal data during those years and its bad enough that even the NSA did. Wouldn't we all be better off if they used their billions of dollars to help the world's security, and not compromise it? To me that's the real danger of the NSA. They spend billions and act just as maliciously as common hackers. They aren't doing the world any good, they're just assholes.&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size:small;"&gt;
Note: What's worse is that the bug has been out there so long and is in so many systems that it will be a long time before its fully patched, and your data is vulnerable the entire time that's the case.
&lt;/span&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/heartbleed-and-the-nsa</guid><pubDate>Sat, 12 Apr 2014 19:25:00 +0000</pubDate></item><item><title>The &lt;i&gt;New&lt;/i&gt; New CMS</title><link>http://brianschrader.com/archive/the-new-new-cms/</link><description>&lt;![CDATA[&lt;p&gt;Over the last few weekends I've been migrating to a new home-built CMS. The new CMS is &lt;em&gt;finally&lt;/em&gt; something I can be proud of function wise, and because it doesn't use and fancy SQL databases I know it will be more easily maintainable and much more search friendly. Counting this one, that makes four different CMS's I've gone through for this site and its predecessor. I've used 100% static HTML files, dynamic PHP pages that relied on SQL databases, and a 100% web form based system, none of which I was happy with. They were all too complicated to maintain, or just felt wrong to use for just a simple blog. I wanted something &lt;a href="http://en.wikipedia.org/wiki/Code_Monkey_(song)"&gt;functional, and elegant&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The new CMS uses a remote Git repo to save all changes, and clones that repo into the web root. &lt;a href="http://toroid.org/ams/git-website-howto"&gt;This article&lt;/a&gt; helped me get that set up, and I've referred back to it so often that it shows up first in my Safari search suggestions. &lt;/p&gt;
&lt;p&gt;The CMS is actually just a set of &lt;em&gt;mostly&lt;/em&gt; static pages that pull their data from JSON files. The JSON files are generated by a Python script on my local machine before being committed to the repository clone on my Mac and finally pushed to the server. &lt;/p&gt;
&lt;p&gt;Writing the articles is the easiest part, as it should be. It's really simple; write a Markdown file and put five lines of metadata at the top: title, author, slug (optional), tags, and status. The status tells the Python script whether the article is a draft meant for previewing, or a ready-to-publish article. That's it. Run the Python script, look at the preview, change the status to "publish", commit the changes and publish to the server. The rest is taken care of by PHP snippets, Python scripts, and Git's magic.&lt;/p&gt;
&lt;p&gt;&lt;img class="image-center" src="http://brianschrader.com/images/markdown-cms-preview.jpg" alt="A look at a typical Markdown article"&gt;&lt;/p&gt;
&lt;p&gt;When I started out with this refactor, I had my sights set on using PHP for everything, like I had before. I'm no expert in PHP (I've probably written less than 2000 lines of it ever) but I don't particularly like it as a language, so I went with Python. I hadn't written Python in over a year, but it was easy enough to relearn, and over the time I've spent rewriting the CMS, I've fallen for Python as my preferred scripting language. In fact, I've come up with a project using Python's cool feature to integrate with C, but more on that later.&lt;/p&gt;
&lt;p&gt;As for the scripts and the PHP template pages, I might clean them up for GitHub some day (they're still a little rough around the edges, and there's no current way to update an article automatically) but once a few bugs are worked out and features added, I'll try to get it up there. &lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="http://blog.tabini.ca/going-static/"&gt;Marco Tabini&lt;/a&gt; for his articles on &lt;a href="https://github.com/mtabini/louis"&gt;Louis&lt;/a&gt; and his static-file website articles, and thanks to &lt;a href="http://www.marco.org/about"&gt;Marco Arment&lt;/a&gt; for his method of generating previews and using Dropbox sync. I wish I could have built a system like his CMS &lt;a href="http://www.marco.org/secondcrack"&gt;SecondCrack&lt;/a&gt; but sadly my web host doesn't allow Dropbox to run on the server. And finally thanks to &lt;a href="http://toroid.org/ams/git-website-howto"&gt;Abhijit Menon-Sen&lt;/a&gt; for his awesome explanation of how to deploy a website using Git. &lt;/p&gt;
&lt;p&gt;I'd love to answer any questions about the CMS, if you have one you can find me on Twitter &lt;a href="http://twitter.com/SonicRocketman"&gt;@SonicRocketman&lt;/a&gt; or go to &lt;a href="http://brianschrader.com/about/"&gt;the about page&lt;/a&gt; and send me an email. &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/the-new-new-cms</guid><pubDate>Mon, 24 Mar 2014 02:43:00 +0000</pubDate></item><item><title>If Only I had a Podcast</title><link>http://brianschrader.com/archive/if-only-i-had-a-podcast/</link><description>&lt;![CDATA[&lt;p&gt;Over the weekend I gathered up a mixer, mic and some cables and set to make myself a podcasting-like setup. The mixer is an old [Mackie 1202-VLZ Pro][http://www.mackie.com/pdf/1202vlzpro_ss.pdf], and the mic is an acquired [AKG C-3000][http://www.akg.com/C3000-1039.html?pid=1026]. All of this, including the cables and stand, was being thrown away by a local television station, and I picked it up for free. It took me a total of 5 hours between Sunday and today to get it working (There was a lot of wiring and rewiring as I reorganized and refactored my cable arrangement). Here's what the end result looks like: &lt;img alt="my podcasting setup" src="http://brianschrader.com/images/blog/podcast-setup.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Now if only I had a podcast so I could use all this stuff...&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/if-only-i-had-a-podcast</guid><pubDate>Tue, 18 Mar 2014 09:35:00 +0000</pubDate></item><item><title>Microsoft and a Unix-based Windows</title><link>http://brianschrader.com/archive/microsoft-and-a-unix-based-windows/</link><description>&lt;![CDATA[&lt;p&gt;Does it make sense for Microsoft to develop, and ship a future Windows OS that is Unix based? To date, Microsoft is the only major player in the Operating System game to have a non-Unix based system. I don&amp;#39;t think that such a switch would help Microsoft in any immediate way, and it would definitely kill compatibility and enterprise support, destroying a lot of Microsoft&amp;#39;s core business. &lt;/p&gt;
&lt;p&gt;In truth, I&amp;#39;m not trying to draw a parallel to Apple&amp;#39;s Unix switch, now almost a decade and a half behind us, but I am trying to look at the future of the computer industry as a whole. Are there any substantial benefits from having the same &amp;quot;core&amp;quot; in every major computing system? The implementations of these systems would be drastically different surely, and there would be no cross compatibility as a result, but I&amp;#39;m not sure that&amp;#39;s the point. &lt;/p&gt;
&lt;p&gt;Computers are very mature now. Their early days were filled with turmoil and garage-based teams building entire consumer computers from the ground up. This, obviously, led to an enormously diverse implementation between any major competitor and its rivals, but now &amp;quot;the world runs on Unix&amp;quot;&lt;a href='#note'&gt;*&lt;/a&gt;, or at least the non-Windows majority does. Is it time for Microsoft, and the industry as a whole to decree a common ancestor and build on that, or should Microsoft continue to develop their own system for the foreseeable future?&lt;/p&gt;
&lt;p&gt;Microsoft has spent decades building  their development environment, and indeed their entire ecosystem around their Windows OS[&amp;#39;s] and their current system is well evolved and supported, and I realize that this move, however hypothetical it may be, would destroy their decades of work and their business. I just feel that since the whole world has gone Unix, Microsoft could be on the losing side if they stay the course, it may lead them into dangerous waters.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Update:&lt;/b&gt; After some more thought, I realize that using Unix as the common ancestor of the modern computer OS does make the entire industry subscribe to the shortfalls of Unix as well, something John Siracusa would point out to anyone in depth, but it still seems to me, in my gut at least, as a positive step. It would be like an OS standard.&lt;/p&gt;
&lt;div&gt;&lt;span id='note' style='font-size:70%;'&gt;* This is a quote from Gruber on this week&amp;#39;s episode of The Talk Show. He discusses the fact that the server world and indeed most of the consumer computing market (i.e. phones, tablets, and some PCs) are running some flavor of Unix (Mac OS X, iOS, Android, Linux, etc). Microsoft holds a huge market share in the traditional PC market, but that&amp;#39;s really the only place where a non-Unix OS still hold majority stake. Linux won the server market, and iOS/Android won the mobile market. &lt;/span&gt;&lt;/div&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/microsoft-and-a-unix-based-windows</guid><pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate></item><item><title>MarkDown Syntax Feature Request: Math Syntax</title><link>http://brianschrader.com/archive/markdown-syntax-request-math-syntax/</link><description>&lt;![CDATA[&lt;p&gt;&lt;a href=\"http://daringfireball.net/projects/markdown/\"&gt;MarkDown&lt;/a&gt; provides a simple way to write in plaintext, that can easily be translated into HTML. The syntax provides support for headers, paragraphs, images, links, emphasis, and more. It really makes it easy to write content without worrying about tags or formatting. &lt;/p&gt;

&lt;p&gt;One of the most painful, and tedious things to do on a computer is enter mathematical formulas and functions. Until now, if you wanted to enter equations into a computer interface, you were forced to use MS Word's terrible equation editor, or HTML and do all of the span elements manually. MarkDown can make it easy. I believe that adding a simple extension to MarkDown will make this time-consuming and fairly arduous task a lot easier and bring mathematics into the folds of the computing era.&lt;/p&gt;

&lt;h3&gt;The Proposed Syntax&lt;/h3&gt;

&lt;p&gt;The syntax for entering an equation into MarkDown syntax you enter the equations between a curly-brace followed immediately by a colon.&lt;/p&gt;

&lt;p&gt;{: &lt;em&gt;Anything entered here is treated as an equation&lt;/em&gt; :}&lt;/p&gt;

&lt;p&gt;Even Multi-Line equations&lt;/p&gt;

&lt;p&gt;{: &lt;/p&gt;

&lt;p&gt;(2x^2) = 54&lt;/p&gt;

&lt;p&gt;x=2+34y^2&lt;/p&gt;

&lt;p&gt;:}&lt;/p&gt;

&lt;p&gt;The above equations would become:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=\"margin-left:15px;\" src=\"http://images.biteofanapple.com/blog/eq1.png\" alt=\"math equation\"/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=\"margin-left:15px;\" src=\"http://images.biteofanapple.com/blog/eq2.png\" alt=\"math equation\"/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Inside the equation delimiters (an I will call them) text and characters are treated as mathematical expressions, not as text. Examples: ^ (carats) are parsed to subscripts; x/y (forward slashes) are converted to a vertical division symbol; * (asterisks) are parsed as multiplication; etc.&lt;/p&gt;

&lt;p&gt;Special symbols like greek letters, and integrals (essential in math intensive fields) will use &lt;em&gt;&lt;a href=\"http://web.ift.uib.no/Teori/KURS/WRK/TeX/symALL.html\"&gt;TeX-like&lt;/a&gt;&lt;/em&gt; \terms. &lt;/p&gt;

&lt;p&gt;Note: Symbols like \\int (which makes an integral) will only work &lt;em&gt;inside&lt;/em&gt; the equation delimiters.  &lt;/p&gt;

&lt;p&gt;{:&lt;/p&gt;

&lt;p&gt;Y(x) = \\int:4,8\\ 2x dx&lt;/p&gt;

&lt;p&gt;:}&lt;/p&gt;

&lt;p&gt;Would become:&lt;/p&gt;

&lt;p&gt;&lt;img style=\"margin-left:15px;\" src=\"http://images.biteofanapple.com/blog/eq3.png\" alt=\"eq3\"/&gt;&lt;/p&gt;

&lt;h3&gt;The Goal is not to remake LaTeX&lt;/h3&gt;

&lt;p&gt;The goal of MarkDown is to make writing simple things easier, and to cut away distractions. It doesn't cover everything nor should it. Similarly, this MarkDown extension will not be a remake of LaTeX, it will not cover every symbol in mathematics. Instead it will be a way to easily write the most common mathematical symbols (fractions, greek letters, integrals, and functions). &lt;/p&gt;

&lt;p&gt;Note: Some &lt;a href=\"http://www.cs.tut.fi/~jkorpela/math/\"&gt;others&lt;/a&gt; have written on this subject and it seems to be a limitation in HTML that holds this idea back since HTML has no way to display a lot of elements in mathematics. This could probably be worked around by keeping the symbol library relatively small and limited to standard font characters.&lt;/p&gt;

&lt;p&gt;"  &lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/markdown-syntax-request-math-syntax</guid><pubDate>Thu, 19 Sep 2013 02:35:00 +0000</pubDate></item><item><title>PhotoStream: Apple's beautiful, convoluted dream</title><link>http://brianschrader.com/archive/photoStream-apples-beautiful-convoluted-dream/</link><description>&lt;![CDATA[&lt;p&gt;All the yearly hype before WWDC has gotten me thinking. What do we want from iOS this year? What do we want Apple to fix? There's been a lot of interesting talk about this topical ready. Marco Arment talked about it on his show &lt;a href="http://atp.fm"&gt;Accidental Tech Podcast&lt;/a&gt; and &lt;a href="http://imore.com"&gt;iMore&lt;/a&gt;has talked about the "iOS 7 Wish List" already too, but I wanted to give my take on the whole thing, specifically in regards to PhotoStream.&lt;/p&gt;
&lt;p&gt;PhotoStream has been with us now since iOS 5 (2011) and I think I'm right when I say that everyone was thrilled when they heard Steve announce the feature, but once it arrived, it kind of fell out with a lot of users. Why? Because its confusing. The consumer has a very difficult time grasping PhotoStream, and, since iOS 6, Apple confused people even more with the whole "Shared PhotoStream" thing. This whole mess has spiraled into chaos as Apple added features to a core that wasn't finished yet.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;u&gt;What's Wrong?&lt;/u&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img class="body-image-right" width="30%" src="http://images.biteofanapple.com/blog/photostream-ios6.png" title="What PhotoStream looks like now."&gt;Other than having to &lt;a href="http://www.imore.com/photo-stream-why-so-complicated"&gt;deal with iPhoto&lt;/a&gt;,(which is a whole other issue that I won't delve into)PhotoStream's main problems are in its presentation. As far as I seeit, there is nothing drastically wrong with PhotoStream internally, it's only confusing in the way that it is presented to the user.&lt;/p&gt;&lt;p&gt;The goal of PhotoStream is simple. Take a picture and PhotoStream will put that picture on all of your other devices. It's beautiful really. Majestically simplistic. If only it were presented that way. Instead, anyone opening up Photos.app on their iPhone  see's the PhotoStream tab at the bottom, and the Albums tab right next to it. This is a nightmare for most users. What is the difference between the tabs? Why are some of my pictures there and some aren't? What are Shared PhotoStreams? Why are those different from Albums? Don't both of these tabs do the same thing? This whole mess could be eliminated if the PhotoStream and Albums tabs were combined,not just in a mash up, but in a little more elegant of a way. We all know how PhotoStream looks, so I won't take any more time explaining it, let's just leave it at "confusing", and "not elegant".&lt;/p&gt;&lt;p&gt;Another great feature of PhotoStream is the "Shared PhotoStream" feature. This lets you organize your photos in "Streams" and share them with other people, or publish them to a private website. I personally love this feature and my family uses it all the time to share photos. My biggest complaint is that if I have this awesome shared stream, why do I still need the "Albums" tab? (I know that this is mostly for iTunes sync reasons, as pictures synced from iTunes go there, but there is no reason for this anymore). Shared PhotoStreams and Albums do the same thing: Organize photos! Why can't they just be on the same tab?&lt;/p&gt;&lt;h2&gt;&lt;u&gt;A Truly Elegant Solution&lt;/u&gt;&lt;/h2&gt;&lt;img class="body-image-right" width="30%" src="http://images.biteofanapple.com/blog/photostream-ios7-concept2"title="How PhotoStream could look if it was part of the Camera Roll in iOS 7. Notice the little clouds."&gt;&lt;p&gt;Let's boil PhotoStream down to its essence, what does it do? It syncs camera roll photos between devices. Ok, so why not integrate PhotoStream with the Camera Roll? Lets look at an ideal Photos experience.&lt;/p&gt;
&lt;p&gt;&lt;u&gt;&lt;b&gt;PhotoStream in iOS 7&lt;/b&gt;&lt;/u&gt;&lt;br&gt;Instead of a confusing second tab, that for some reason is out of sync with the first one,lets look at a concept like the one here. Instead of two tabs, we have the plain camera roll but with a little cloud, similar to what iTunes does with music. The pictures with a cloud are in the cloud (simple enough)! Photos would be uploaded to the cloud just like they are now and until they are fully uploaded, they would remain cloud-less. These photos would be organizable in shared photo streams and be instantly sharable with others. &lt;/p&gt;
&lt;p&gt;Also, since this is our idealized version, we changed the main tabs too! Gone are the old Photostream, and Albums tabs. Now they are combined into on beautiful Photos tab.Shared Photostreams are treated just like albums and can be shared just as they can be now. Pictures taken in the Camera Roll are uploaded to the cloud and can be organized into these streams.Gone is the old 3 different screen malarky, and in its place is one screen, one simple screenwith all the previous information bundled up nicely. Albums are PhotoStreams and PhotoStreams are Albums.&lt;/p&gt;
&lt;p&gt;&lt;img class="body-image-right" width="30%" src="http://images.biteofanapple.com/blog/photosapp-ios7-concept2"title="What the new Albums tab could look like in iOS 7."&gt;&lt;/p&gt;
&lt;h2&gt;&lt;u&gt;The Wrap Up&lt;/u&gt;&lt;/h2&gt;

&lt;p&gt;Apple announced PhotoStream in the same manor as they did iCloud, as a background service that you knew was there, but didn't have to worry about. It just worked. I think they pulled it off well in certain aspects like iCloud Backup which runs every night and you'll never need to worry about. PhotoStream was supposed to be the same way, instead though, we got an addition to the Photos app that only confused the majority of users. In our concept though, we have removed the additional tabs, and replaced it with a simple UI tweak that lets the user know whats going on without confusing them. We have eliminated the confusion between Albums and PhotoStreams, we have done what Apple prizes most; we made it simpler.

&lt;u&gt;&lt;b&gt;Update:&lt;/b&gt;&lt;/u&gt;

It looks like the ideal Photos.app experience is already present in iOS. Its part of the photo picker for 3rd party apps. Hopefully, they can expand on this to make the whole photos experience a lot smoother. &lt;/p&gt;

&lt;p&gt;&lt;small&gt;TL;DR: PhotoStream looks bad, I thought of how to fix it. Go look at the pictures to see how.&lt;/small&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/photoStream-apples-beautiful-convoluted-dream</guid><pubDate>Sun, 07 Jul 2013 02:35:00 +0000</pubDate></item><item><title>Re: Comic-Con</title><link>http://brianschrader.com/archive/re-comic-con/</link><description>&lt;![CDATA[&lt;p&gt;The now world famous convention in San Diego California is one of the largest pop culture conventions in the world, and over the years has grown far beyond expectation. As a lucky local who has been going to Comic-Con since 2005, there are a few things worth mentioning that seem to bother myself and the other repeating attendees.&lt;/p&gt;
&lt;h3&gt; Too Big for its Britches&lt;/h3&gt;

&lt;p&gt;Comic-Con is huge. This year alone the convention boasted a whopping 130,000 attendees. With that number of participants, it's clear that the San Diego Convention Center (the current home of the convention) is in no way big enough to contain such an event. In recent years the convention has been expanded to include the neighboring Hilton and Marriot hotels as well as the park next to the convention center, Petco Park baseball stadium, and the entire Gas Lamp District, but it isn't enough. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://images.biteofanapple.com/blog/comic-con-line.jpg" class="body-image-right" width="400px" alt="A view of the Convention Center from the Trolley stop."&gt;The convention center is overflowing with people. Signs are posted throughout the building to warn of where not to stand by order of the Fire Marshal. The three biggest halls (Ballroom 20, Hall H, and Indigo Ballroom in the Hilton) can't hope to fit even half of the people who line up. In order to get into a popular panel, say at 5:30pm, attendees will line up around 5am and sometimes the night before. While some people are obsessive, and over excited, the fact is that even those people may not get in. They waste their whole day in line, 12 hours of queuing, and they can't get in, it's unacceptable. While I understand that even with all the room in the world some people won?t get in, however it shouldn't be this bad.  The smaller panel rooms are filled to the brim as well, and independent panelists have a hard time getting a spot because the spots fill too quickly with corporations paying for the publicity. All the overcrowding has gotten to the point of ridiculous. &lt;/p&gt;
&lt;p&gt;Out of everything though, the exhibit hall is the hardest hit. The hall stretches from one end of the 5 block convention center to the other, and is filled with booths selling everything from video games, to clothing, from artist commissions to hentai. It's crowded even before the attendees show up, but when they do, it gets maddening. &lt;/p&gt;
&lt;p&gt;Comic-Con still wants to be a small, basement get-together, and it isn't. It has to grow.&lt;/p&gt;&lt;h3&gt;Grow with the Times&lt;/h3&gt;&lt;img src="http://images.biteofanapple.com/blog/comic-con-crowd.jpg" class="body-image-right" width="400px" alt="A view of the massive crowds at Comic-Con."&gt;The Consumer Electronics Show (C.E.S) in Las Vegas is another huge convention (just over 150,000 attendees) and it handles things differently. Unlike Comic-Con, which takes place in a specific place, the Convention Center, C.E.S. takes place in the city of Las Vegas. This is a huge change in mindset. The convention is in a multitude of hotels, exhibit halls, and convention centers throughout Las Vegas, and attendees can shuttle between them. True, this does spread the goodies out to many places but the overall idea is to increase attendance, increase safety, and decrease overcrowding (to an extent at least). This is something Comic-Con could learn a lot from.&lt;/p&gt;
&lt;p&gt;San Diego and Comic-Con are perfect for each other, but Comic-Con cannot stay confined in the convention center. It needs to expand; luckily San Diego already has places for it to expand to close by. San Diego actually has 2 convention centers! San Diego Concourse, or 'the old convention center'' as it is most commonly known, is a building just a few blocks from the heart of Comic-Con. This building, along with the Civic Theatre that sits right next door, are perfect for use as Comic-Con panel rooms. The Concourse's Golden Hall seats 4,300 people, and the Civic Theatre seats 2,900. While these numbers aren't even close to hall H at 6,100 and only ties Ballroom 20 at 4,200, the use of these two additional venues would alleviate the stress and overcrowding in the Convention Center. These venues could be perfect for medium to large sized panels that would otherwise be forced into a much smaller panel room to make up for Ballroom 20 and Hall H being booked solid.&lt;/p&gt;
&lt;p&gt;The Concourse also has additional space for exhibitor. A shuttle could move people back and forth, and with Comic-Con recently adding the Lyceum theatre to its list, the attendees would have quite a good reason to venture out away from the convention center, and into the heart of downtown. I can't imagine that the businesses and restaurants in Horton Plaza, next door to the Lyceum and the Civic, would be too inconvenienced with the thousands of potential customers that would now be walking past and through their stores.&lt;/p&gt;
&lt;h3&gt;Moving Up&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://images.biteofanapple.com/blog/SD-convention-center.jpg" class="body-image-right" width="400px" alt="A view of the preview night registration line."&gt;The convention has done this kind of expansion before. It started as a get-together in a basement, and then moved to the Grant building, then to its current home at the Convention Center, and it?s time to expand again. The Convention Center is a perfect place to have the heart of Comic-Con. Leave the Masquerade and Hall H where they are, but move other things out to another venue. There are lots of hotels nearby and the two places mentioned above are open as well. I see no reason why the city of San Diego can't embrace the convention fully and become a city of comics, movies, TV, and games. Turn the whole city into Comic-Con, and grow from there.&lt;/p&gt;
&lt;p&gt;TL;DR: Comic-Con is awesome, but overcrowded. A possible solution is presented: Expand.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/re-comic-con</guid><pubDate>Sun, 07 Jul 2013 02:35:00 +0000</pubDate></item><item><title>Writing for a website you built from scratch</title><link>http://brianschrader.com/archive/writing-for-a-website-you-built-from-scratch/</link><description>&lt;![CDATA[&lt;p&gt;Creating this site was a challenge I set for myself. As you may have seen from a previous post, I built this site from scratch using nothing but Google, the Mac OS X Terminal, and TextWrangler (For you non-techie folks, that means I wrote the code for this site by hand, without any fancy programs or plugins like Wordpress). I did it as a learning exercise, as a way to learn how websites work internally, and as a way to prove that I could do it. &lt;/p&gt;

&lt;p&gt;I had a website before this one. It was a terrible site that I won't even link to, but I had one. It isran on a free Wordpress account and I could customize it to my heart's content, but my heart wasn't content. After a few, admittedly terrible, posts, I abandoned that site and started building this one. The first build of the site was black text on a white background (completely different from now). It read, "You have reached BiteOfAnApple.com," a humble start. From there, I learned how to style things with CSS, and how to use Javascript (well, sorta). I learned all kinds of things about how the web works, and I loved every minute. These are things you just can't learn from a plugin. &lt;/p&gt;

&lt;div class="pro-tip"&gt;The one really important thing I learned from this was that basic websites are really easy to make, like really easy. HTML is so simple and CSS so elegant, that anyone can do it. The hard part is the PHP and the upkeep. If you are reading this, and you think to can't do what I did, you are very wrong. ANYONE CAN.&lt;/div&gt;

&lt;h2&gt;The Learning, Oh the Learning&lt;/h2&gt;

&lt;p&gt;The idea of building a website from scratch may sound stupid. People tell me, "There are a ton of really good website builder programs out there, why do it yourself?" Professional web developers even laughed at me, saying I was, "doing it the Old School/Hard way,"  and this is a good point. What's more, there are thousands of templates you can customize to make a site your own, but the thing is, I didn't &lt;em&gt;want&lt;/em&gt; to use them. I wanted to build it from scratch, and having done so, I wholly recommend it. I learned so much about CSS, PHP, Javascript, Python, XML, RSS, and HTML, much more than I would have learned otherwise; plus I really enjoyed doing it. The experience has given me insight into database workings, organizational schemes, and so much more that I would never had been able to grasp by reading a book, or playing with Wordpress. Sometimes you have to build it, and break yourself, in order to understand it, and know how to fix it.&lt;/p&gt;

&lt;p&gt;The one thing you will learn, over almost anything else, is that "past-you" was an idiot. You will spend more time cleaning up mistakes you made the day before when you didn't know some crucial bit of information. From personal experience, I can say that I have rewritten the backend of this site more times than I care to think about, but every time making it faster, easier, and more efficient for the computer and for me. &lt;/p&gt;

&lt;p&gt;ProTip: Learn how to use "PHP Includes". It makes life so much better. &lt;/p&gt;

&lt;p&gt;All of this was a learning experience. All of this taught me to think through what I was going to do before doing it. All of this taught me to be patient, and attentive. In the end, it was all for the better.&lt;/p&gt;

&lt;h2&gt;The Problem&lt;/h2&gt;

&lt;p&gt;The thing is, and please read this part before starting up Notepad/TextEdit and doing what I did, I recommend this practice only for test websites, as a learning tool. As I am very quickly finding that keeping this website working properly across all browsers, and keeping it updated manually is quite a pain. Every additional blog post makes it exponentially harder to keep everything working properly. PHP scripts have made the upkeep easier, but there is only so much they can help. At the end of the day, Im still updating XML files manually and FTP-ing into the server to post anything.Now granted, I am working on a CMS (Content Management System) to do most of that for me, but it's not easy (mostly because I have to write the CMS myself). The bottom line for this kind of exercise is: If you do it yourself, you have to be willing to do it ALL yourself. If you want a new feature, you have to make it. This being said, I love the complete customization control that I have. I can change anything anytime, and at levels Wordpress users can only dream of. That being said, I have a lot of days when I go to my site on a friend's computer (or more recently my work computer) and see that the site is broken beyond recognition simply because they use a different browser. I then have to go home, download that browser, or browser version, and figure out why its not working. This is extraordinarily time consuming, and I spend more time fixing the CSS than writing articles, but I do not have a single thing I didn't fix where I didn't learn something. &lt;/p&gt;

&lt;h2&gt;The Takeaway&lt;/h2&gt;

&lt;p&gt;I guess the message is, if you are interested in learning how the web works, what makes a website, or you are just absolutely crazy and have a lot of time to waste, then open up Notepad, TextWrangler, or TextEdit, go to Stack Overflow and get working. I promise you'll learn so much after just a few days with it. You may want to stab yourself after the first few hours, but thats expected behavior. Get past that, and a sea of knowledge is in your hands. You'll appreciate the websites you go to a lot more, and you'll be a better person in the end. Just remember, please don't use that site as your main site, there exist professional tools for a reason (I speak from experience). &lt;/p&gt;

&lt;p&gt;For now, this site will continue to be 100% hand made. Its too much work now for me to migrate over to something else, and I'm almost over the last big hump (the CMS). If you do choose to build a site yourself, feel free to reach out for help. Stack Overflow is your closest friend, let me tell you that. I'm also available for questions on my &lt;a href="http://brian.biteofanapple.com"&gt;about page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Check it out, whether you succeed or not, it'll be an experience you'll not soon forget (for better or worse), and who knows, you might like it.&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/writing-for-a-website-you-built-from-scratch</guid><pubDate>Sun, 07 Jul 2013 02:35:00 +0000</pubDate></item><item><title>A Very Special Sweater</title><link>http://brianschrader.com/archive/a-very-special-sweater/</link><description>&lt;![CDATA[&lt;p&gt;&lt;center&gt;&lt;p&gt;There once was a tree, just an ordinary tree, &lt;br&gt;An ordinary tree with a dream, &lt;br&gt;To be the tallest tree on the hillside, &lt;br&gt;It loved the coastal breeze, &lt;br&gt;And to stretch out its leaves, &lt;br&gt;And it loved all the birds that called it home. &lt;br&gt;&lt;br&gt;One day the winds came howling, roaring, goring and growling,&lt;br&gt;They caught the tree off guard, &lt;br&gt;And waived it back and forth, &lt;br&gt;Its roots could hold no more, &lt;br&gt;And down it went,&lt;br&gt;&lt;br&gt;And so the tree laid there, sad and frozen stiff, &lt;br&gt;Until a smart young student came about, &lt;br&gt;She saw the poor tree shivering, &lt;br&gt;She knew the tree was cold and all alone. &lt;br&gt;&lt;br&gt;She gave the tree a present, &lt;br&gt;To keep it warm and cheery, &lt;br&gt;And now the tree is happy once again. &lt;br&gt;&lt;br&gt;So if you see a tree, sad and all alone, &lt;br&gt;Why not knit it a cozy little sweater. &lt;br&gt;It would make the tree so happy, &lt;br&gt;And it will make you happy too, &lt;br&gt;And it will give passers-by a laugh. &lt;br&gt;&lt;br&gt;&lt;a href=\\"http://images.biteofanapple.com/blog/tree-with-sweater.jpg\\"&gt;&lt;img class=\\"body-image-center\\" src=\\"http://images.biteofanapple.com/blog/tree-with-sweater.jpg\\" style=\\"width:60%;\\"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;Cheers to you: fallen-tree-sweater-knitter. &lt;/center&gt;&lt;/p&gt;]]&gt;</description><guid isPermaLink="true">http://brianschrader.com/archive/a-very-special-sweater</guid><pubDate>Wed, 12 Dec 2012 02:35:00 +0000</pubDate></item></channel></rss>
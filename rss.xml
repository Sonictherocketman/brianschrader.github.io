<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0"><channel><title>BiteofanApple</title><link>http://brianschrader.com</link><description>Thoughts, and ramblings about technology, programming, history,
 and whatever else I'm interested in.</description><language>en-US</language><image><url>https://www.gravatar.com/avatar/11b074a636e00292c98e3e60f7e16595</url><title>Brian Schrader</title><link>http://brianschrader.com</link></image><lastBuildDate>Fri, 10 Mar 2023 03:48:26 +0000</lastBuildDate><generator>sonicrocketman-feed-generator/v2.0</generator><atom:link href="https://brianschrader.com/rss.xml" rel="self" type="application/rss+xml"/><category>programming</category><category>history</category><category>science</category><category>personal</category><category>technology</category><item><guid isPermaLink="true">http://brianschrader.com/archive/a-cross-post-life</guid><pubDate>Fri, 10 Mar 2023 03:47:00 -0800</pubDate><category>software</category><category>programming</category><title>A Cross Post Life</title><link>http://brianschrader.com/archive/a-cross-post-life/</link><description><![CDATA[<p>I use <a href="https://pine.blog/">Pine.blog</a> for microblogging, and following the Post Once Sindicate Elsewhere strategy, I like to have those updates automatically cross-posted to other platforms like <a href="https://micro.blog/sonicrocketman">Micro.Blog</a> and <a href="http://twitter.com/sonicrocketman">Twitter</a> so that they gain a larger audience, and so that anyone who wants to can follow me no matter which platform or software they prefer.</p>
<p>Obviously I'm not manually posting to five different sites&mdash;that's what computers are for&mdash;and so I need some way to automate that work. Micro.blog makes most of that very easy since it can automatically ingest content from an RSS feed and not only add it to my microblog there, but also cross-post it to Twitter. That only leaves Mastodon out in the cold.</p>
<p>In recent months there's been a lot of <a href="/archive/on-the-web-the-best-outcome-is-email/">new activity</a> on Mastodon and I've really enjoyed seeing a larger segment of people discover such a great open-web focused tool. It was well past time that I add Mastodon to my cross-posting workflow, but there was a problem: Mastodon's posts are text only (with links at the bottom&mdash;like Twitter), but Pine.blog outputs HTML (or Markdown). I tried several tools, but each one would mangle my posts or just include the raw HTML as the text, neither of which was an acceptable solution. I needed something custom.</p>
<p>So I <a href="https://gist.github.com/Sonictherocketman/7951ec710b7be1f675e2e95cbcc5220e">wrote a script</a>! It runs every few minutes on the Raspberry Pi under my desk checking for new posts from Pine.blog and posting them to Mastodon. It starts with the raw Markdown, parses the HTML, strips and appends links, and even keeps track of what has and hasn't been posted before. It's a pretty handy script and I encourage you to check it out if you need something like it. I even made use of one of Mastodon's very handy features: <code>Idepotency-Key</code> which helps prevent duplicate entries from being posted in a short period of time.</p>
<p>As of today my posts are now <a href="https://micro.blog/sonicrocketman">Live On Mastodon</a>, so you can rest assured that if you follow me there you aren't missing a beat. You'll get all... <strong>five posts</strong> I've made this year!</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/automate-the-boring-stuff-with-chatgpt</guid><pubDate>Thu, 16 Feb 2023 22:49:00 -0800</pubDate><category>programming</category><category>software</category><title>Automate the Boring Stuff with ChatGPT</title><link>http://brianschrader.com/archive/automate-the-boring-stuff-with-chatgpt/</link><description><![CDATA[<p>There's been a lot of buzz around ChatGPT lately and most recently the discussion followed <a href="https://www.youtube.com/watch?v=jPhJbKBuNnA">Tom Scott's video</a> in which he describes how he was able to use ChatGPT to generate working code to solve a problem&mdash;including asking it to fix several bugs with its own implementation&mdash;and then write an ad spot for him.</p>
<p>In the video Tom expresses his disquiet with the ongoing advances in machine learning and goes so far as to predict that "everything is about to change" in the same way "everything changed" once smartphones came along in the mid-aughts.</p>
<p>I've enjoyed using text-to-image AIs like <a href="https://www.midjourney.com/app/">Midjourney</a> for a while now, but I'd largely stayed clear of things like ChatGPT. Tom's video though got me curious, and so I logged on to see what all the fuss was about.</p>
<p>tl;dr I was pleasantly surprised.</p>
<h3>Introducing DeveloperGPT</h3>
<p>There are so many things that developers do day-to-day that are at the same time important and dreadfully dull, and like many devs I find myself searching for ways to both save time and automate away as much menial work as I can. It's one of the <a href="/archive/take-a-break-script-something/">reasons I love Bash so much</a>. And while at some companies such work is often pawned off to junior developers in need of experience, as a one-man shop I have definite use for a sort of algorithmic junior developer who could take on some of that less-engaging work. And after watching Tom's video I started to hope that perhaps ChatGPT could be exactly that.</p>
<p>In order to see if ChatGPT could fill this role, I did what anyone looking to hire a junior developer would do: I gave it an interview.</p>
<h3>Giving ChatGPT a Coding Interview</h3>
<p>In total I gave ChatGPT five questions to answer. These questions were almost entirely development related and spanned the range of what I'd expect a junior developer to be able to do given time and access to the internet.</p>
<details><summary>Test 1: Django Unit Tests: ✅</summary>

<h5>Prompt</h5>
<p>write for me 4 python django unit test cases that each make a request to /api/users to do the following: create a user record, fetch a user record, delete a user record, and update a user record. Make sure to include partial update using the PATCH method. And be sure to use Python 3.10 compatible code.</p>

<h5>Response</h5>
<p>Sure, here are 4 Python Django unit test cases that cover the create, fetch, delete, and update functionality of the /api/users endpoint. These test cases assume that you have a Django application with a User model and a corresponding API viewset that handles CRUD operations for users.</p>

<code class="python"><pre>
from django.urls import reverse
from rest_framework.test import APITestCase
from rest_framework import status
from .models import User

class UserTests(APITestCase):
    def test_create_user(self):
        """
        Ensure we can create a new user object.
        """
        url = reverse('user-list')
        data = {'username': 'testuser', 'email': 'test@example.com'}
        response = self.client.post(url, data, format='json')
        self.assertEqual(response.status_code, status.HTTP_201_CREATED)
        self.assertEqual(User.objects.count(), 1)
        self.assertEqual(User.objects.get().username, 'testuser')

        # ... (mine: omitted for brevity) ...</pre></code>

<a href="https://gist.github.com/Sonictherocketman/dd7c06c3792a55cba420324bab365b19">Complete Generated Source Code&#8594;</a>

<p>These test cases cover the basic functionality of the /api/users endpoint and ensure that users can be created, fetched, updated, and deleted. They also cover partial updates using the PATCH method. Note that you will need to update the URLs used in the reverse() function to match the actual URLs for your application.</p>
</details>

<p>The first test I gave ChatGPT was simply to write a suite of unit tests to verify that a Django User REST API allowed for standard CRUD operations. In general it did very well, even including a test for partial updates via the PATCH method, but it did assume I also wanted it to use Django REST Framework and its implementation of the PUT and POST tests don't include all the correct values. The assumption to use DRF is a fair one, but the other mistake is a red flag.</p>
<p>Still though it would have saved me from writing the bulk of the code&mdash;assuming it works. I didn't actually test the code.</p>
<details><summary>Test 2: S3 File Clean Up: ✅</summary>

<h5>Prompt</h5>
<p>write for me a python function that pulls data from a CSV file containing files that need to be deleted from S3 and that then deletes each file. Include error handling if a file cannot be deleted and return a list of all files that were and were not deleted. Also include suite of three test cases that ensure the function works, that errors are caught, and that the return value is two lists.
</p>

<h5>Response</h5>
<p>As an AI language model, I don't have the capability to access files from your computer. However, I can provide you with a sample code that demonstrates how to delete files from S3 using the Boto3 library in Python.</p>

<code class="python"><pre>
    import boto3
    import csv

    def delete_files_from_s3(file_path):
        # Initialize S3 client
        s3 = boto3.client('s3')

        # Read the CSV file containing file names
        with open(file_path, 'r') as f:
            reader = csv.reader(f)
            files = list(reader)

        # Delete each file from S3
        deleted_files = []
        failed_files = []
        for file in files:
            try:
                s3.delete_object(Bucket='your-bucket-name', Key=file[0])
                deleted_files.append(file[0])
            except Exception as e:
                failed_files.append(file[0])
                print(f"Failed to delete {file[0]}: {e}")

        # Return the list of deleted and failed files
        return deleted_files, failed_files
</pre></code>

<p>The function takes the path of the CSV file containing file names as input. It reads the file using the csv module and deletes each file from S3 using the delete_object method of the Boto3 client. If a file cannot be deleted, it is added to the list of failed files and an error message is printed. The function returns two lists, one containing the names of deleted files and the other containing the names of failed files.</p>

<p>Here are three test cases to ensure that the function works correctly:</p>

<code class="python"><pre>
    # Test case 1: All files are deleted successfully
    deleted_files, failed_files = delete_files_from_s3('file_list.csv')
    assert len(deleted_files) == 5
    assert len(failed_files) == 0

    # Test case 2: Some files cannot be deleted
    deleted_files, failed_files = delete_files_from_s3('file_list_with_errors.csv')
    assert len(deleted_files) == 3
    assert len(failed_files) == 2

    # Test case 3: CSV file does not exist
    deleted_files, failed_files = delete_files_from_s3('nonexistent_file.csv')
    assert len(deleted_files) == 0
    assert len(failed_files) == 0</pre></code>

<p>In the first test case, all files are deleted successfully and the function should return a list of 5 deleted files and an empty list of failed files. In the second test case, some files cannot be deleted and the function should return a list of 3 deleted files and a list of 2 failed files. In the third test case, the CSV file does not exist and the function should return empty lists for deleted and failed files.</p>
</details>

<p>The second test involved writing a simple Python function to clean up stray files in S3 using a list provided by a CSV file. ChatGPT scored pretty well here. It included the asked-for error handling and API interface, but its tests are not correct. The third test especially would crash when the file was opened, but the script does not account for that.</p>
<p>Once again I didn't run the code, but assuming the use of boto3 is anywhere close to the actual API, it was faster to have ChatGPT write the code than for me to do it.</p>
<details><summary>Test 3: Two-Column Layout in React: ✅</summary>

<h5>Prompt</h5>
<p>write for me a JSX file using React that displays a two column layout with a list of appointments in the left column and the appointment details on the right columns. Use the react-bootstrap library for styling and no other libraries. Assume the list of appointments are passed into the component as props.</p>

<h5>Response</h5>
<p>Sure, here's an example of a JSX file using React that displays a two-column layout with a list of appointments on the left column and the appointment details on the right column, using the react-bootstrap library for styling:</p>

<code class="js"><pre>
import React from 'react';
import { Container, Row, Col, ListGroup, Card } from 'react-bootstrap';
    function AppointmentList({ appointments }) {
      return (
        &lt;Container&gt;
          &lt;Row&gt;
            &lt;Col sm={4}&gt;
              &lt;ListGroup&gt;
                {appointments.map((appointment) =&gt; (
                  &lt;ListGroup.Item key={appointment.id}&gt;
                    {appointment.title}
                  &lt;/ListGroup.Item&gt;
                ))}
              &lt;/ListGroup&gt;
            &lt;/Col&gt;
            &lt;Col sm={8}&gt;
              &lt;Card&gt;
                &lt;Card.Body&gt;
                  &lt;Card.Title&gt;Appointment Details&lt;/Card.Title&gt;
                  &lt;Card.Subtitle className=&quot;mb-2 text-muted&quot;&gt;Title&lt;/Card.Subtitle&gt;
                  &lt;Card.Text&gt;
                    Lorem ipsum dolor sit ...
                  &lt;/Card.Text&gt;
                  &lt;Card.Subtitle className=&quot;mb-2 text-muted&quot;&gt;Date&lt;/Card.Subtitle&gt;
                  &lt;Card.Text&gt;
                    January 1, 2023
                  &lt;/Card.Text&gt;
                  &lt;Card.Subtitle className=&quot;mb-2 text-muted&quot;&gt;Location&lt;/Card.Subtitle&gt;
                  &lt;Card.Text&gt;
                    123 Main St, Anytown USA
                  &lt;/Card.Text&gt;
                &lt;/Card.Body&gt;
              &lt;/Card&gt;
            &lt;/Col&gt;
          &lt;/Row&gt;
        &lt;/Container&gt;
      );
    }

    export default AppointmentList;</pre></code>

<p>Here, the AppointmentList component takes in a prop called appointments, which is an array of appointment objects. The left column displays the list of appointments using the ListGroup component from react-bootstrap, and the right column displays the appointment details using the Card component. You can customize the appearance of the list and the details as desired by modifying the styling properties of the components.</p>
</details>

<p>This test surprised me. I had ChatGPT create a two column layout in React for an appointment management application. Explaining a complex UI in words is difficult without visual aids, so I expected some misunderstandings, but it powered through and did exactly what I asked. It failed to add any navigation to the app nor did it use the data inside of the appointments array, so it's not really usable as a component, but it's certainly a good starting point and one I'd be happy to use as a starting template should I ever need such a thing.</p>
<p>That said, without tooling to make ChatGPT more available during development it would be easier to just write the layout myself.</p>
<details><summary>Test 4: RSS Parsing in Swift: ✅</summary>

<h5>Prompt</h5>
<p>write for me a Swift RSS feed parser that takes in a string of XML data and produces a Post object with a title, description, pubdate, and enclosure fields. Use only the swift standard library</p>

<h5>Response</h5>
<p>Sure, here's an example Swift RSS feed parser that uses the Swift standard library to parse a string of XML data and produce a Post object with a title, description, pubdate, and enclosure fields:</p>

<a href="https://gist.github.com/Sonictherocketman/dd7c06c3792a55cba420324bab365b19">Check out the code here. It's very long.</a>
</details>

<p>This last test was by far the most involved and open-ended. I asked ChatGPT for a Swift-based RSS Feed Parser and it certainly gave me something close. It used the correct Foundation APIs and even understood the need to concatenate the element text, but it failed to generate a valid test fixture (or even valid XML) and there's absolutely no error handling to speak of.</p>
<p>That said, it did produce valid XML once I called it out and there's something to be said for such humility. I would certainly use this code as a starting point if I needed to build something like this in the near future.</p>
<h3>Should I Hire ChatGPT?</h3>
<p>In general I'd say it performed fairly well as a developer, though its ability to imitate bloggers is very lacking. For the fifth test I tried to have it write this post, but the output didn't sound like me at all and it kept trying to sell itself using features it doesn't have. Overall I'd give ChatGPT a tentative recommendation and would probably hire it contingent of course on a 30-day probationary period to see if it can keep its tendency toward exaggeration in check.</p>
<h3>It's Not an AI Apocalypse, It's Better</h3>
<p>I don't really buy the idea that ChatGPT and its ilk will do much to disrupt our everyday lives in a dramatic way. I do however see both it and it's text-to-image cousins as being more and more useful as tools to automate away so much of the boring or tedious work of being a developer or a person on the internet in general.</p>
<p>Like I said, I already use Midjourney to create images for my D&amp;D campaign and those images have had a significant impact in improving the gaming experience. We were never going to contract an artist for four once-a-week landscapes and so economically speaking the AI has had no external effect. Our D&amp;D games just got marginally better. And that's great!</p>
<p>ChatGPT seems to me like it could be yet another advantage that enterprising developers would use to enhance their own productivity. If something like ChatGPT ever shipped inside of an IDE like Xcode, I could imagine a whole suite of amazing features (automatic complex refactors, automating test writing, and more). GitHub's Copilot does some of this, but it's in its infancy. In general I'd expect to see tools like ChatGPT improve a developer's productivity and let us focus more on the design and nuances of our code rather than on the tedious implementation; and for that I am <em>very</em> excited.</p>
<!-- Begin Syntax Stylesheet -->
<p><link rel="stylesheet" href="/bin/highlight.default.min.css"></p>
<script src="/bin/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/my-favorite-books-from-2022</guid><pubDate>Sun, 05 Feb 2023 01:35:00 -0800</pubDate><category>book</category><category>books</category><category>book recommendations</category><category>book review</category><title>My Favorite Books from 2022</title><link>http://brianschrader.com/archive/my-favorite-books-from-2022/</link><description><![CDATA[<p>As I've <a href="/archive/reading-milestones-attention-spans-and-cool-charts/">mentioned before</a>, 2022 was a watershed year for my reading capacity, and while it is probably a little late in the new year for a retrospective post, I did want to take some time and expressly call out, and recommend, a few of the books I read last year.</p>
<p>In no particular order, my favorite books last year were:</p>
<h3>Never the Wind, Francesco Dimitri</h3>
<p><a href="https://www.indiebound.org/book/9781789099812">This book</a> was an absolute joy to read. It's a coming-of-age, ghost story set in nineties Italy, and it is just so well written and charming that I found myself spellbound by every page. Give this one a go if you're in the mood for some excellent fiction.</p>
<h3>What Diplomats Do, Brian Sir Barder</h3>
<p><a href="https://www.indiebound.org/book/9781442271630">This one</a> I read for a yet-unannounced project I'm working on, and while I was hoping the book would be useful to me, I was not prepared for just how much fun it would be to work through. The author, a former U.K. Diplomat, spends as much time explaining the intricacies of overseas diplomacy as he does fictionalizing his time abroad and telling simply incredible stories about how and why certain diplomatic agreements were reached.</p>
<h3>A Farewell to Arms, Earnest Hemingway</h3>
<p>I read a lot of Hemingway last year, and <a href="https://www.indiebound.org/book/9781476764528">this one</a> was my favorite. A classic for a reason, and an excellent read. I did also like <a href="https://www.indiebound.org/book/9780743297332">The Sun Also Rises</a>.</p>
<h3>The Matter of the Gods, Clifford Ando</h3>
<p><a href="https://www.indiebound.org/book/9780520259867">This one</a>, I'll admit, was a bit tough to get through. It's a treatise on Roman Religion, but it is written by and for historians and classical theologians. I picked this up after scouring the citations for one of <a href="https://acoup.blog">my favorite blogs</a>, and while the book assumes you've already read the ancient classics, and the medieval christian rebuttals to those texts, (which I have not) it was still an interesting read. Ancient mysticism is <a href="/archive/history-myth-and-talking-cows/">fascinating to me</a>, and if the topic sounds enticing to you then I'd recommend skimming through this one. A deep read might be a bit too intense.</p>
<h3>Existential Physics, Sabine Hossenfelder</h3>
<p><a href="https://www.youtube.com/@SabineHossenfelder">Sabine</a> is one of my favorite YouTubers, and <a href="https://www.indiebound.org/book/9781984879455">her book</a> is basically just more of the same. The book is a fun romp through many different parts of Theoretical Physics and both acts as a guide to what modern science can, and cannot, hope to explain. It's a good reminder, from the perspective of a physicist, that while science has given us the modern world, it cannot ever hope to solve some very important questions.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/a-very-special-anniversary</guid><pubDate>Tue, 13 Dec 2022 04:35:00 -0800</pubDate><category>meta</category><title>A Very Special Anniversary</title><link>http://brianschrader.com/archive/a-very-special-anniversary/</link><description><![CDATA[<p>Today marks the 10 year anniversary of the first post on this blog. It's been a wild ride writing for here, and I never would have predicted that after all this time I'd still be doing this.</p>
<p>For posterity, <a href="https://web.archive.org/web/20140715043702/http://brianschrader.com/">here</a> are a <a href="https://web.archive.org/web/20170915170554/https://brianschrader.com/">few links</a> that show how the site itself has evolved over the intervening years, though the site itself isn't really the most important thing to celebrate today.</p>
<p>Really today is special because it gives me the time to reflect on what writing for this blog has taught me. Since writing the first version of this blog I went from being a college student interested in programming to being a professional and independent software developer. In many ways I have achieved what I set out to do all those years ago, though of course not in the way I originally envisioned.</p>
<p>Blogging has been a truly transformational hobby for me. Like many people, I write to think. The process of making something &mdash;writing in this case&mdash; helps me solidify my own opinion on a topic and putting my thoughts to words helps me consolidate and organize them in a way that no other way does.</p>
<p>This blog has also served as an unofficial resumé for me on several different occasions. I often tell people who are just starting out to set up a blog themselves. You don't have to build your own; you can just use Wordpress. But having a public presence filled with your own complex thoughts on a number of topics helps prospective employers understand your inner machinations. It shows them that you know how to think just like a resumé would. My blog and public Github projects have gotten me just as far (if not further) than an actual resumé.</p>
<p>More than that though, blogging here has given me a chance to get my thoughts out into the world. I'm incredibly fortunate that my writing is occasionally interesting to others and that <a href="/archive/why-all-my-servers-have-an-8gb-empty-file/">a handful</a> of <a href="/archive/python-35-and-multitasking/">my posts</a> have <a href="/archive/youtube-has-apparently-reinstated-rss-feeds/">gone</a> micro-viral <a href="/archive/on-the-web-the-best-outcome-is-email/">thanks to</a> sites like Hacker News. To everyone who clicked on one of my posts: thank you. To all of you who actually read the post: thanks even more.</p>
<p>The internet continues to be a force we barely understand, but here I've gotten the chance to experiment, try things, fail, and get back up again. And I've tried to bring you all along with me as I've found out the answers to all sorts of questions.</p>
<p>Thank you all for reading, and here's to another ten years.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/on-the-web-the-best-outcome-is-email</guid><pubDate>Fri, 02 Dec 2022 01:56:00 -0800</pubDate><category>open web</category><category>mastodon</category><title>On the Web, the Best Outcome is Email</title><link>http://brianschrader.com/archive/on-the-web-the-best-outcome-is-email/</link><description><![CDATA[<p>Like many out there, I've been thinking a lot lately about the Open Web. As many readers are no doubt aware, the chaos at Twitter lately has driven a lot of people off the platform and onto more fledgling alternatives. Mastodon in particular has seen huge spikes in growth recently and I doubt that growth will slow until either the platform succumbs to the load or the chaos at Twitter ends and users return to the platform.</p>
<div class="image-right" style="max-width:350px;">
<a
    href="https://datasci.social/@estebanmoro/109429814361434072">
    <img
        alt="A chart of Mastodon's recent user growth with large spikes around significant Twitter changes"
        src="/images/blog/moro-chart.png"
    />
</a>
<center><small>Image credit to <a href="https://datasci.social/@estebanmoro/109429814361434072">Esteban Moro</a></small></center>
</div>

<p>While these recent developments have been great for Mastodon as a platform, only time will tell if the <a href="https://en.wikipedia.org/wiki/Fediverse">Fediverse at-large</a> will rise to the occasion. There's been a lot of talk about Mastodon.social the website, but the real story is the sudden surge in usage of the underlying ActivityPub federation protocol that powers it. Very briefly, ActivityPub is a protocol that allows for disparate social media sites to talk to each other, sharing likes, posts, follows, and other social media interactions. Widespread adoption of such a standard on the Web would make it possible to finally break the tyranny of the <a href="https://en.wikipedia.org/wiki/Network_effect">Network Effect</a> and allow for a wide swath of new Social Networks to emerge. These new networks would be free of the burden to attract a "critical mass" of users to remain viable as every user would be able to communicate and interact with users of any other ActivityPub-capable social platform.</p>
<p>The hurdle that Mastodon &mdash;and the swath of other ActivityPub sites like it&mdash; must overcome is that they all collectively must reach a critical mass in order to become viable in today's siloed social media landscape. In order to free us from critical mass, Mastodon must attain it.</p>
<p>The fog of current events leave many questions so far unanswered, and only time will tell what path we choose to follow, but for now it is not known whether or not Mastodon will ever reach this critical point and become a sizable player in the social media space. Tumblr's plans to <a href="https://techcrunch.com/2022/11/21/tumblr-to-add-support-for-activitypub-the-social-protocol-powering-mastodon-and-other-apps/">enable ActivityPub support</a> will certainly help the broader Fediverse grow, but I doubt it will be enough on its own to push the project over the edge and into relevancy with the general public, but only time will tell.</p>
<h2>Sailing Rough Seas</h2>
<p>I've been a <a href="/tags#tag-open%20web">vocal supporter of the Open Web</a> for over a decade, but as anyone with a strongly-held and niche belief knows, it can be exhausting to see the world march on impartial to your goals. At my worst, I've grown rather jaded about the possibility of a truly Open Social Web. Like I'm sure many dentists, if given the chance, would choose to wave a magic wand and force all of us to floss our teeth more, I would &mdash;if I could&mdash; force social media sites to interoperate using a freely open standard, but that's just not how the world works.</p>
<p>For years, I've thought the momentum had settled and that we would &mdash;given no other outside forces&mdash; be on a path to ever-increasing centralization on the Web, both on and off social media. There are of course many technical solutions to centralization, but I'll admit that I believe the forces of power, control, and profits too strong a wind for the little boat of federation to sail. The only other boats to make the journey set out long ago: both web browsers and email were products of another era on the Internet and I doubt they could come up in this one.</p>
<p>I now hold that the most likely path to achieving a truly interoperable Open Web is through government regulation. I've <a href="/archive/house-judiciary-committee-recommends-interoperable-social-media/">written before</a> about how Congress is mulling over the idea of mandating Social Media interoperability and I support that effort, but regulation is a difficult stick to wield. The backbones of the modern Web: the web browser and email provider, didn't need laws to force them into interoperability. They were designed as such from the start, and that still is the best way for a technology to progress. Like the situation with <a href="https://en.wikipedia.org/wiki/Communications_Act_of_1934">phone networks last century</a>, regulation might be the only force powerful enough to push a Social Web forward. I still hope that social media follows a similar path and that we all hold hands and merrily walk into the sunset of a federated world, but I believe that things are likely too far gone; that it never can or will happen like that again.</p>
<p>I have grown fairly confident in this belief, and like any belief too strongly-held it blinded me to what happened next.</p>
<h2>An Impetus of Change</h2>
<p>Elon Musk's chaotic and seemingly-inept takeover of Twitter shocked many people into giving up on the platform. Thousands upon thousands fled to whatever refuge they could find. Mastodon was an obvious choice for techies to flock to, but its Mastodon's growing segment of less technical users that interests me. Perhaps this new flood of growth holds &mdash;and assuming the platform in general and <a href="https://mastodon.social">mastodon.social</a> in particular can withstand it&mdash; there exists a real possibility that the platform gains critical mass and enters public awareness. It may already be arriving there. The San Diego Union Tribune ran a story last sunday (in print) aiming to help elderly users navigate the migration to Mastodon. That was something I certainly hadn't seen coming.</p>
<p>I'll say this: if the trend holds and Mastodon does continue growing, and if it does gain a foothold as a small but nevertheless notable social platform it would mean that Elon fumbled his way into giving the Open Web the single biggest gift it has received in a decade and certainly the most unintentional one. It would be a poetically ironic moment indeed.</p>
<p>Again though, I'll admit that I am skeptical such a trend will hold. Social media platforms come and go and small ones rarely stick around very long. Mastodon will of course still exist &mdash;the Fediverse cannot be killed&mdash; but falling out of public consciousness would be a de facto death.</p>
<h2>A Sobering Reality</h2>
<p>Whether the crazed antics of one man can disrupt the seemingly natural flow of centralization on the Web is doubtful, and I still believe that is more likely than not that regulation will be required to force social media companies to interoperate. What's more, it isn't clear that such regulation could or would come to be in the United States. It might; it might not. The future, as always, remains unclear.</p>
<p>That said, Mastodon (and ActivityPub more broadly) have the potential to remake social networking on the Web in a magnitude that I don't think many fully realize. Indeed some do realize it, but they are often gripped by a naïve optimism I simply cannot share: a blue-sky fantasy that could never come to pass. The broader narrative though seems to take the opposite view: that even if Mastodon (and the Fediverse) were to become relevant, that it simply wouldn't matter very much. They argue that federation and decentralization simply cannot compete with monied interests and that over time the Open Web would re-centralize into one or two big players. Indeed I find myself sympathetic to this view, even though I don't like its conclusions.</p>
<p>I, however, would like to offer a third option for the future of the Social Web: one that is both radically transformative and yet utterly boring at the same time.</p>
<h2>What If It's All Just Email, Man?</h2>
<p>I love email. I genuinely do. I love it in a way that often raises eyebrows among nearly everyone I encounter, even my fellow techie-types. Why do I love email? Because it, like the Web itself has remained true to the promise of the Internet even after it made unavoidable contact with the real world. Let me explain:</p>
<p>Email, like the Web itself, is a federated system. No one controls the whole thing and while there are a few <em>very</em> large players in the Email space, none of them has the ability to direct its evolution outright. Gmail is huge and partially non-standard, but the system still works. Since its inception, anyone with an email address has been able to email anyone else so long as they know or can guess the email address they want to reach. It's not a perfect system, no (see: spam, blocklisting, etc) but it's damn good and email has utterly transformed how the world does business and it has democratized communication more than almost any other Internet technology to date.</p>
<p>What's more, barring some technical hurdles, anyone with some funding can start an email hosting company. And while it's not practical for single individuals to run their own email server today, it is technically possible and many people indeed do just that. Every year <a href="https://www.hey.com">new Email apps and services emerge</a> while others die. The ecosystem is dynamic, healthy, and growing with every new entrant to the Internet. The standard is open, widely available, and &mdash;unlike social media accounts&mdash; truly universal. Nearly everyone on the Internet has an email address, and that seems set to be true for decades to come.</p>
<p>We need no better signifier of Email's complete and utter domination today than the simple fact that email clients come installed on almost every operating system known to man. That's only possible because of its decentralized, universal, and long-lived history. I long for the day that an ActivityPub-powered "Social" app ships with macOS and Windows like Mail does today.</p>
<div class="image-center"><center>
<a
    href="https://datasci.social/@estebanmoro/109429814361434072">
    <img
        alt="A truly federated macOS dock"
        src="/images/blog/federated-dock.png"
    />
</a>
<small>When a mail-like "Social.app" ships on macOS, we will have won.</small></center>
</div>

<p>Now, most people I talk to about this tell me they hate their email. It's a spam and junk-filled box full of nothing but coupons, ads, and check-ins from their boss. And I agree. It is just that. Indeed one of the problems with decentralized and federated technologies is exactly that: they're filled with spam, junk, and mixed uses. But that mundanity is the true magic.</p>
<p>Email has so throughly engrained itself in the modern world that we've stopped seeing any of the good it has brought and only the bad; a truer mark of success there isn't (see: liberal democracy, the post office, web browsers, the phone network, etc).</p>
<p>Should federated social media succeed: whether by natural growth, by chaos at Twitter, or by eventual regulation, its ultimate fate can and should be the fate of email. If somehow social media is largely run by enormous companies  surrounded by a large collection of smaller providers all talking to each other over the same interoperable, open protocol then the Open Web will have won. Of course this won't be a win for those who imagine a truly decentralized Internet devoid of large actors, but it will be a success as judged by the best examples the Internet has so far given us.</p>
<p>The Social Web of the future isn't complete decentralization or a network of innumerable federated micro-instances. It isn't a Web powered by anonymous cryptocurrencies. It may yet be the Web we have now, should regulatory attempts fail and natural forces be insurmountable. But if things go right and the stars align the Social Web could become like Email, and that would be transformationally mundane.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/a-drawing-every-day</guid><pubDate>Sat, 19 Nov 2022 21:17:00 -0800</pubDate><category>fun</category><category>programming</category><title>A Drawing Every Day!</title><link>http://brianschrader.com/archive/a-drawing-every-day/</link><description><![CDATA[<p><a href="/archive/drawing-of-the-day"><img
    alt="Today's Drawing of the Day. Yes it is live"
    src="https://home.brianschrader.com/drawing-of-the-day/latest.png"
    style="max-height: 300px; border-radius: 4px;"
    class="image-right"
/></a></p>
<p>I love to just mess around with computers. It's a fun way to spend an idle evening, and last night I set up a little script that could generate random line drawings using my little <a href="https://github.com/sonictherocketman/pdraw">pdraw</a> project from <a href="https://brianschrader.com/archive/generating-deterministic-procedural-artwork-with-pdraw/">a while back</a>. The script generates a new image every day and places it in a web-accessible place that I can then link to. This morning I finished up my little project by adding another script that can generate an RSS feed for the list of images and voila!</p>
<p>You can find <a href="/archive/drawing-of-the-day">each day's Drawing of the Day here</a>. The page also has its own, dedicated <a href="https://home.brianschrader.com/drawing-of-the-day/rss.xml">RSS Feed</a> so give that a follow if you're interested.</p>
<p>The script to generate all of this was a fun little experiment that involved <code>pdraw</code>, <code>imagemagick</code>, and <code>xvfb</code>. As with all bash projects it involves no shortage of little hacks (including but not limited to a manual, string-joining, feed-generator function). Overall its a great example of just how powerful simple tools can be.</p>
<p>As an aside, it was projects like this that were my original introduction to programming and to this day they continue to be one of the most fun parts of it for me. Don't get me wrong, I do enjoy building fully-fledged web apps, but throwing <a href="/archive/take-a-break-script-something/">little scripts together</a> is also a ton of fun. Hopefully you all enjoy these daily line drawings as much as I enjoyed making them available.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/reading-milestones-attention-spans-and-cool-charts</guid><pubDate>Mon, 24 Oct 2022 03:46:00 -0800</pubDate><category>productivity</category><category>apps</category><title>Reading Milestones, Attention Spans, and Cool Charts</title><link>http://brianschrader.com/archive/reading-milestones-attention-spans-and-cool-charts/</link><description><![CDATA[<p>Today marks a special occasion. According to my knowledge, I have read more books in 2022 than in any other single year of my life. Better yet, the previous three years are a high-water mark over most of the previous decade.</p>
<p><img class="image-center" src="/images/blog/book-track-3.png" alt="A chart from the iOS App Book Track depicting books read per year. 2022 is the highest." />
<center><caption><small>Charts via the excellent app <a href="https://apps.apple.com/us/app/book-tracker-bookshelf-log/id1491660771" title="Booktrack">Booktrack</a> for iOS/macOS</small></caption></center></p>
<p>As a kid I considered myself an average reader. In fact book reading was one of the very few homework assignments I occasionally completed. In high school I read a fairly significant amount of Science Fiction and Fantasy as well as the occasional book of Physics or Philosophy. Once I got to college though, my recreational reading slowly went by the wayside until the end of my senior year and the year that followed. Over the intervening years I've slowly recovered my habit of reading regularly. However, as you can see something changed in 2020 (something quite obvious to everyone).</p>
<p>With significantly more idle time during the early COVID lockdowns, my recreational reading skyrocketed. I was reading at a pace my adult self had never known. In fact, until recently I'd assumed that 2020 would likely be a personal record, and one that would stay unbroken for a while. That turned out to not be the case!</p>
<h3>Tracking My Reading</h3>
<p>I recently described how <a href="/archive/step-counts-and-goal-setting/">I've tracked my steps</a> for over eight years, but until recently I'd never thought about tracking my reading habits. I tried using Goodreads for a while, but the whole social-network component of it never sat well with me. Additionally, I'd always wanted to have more access to statistics about which books I've purchased and which of those I've actually read. Goodreads can do this, but I never liked the feel of it. Enter Booktrack!</p>
<details>
  <summary>More charts</summary>

  <img class="image-center" src="/images/blog/book-track-1.png" alt="A chart from the iOS App Book Track depicting a summary of my reading lately." />

  <img class="image-center" src="/images/blog/book-track-2.png" alt="A chart from the iOS App Book Track depicting books read per day this week." />
</details>

<p>Booktrack is a really cool indie app that lets you keep track of your entire book collection. Importantly it is available for both iOS and macOS, and it provides me with some oh-so-lovely charts and statistics. I don't really have much more to say about the app other than it's great and you should try it, but yeah. It's great, and you should try it. What's more you'd be supporting an indie developer by doing so.</p>
<h3>Deliberate Acts of Reading</h3>
<p>Since graduating high school over a decade ago, my reading preferences have largely pivoted away from Sci-Fi and Fantasy and toward Non-Fiction, especially history, politics, and public policy. That said my love of Fantasy never died, I just stopped reading it; instead I listened to it.</p>
<p>Now, I consider listening to audiobooks to be fundamentally equivalent to reading physical books in almost every way. For me though, the act of sitting down to read a book, as opposed to listening while doing something else, is a much more conscious and deliberate act. I've recently gone back to reading Fiction again. I've done this partly to give myself a break from Non-Fiction, and partially to rediscover the joy of actually reading fiction with my eyeballs.</p>
<p>I still love listening to books and I will of course continue to do so, but sitting down with a book is a fundamentally different activity than listening to one. Like many people I've found my own attention span shrinking as I spend more and more time online. I think that's a bad thing, and I think sitting down with a book helps me re-expand that attention span where listening to a book doesn't (for me at least). These past three years then have been not just a personal milestone for me in terms of my ability to read more books, but they've also been a conscious exercise in expanding my own attention span and improving my ability to think. Both of those are important metrics to track in this distraction-filled time we live in.</p>
<h3>Watersheds</h3>
<p>I know many people might look at my reading statistics and laugh. Nineteen books might not seem like a lot to some, but it's a ton for me, and while I'll never truly be able to recover my book-reading numbers from before 2020 &mdash; and especially not from a decade ago &mdash; I am fairly confident that I'm correct when I say 2022 has truly been a great year for my reading habits. Let's hope the trend continues and I don't fall of the train anytime soon.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/stargazing-pictures</guid><pubDate>Sun, 04 Sep 2022 17:21:00 -0800</pubDate><category>photography</category><category>space</category><title>Stargazing Pictures</title><link>http://brianschrader.com/archive/stargazing-pictures/</link><description><![CDATA[<p>Last night I went stargazing with a few friends, and while the weather did conspire against us we did get a few good chances to see the stars through a friend's telescope. The photos through the telescope are no where near as good as the actual sights, but that's largely because we didn't bring any camera equipment. With time, practice, and proper gear, we'd likely have done a lot better. That said, w e also took some pictures just with our phones and the results were a lot more impressive than any of us expected.</p>
<p><img
    alt="A shot of stars through the lens of a telescope"
    class="image-center"
    style="max-width: 350px;"
    src="/images/blog/telescope-stars.jpeg"
/>
<center><small>
    This is the best shot I could get through the telescope eyepiece with my phone. The actual view was great, but the pictures: not so much.
</small></center></p>
<div style="display:flex; justify-content:center; flex-wrap:wrap;">

    <div style="flex:1;">
        <img
            alt="A shot of a starfield and clouds through my iphone camera"
            style="min-width: 200px;"
            class="image-center"
            src="/images/blog/star-field.jpeg"
        />
        <center><small>
            A shot of the night sky with just my iPhone on a 10-second exposure.
        </small></center>
    </div>
    <div style="flex:1;">
        <img
            alt="Another shot of a starfield and clouds through my iphone camera"
            class="image-center"
            style="min-width: 200px;"
            src="/images/blog/star-field-2.jpeg"
        />
        <center><small>
            Turns out that the cameras on our phones are very, very good.
        </small></center>
    </div>
</div>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/step-counts-and-goal-setting</guid><pubDate>Mon, 29 Aug 2022 23:13:00 -0800</pubDate><category>programming</category><category>ios</category><category>productivity</category><category></category><title>Step Counts and Goal-Setting</title><link>http://brianschrader.com/archive/step-counts-and-goal-setting/</link><description><![CDATA[<p>In yet more at-home-data-science, I recently decided to take a look at my step count history and see what insights I could gain from visualizing the data. I've been using <a href="https://pedometer.app">Pedometer++</a> to track my daily step count since 2014 and the app conveniently provides a CSV export of all of your daily step totals as well as other related data like distance and floors climbed. I think the results of my investigation are pretty interesting and yield some important insights.</p>
<p>First off, I simply plotted the entire data set to see what it showed. There were three things I noticed immediately.</p>
<p><a href="https://gist.github.com/Sonictherocketman/54ac8666460ec5c121f9d5da1ab139c2"><img alt="A chart generated by an R Script that plots my step count since 2014" src="/images/blog/step-counts-all-time.png" /></a></p>
<ol>
<li>
<p>Lossy Data:<br />You may notice that there are several holes in the data. This is because originally, I used Pedometer++ very infrequently. I didn't set a daily goal and I didn't open the app very often. This meant that &mdash; after a while &mdash; iOS stopped launching the app in the background to collect step data and at one point offloaded the app from my phone to free space.</p>
</li>
<li>
<p>Two Very Tall Spikes:<br />I love seeing immediately identifiable trends in data, and those two spikes intrigued me. The first is my <a href="/archive/hiking-the-pacific-crest-trail/">hike along a section of the PCT</a> and the other is my trip to Barcelona and Paris in 2019.</p>
</li>
<li>
<p>A Sudden Section of Stability:<br />This third section is probably the most interesting for our purposes here. During 2021 I decided to start taking my daily walks more seriously. I'd been going on at least one walk per day, but I finally decided to <b>start setting a goal</b> and trying to meet it every single day.</p>
</li>
</ol>
<p>You may also notice the red lines at the bottom of the chart: these are any string of days during which I exceeded my goal (more on that soon). The brown line is the daily goal value itself.</p>
<h3>Setting Attainable Goals</h3>
<p>I've talked <a href="/archive/arbitrary-achievement-unlocked/">before about how I set arbitrary deadlines and goals for myself</a>. Usually this is done for client projects or my own apps, but importantly it's a thing I do for personal goals too. In the post I wrote this:</p>
<blockquote>
<p>I create artificial deadlines and goals, <strong>sometimes completely arbitrarily</strong>. Often times, I'll just pick a date on the calendar based on nothing but gut intuition, and then I change it later if necessary.</p>
</blockquote>
<p>Back in 2021 I wanted to get more rigorous with my daily walks. I wanted to set a goal for myself and make sure I was meeting it as often as possible. This is important. Originally I had considered trying to meet the default in-app goal of 10,000 steps per day. This is a very common step goal for apps and services to suggest because it's a nice, big, round number. But I didn't do that. I went with a much more modest 6,000 steps as my goal.</p>
<p>The reason for this is simple. Like I said I wanted to meet this goal as often as possible &mdash; preferably every day. 10,000 steps is a lot to cram into a single day. I routinely surpass 10,000 but I am nowhere close to hitting it every day.</p>
<p>This goal-setting <a href="/archive/unbounded-possibility-is-bad-for-productivity/">is important</a>. Meeting a goal can be inspiring, but <i>not meeting it</i> is the opposite, and can be disincentivizing. With a goal too high it can be preferable to give up early rather than to try and fail. This runs counter to my goal: walk more. Giving up is bad, and so I wanted to minimize the amount of times I do it. 6,000 steps has been a good number for me because I routinely find myself around 1,000 steps short in the evening, which <i>incentivizes me</i> to go for a walk, which is what I want. And in a positive development, I ended up raising the goal in 2022 to 6,500 steps!</p>
<h3>Additional Insights</h3>
<p>What's perhaps most interesting to me is what happens when we zoom in on the 2021-2022 section of the data (after I set a daily step goal). Not only does the data become much more consistent because I checked the app daily, but it becomes incredibly regular. The 30-day rolling average (plotted in green) is very close to the daily goal, which implies that if we ignore the extreme days I'm pretty good at meeting my goals. The red streak line at the bottom also helps illustrate this.</p>
<p><a href="https://gist.github.com/Sonictherocketman/54ac8666460ec5c121f9d5da1ab139c2"><img alt="A chart generated by an R Script that plots my step count since mid-2021" src="/images/blog/step-counts-2022.png" /></a></p>
<p>I also notice that my rolling average is down this year which is something I wasn't expecting! If it continues like this I will be missing my goal regularly, which is bad. Insights like this have helped motivate me to improve and stay on top of my walking schedule.</p>
<p>If there's one thing I can share from this little experiment, it's this: set arbitrary goals, then celebrate once you've hit them.</p>]]></description></item><item><guid isPermaLink="true">http://brianschrader.com/archive/fun-with-math-calculating-multiplicative-persistence</guid><pubDate>Sun, 28 Aug 2022 23:27:00 -0800</pubDate><category>programming</category><category>tools</category><category>python</category><category>software</category><title>Fun with Math: Calculating Multiplicative Persistence</title><link>http://brianschrader.com/archive/fun-with-math-calculating-multiplicative-persistence/</link><description><![CDATA[<p>I mentioned recently that one of my Raspberry Pis is mounted under my desk <a href="/archive/whether-to-monitor-the-weather-and-more/">and tracking the weather</a>, and I've written other times about the <a href="/archive/building-a-personalized-newsletter-with-bash-and-a-raspberry-pi/">other tasks</a> this helpful little assistant handles for me. Today I'd like to discuss yet <em>another</em> thing that little RPi does all day &mdash; something I've been pretty excited about for some time.</p>
<p>But first we need to talk about a thing called Multiplicative Persistence.</p>
<h3>What is that?</h3>
<p>Put very simply, Multiplicative Persistence is a little number trick you can play with integers. Here's how it works:</p>
<ol>
<li>Take any number</li>
<li>Multiple the digits of the number together</li>
<li>If this number is greater than 9, do it again. Counting the number of times you do the process.<pre><code>467 -&gt; 4 x 6 x 7 = 168 (1)
168 -&gt; 1 x 6 x 8 = 48  (2)
48  -&gt; 4 x 8     = 32  (3)
32  -&gt; 3 x 2     = 6   (4)
</code></pre>
</li>
</ol>
<p><b>Result:</b> 467 has a multiplicative persistence of 4</p>
<p>The goal is to find the smallest number with the greatest persistence value. The current largest persistence ever found is 11 and the smallest number is 277777788888899.</p>
<p><a href="https://www.youtube.com/watch?v=Wim9WJeDTHQ"><img alt="What's special about 277777788888899? - Numberphile" src="/images/blog/222777-mp.jpg" /></a>
<center><small>You can learn more about Multiplicative Persistence by watching this great video from Numberphile.</small></center></p>
<h3>What does this have to do with my Raspberry Pi?</h3>
<p>I thought it would be fun to write a little script to calculate the known values with the smallest persistences. There are lots of little tricks you can do to speed up your script (so that you don't have to check every single value), and it was a fun little evening project. Then in June I swapped out the script for a new version that used more of the RPi's cores to speed things up a bit.</p>
<p>The script has been running (nearly) continuously <strong>since February</strong>, and by my estimates it will reach the current largest persistence value by the end of the year.</p>
<p>The script sends me a push notification (via <a href="/archive/using-pushover-for-super-simple-sysadmin-alerts/">Pushover</a>) whenever it reaches a new persistence value &mdash; which is very exciting. I can't wait to get the next notification because that will mean the script has fulfilled its purpose: finding the largest known value.</p>
<h3>Next Steps</h3>
<p>For no reason whatsoever, after the script reaches the current largest known value I'm going to turn it loose on some truly enormous numbers to see if it can find the next largest value.</p>
<p>Currently it is theorized that 11 is the largest persistence possible (among all base 10 integers), and according to Matt Parker (in the video) mathematicians have already checked every value with less than <strong>233 digits</strong><sup>1</sup>, but still there are a lot more numbers to check.</p>
<p>Why? Because it's fun.<sup>2</sup></p>
<p><a href="https://gist.github.com/Sonictherocketman/49361941c730b31fe5b822d8bbb1d945">Check out the code here &#8594;</a></p>
<div class="footnote" style="word-wrap: anywhere;">
<p><sup>1</sup> That's a number that looks like this: <br />
17,944,722,797,467,451,413,885,553,670,907,289,754,932,820,893,589,746,032,750,117,948,680,440,041,708,054,016,996,924,802,613,696,647,178,385,842,833,715,379,727,704,254,519,961,954,721,643,715,078,484,056,283,131,636,661,502,157,729,434,338,946,533,866,675,014,605,168,434,933,154,729,236,329,910,303,053,227</p>
<p><sup>2</sup> Because of some local changes to where San Diego's power comes from, all this computation is powered by 100% clean and renewable energy, so I don't feel bad wasting this (admittedly minute) power for nonsense like this.</p>
</div>]]></description></item></channel></rss>